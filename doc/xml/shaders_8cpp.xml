<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="shaders_8cpp" kind="file" language="C++">
    <compoundname>shaders.cpp</compoundname>
    <includes refid="shaders_8h" local="yes">shaders.h</includes>
    <includes refid="trace_8h" local="yes">trace.h</includes>
    <includes refid="color_8h" local="yes">color.h</includes>
    <incdepgraph>
      <node id="18158">
        <label>/Users/pthalamy/Desktop/VSimRef/VisibleSim/simulatorCore/src/shaders.cpp</label>
        <link refid="shaders.cpp"/>
        <childnode refid="18159" relation="include">
        </childnode>
        <childnode refid="18174" relation="include">
        </childnode>
        <childnode refid="18175" relation="include">
        </childnode>
      </node>
      <node id="18168">
        <label>matrice44.h</label>
        <link refid="matrice44_8h"/>
        <childnode refid="18164" relation="include">
        </childnode>
        <childnode refid="18162" relation="include">
        </childnode>
        <childnode refid="18163" relation="include">
        </childnode>
        <childnode refid="18169" relation="include">
        </childnode>
        <childnode refid="18170" relation="include">
        </childnode>
      </node>
      <node id="18159">
        <label>shaders.h</label>
        <link refid="shaders_8h"/>
        <childnode refid="18160" relation="include">
        </childnode>
        <childnode refid="18161" relation="include">
        </childnode>
        <childnode refid="18162" relation="include">
        </childnode>
        <childnode refid="18163" relation="include">
        </childnode>
        <childnode refid="18164" relation="include">
        </childnode>
        <childnode refid="18165" relation="include">
        </childnode>
        <childnode refid="18166" relation="include">
        </childnode>
        <childnode refid="18167" relation="include">
        </childnode>
        <childnode refid="18168" relation="include">
        </childnode>
        <childnode refid="18173" relation="include">
        </childnode>
      </node>
      <node id="18170">
        <label>vecteur.h</label>
        <link refid="vecteur_8h"/>
        <childnode refid="18162" relation="include">
        </childnode>
        <childnode refid="18163" relation="include">
        </childnode>
        <childnode refid="18171" relation="include">
        </childnode>
        <childnode refid="18172" relation="include">
        </childnode>
      </node>
      <node id="18161">
        <label>stdlib.h</label>
      </node>
      <node id="18171">
        <label>cmath</label>
      </node>
      <node id="18164">
        <label>GL/glew.h</label>
      </node>
      <node id="18172">
        <label>memory.h</label>
      </node>
      <node id="18163">
        <label>fstream</label>
      </node>
      <node id="18167">
        <label>GL/glu.h</label>
      </node>
      <node id="18173">
        <label>camera.h</label>
        <link refid="camera_8h"/>
        <childnode refid="18169" relation="include">
        </childnode>
        <childnode refid="18170" relation="include">
        </childnode>
        <childnode refid="18168" relation="include">
        </childnode>
      </node>
      <node id="18165">
        <label>GL/freeglut.h</label>
      </node>
      <node id="18169">
        <label>math.h</label>
      </node>
      <node id="18175">
        <label>color.h</label>
        <link refid="color_8h"/>
        <childnode refid="18162" relation="include">
        </childnode>
        <childnode refid="18163" relation="include">
        </childnode>
        <childnode refid="18171" relation="include">
        </childnode>
        <childnode refid="18172" relation="include">
        </childnode>
        <childnode refid="18159" relation="include">
        </childnode>
      </node>
      <node id="18162">
        <label>iostream</label>
      </node>
      <node id="18174">
        <label>trace.h</label>
        <link refid="trace_8h"/>
        <childnode refid="18163" relation="include">
        </childnode>
      </node>
      <node id="18166">
        <label>GL/gl.h</label>
      </node>
      <node id="18160">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="shaders_8cpp_1a8cdff46bb835a14576272b3928bc3164" prot="public" static="no" mutable="no">
        <type>GLuint</type>
        <definition>GLuint depth_tex</definition>
        <argsstring></argsstring>
        <name>depth_tex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/pthalamy/Desktop/VSimRef/VisibleSim/simulatorCore/src/shaders.cpp" line="5" column="1" bodyfile="/Users/pthalamy/Desktop/VSimRef/VisibleSim/simulatorCore/src/shaders.cpp" bodystart="5" bodyend="-1"/>
        <referencedby refid="shaders_8h_1a9f0fe0c105c553fe28c933db8169ef60" compoundref="shaders_8cpp" startline="84" endline="135">initShaders</referencedby>
        <referencedby refid="shaders_8h_1af9bd99e5de0905f53b874be82f95c890" compoundref="shaders_8cpp" startline="172" endline="234">shadowedRenderingStep3</referencedby>
      </memberdef>
      <memberdef kind="variable" id="shaders_8cpp_1ab2b85dfa9f39c4f325881646b9f8cb99" prot="public" static="no" mutable="no">
        <type>GLuint</type>
        <definition>GLuint id_fb</definition>
        <argsstring></argsstring>
        <name>id_fb</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/pthalamy/Desktop/VSimRef/VisibleSim/simulatorCore/src/shaders.cpp" line="5" column="1" bodyfile="/Users/pthalamy/Desktop/VSimRef/VisibleSim/simulatorCore/src/shaders.cpp" bodystart="5" bodyend="-1"/>
        <referencedby refid="shaders_8h_1a9f0fe0c105c553fe28c933db8169ef60" compoundref="shaders_8cpp" startline="84" endline="135">initShaders</referencedby>
        <referencedby refid="shaders_8h_1a49ff67a56fb37eacb4551dd6933497b2" compoundref="shaders_8cpp" startline="137" endline="154">shadowedRenderingStep1</referencedby>
      </memberdef>
      <memberdef kind="variable" id="shaders_8cpp_1a89f2b22fba48d52b413f7b314aae8669" prot="public" static="no" mutable="no">
        <type>GLuint</type>
        <definition>GLuint color_rb</definition>
        <argsstring></argsstring>
        <name>color_rb</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/pthalamy/Desktop/VSimRef/VisibleSim/simulatorCore/src/shaders.cpp" line="5" column="1" bodyfile="/Users/pthalamy/Desktop/VSimRef/VisibleSim/simulatorCore/src/shaders.cpp" bodystart="5" bodyend="-1"/>
        <referencedby refid="shaders_8h_1a9f0fe0c105c553fe28c933db8169ef60" compoundref="shaders_8cpp" startline="84" endline="135">initShaders</referencedby>
      </memberdef>
      <memberdef kind="variable" id="shaders_8cpp_1a3917e34d1ef69d1aeea712f076695d35" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool useShaders</definition>
        <argsstring></argsstring>
        <name>useShaders</name>
        <initializer>=true</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/pthalamy/Desktop/VSimRef/VisibleSim/simulatorCore/src/shaders.cpp" line="6" column="1" bodyfile="/Users/pthalamy/Desktop/VSimRef/VisibleSim/simulatorCore/src/shaders.cpp" bodystart="6" bodyend="-1"/>
        <referencedby refid="shaders_8h_1af9bd99e5de0905f53b874be82f95c890" compoundref="shaders_8cpp" startline="172" endline="234">shadowedRenderingStep3</referencedby>
        <referencedby refid="shaders_8h_1a62d537ef26b63ed424b004964eeaf587" compoundref="shaders_8cpp" startline="236" endline="247">shadowedRenderingStep4</referencedby>
      </memberdef>
      <memberdef kind="variable" id="shaders_8cpp_1a542fc79ea346963d170ca211c653d154" prot="public" static="no" mutable="no">
        <type>GLhandleARB</type>
        <definition>GLhandleARB shadersProgram</definition>
        <argsstring></argsstring>
        <name>shadersProgram</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/pthalamy/Desktop/VSimRef/VisibleSim/simulatorCore/src/shaders.cpp" line="7" column="1" bodyfile="/Users/pthalamy/Desktop/VSimRef/VisibleSim/simulatorCore/src/shaders.cpp" bodystart="7" bodyend="-1"/>
        <referencedby refid="shaders_8h_1a9f0fe0c105c553fe28c933db8169ef60" compoundref="shaders_8cpp" startline="84" endline="135">initShaders</referencedby>
        <referencedby refid="shaders_8h_1af9bd99e5de0905f53b874be82f95c890" compoundref="shaders_8cpp" startline="172" endline="234">shadowedRenderingStep3</referencedby>
      </memberdef>
      <memberdef kind="variable" id="shaders_8cpp_1a78ba9312e74da7c35b9c19ef9c559f79" prot="public" static="no" mutable="no">
        <type>GLint</type>
        <definition>GLint locTex</definition>
        <argsstring></argsstring>
        <name>locTex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/pthalamy/Desktop/VSimRef/VisibleSim/simulatorCore/src/shaders.cpp" line="8" column="1" bodyfile="/Users/pthalamy/Desktop/VSimRef/VisibleSim/simulatorCore/src/shaders.cpp" bodystart="8" bodyend="-1"/>
        <referencedby refid="shaders_8h_1a9f0fe0c105c553fe28c933db8169ef60" compoundref="shaders_8cpp" startline="84" endline="135">initShaders</referencedby>
        <referencedby refid="shaders_8h_1af9bd99e5de0905f53b874be82f95c890" compoundref="shaders_8cpp" startline="172" endline="234">shadowedRenderingStep3</referencedby>
      </memberdef>
      <memberdef kind="variable" id="shaders_8cpp_1a2fbf765f5879eb4e5871142e7bd43610" prot="public" static="no" mutable="no">
        <type>GLint</type>
        <definition>GLint locShadowMap</definition>
        <argsstring></argsstring>
        <name>locShadowMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/pthalamy/Desktop/VSimRef/VisibleSim/simulatorCore/src/shaders.cpp" line="8" column="1" bodyfile="/Users/pthalamy/Desktop/VSimRef/VisibleSim/simulatorCore/src/shaders.cpp" bodystart="8" bodyend="-1"/>
        <referencedby refid="shaders_8h_1a9f0fe0c105c553fe28c933db8169ef60" compoundref="shaders_8cpp" startline="84" endline="135">initShaders</referencedby>
        <referencedby refid="shaders_8h_1af9bd99e5de0905f53b874be82f95c890" compoundref="shaders_8cpp" startline="172" endline="234">shadowedRenderingStep3</referencedby>
      </memberdef>
      <memberdef kind="variable" id="shaders_8cpp_1a5e691d1028d74449fcacb9b86d04ee52" prot="public" static="no" mutable="no">
        <type>GLint</type>
        <definition>GLint locTextureEnable</definition>
        <argsstring></argsstring>
        <name>locTextureEnable</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/pthalamy/Desktop/VSimRef/VisibleSim/simulatorCore/src/shaders.cpp" line="8" column="1" bodyfile="/Users/pthalamy/Desktop/VSimRef/VisibleSim/simulatorCore/src/shaders.cpp" bodystart="8" bodyend="-1"/>
        <referencedby refid="shaders_8h_1ad58a09386c647aeb2f68f329c8b11ef7" compoundref="shaders_8cpp" startline="10" endline="12">enableTexture</referencedby>
        <referencedby refid="shaders_8h_1a9f0fe0c105c553fe28c933db8169ef60" compoundref="shaders_8cpp" startline="84" endline="135">initShaders</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="shaders_8cpp_1ad58a09386c647aeb2f68f329c8b11ef7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void enableTexture</definition>
        <argsstring>(bool enable)</argsstring>
        <name>enableTexture</name>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/pthalamy/Desktop/VSimRef/VisibleSim/simulatorCore/src/shaders.cpp" line="10" column="1" bodyfile="/Users/pthalamy/Desktop/VSimRef/VisibleSim/simulatorCore/src/shaders.cpp" bodystart="10" bodyend="12"/>
        <references refid="shaders_8cpp_1a5e691d1028d74449fcacb9b86d04ee52" compoundref="shaders_8cpp" startline="8">locTextureEnable</references>
        <referencedby refid="class_blinky_blocks_1_1_blinky_blocks_world_1ae69a6e579fa7f2ccb4cbe2c198406a0b" compoundref="blinky_blocks_world_8cpp" startline="215" endline="305">BlinkyBlocks::BlinkyBlocksWorld::glDraw</referencedby>
        <referencedby refid="class_catoms2_d_1_1_catoms2_d_world_1a238872d89617dabeba689c8f258c0ad7" compoundref="catoms2_d_world_8cpp" startline="310" endline="409">Catoms2D::Catoms2DWorld::glDraw</referencedby>
        <referencedby refid="class_obj_loader_1_1_mtl_1abdb1811df00f5c185b0045ec1c41eb1e" compoundref="obj_loader_8cpp" startline="746" endline="763">ObjLoader::Mtl::glBind</referencedby>
        <referencedby refid="class_robot_blocks_1_1_robot_blocks_world_1a5d3615b685f6a22859f923dee83a7089" compoundref="robot_blocks_world_8cpp" startline="238" endline="331">RobotBlocks::RobotBlocksWorld::glDraw</referencedby>
      </memberdef>
      <memberdef kind="function" id="shaders_8cpp_1a29c554a127bc3aa1329134d7aad85770" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLcharARB *</type>
        <definition>GLcharARB* lectureCodeShader</definition>
        <argsstring>(const char *titre)</argsstring>
        <name>lectureCodeShader</name>
        <param>
          <type>const char *</type>
          <declname>titre</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/pthalamy/Desktop/VSimRef/VisibleSim/simulatorCore/src/shaders.cpp" line="14" column="1" bodyfile="/Users/pthalamy/Desktop/VSimRef/VisibleSim/simulatorCore/src/shaders.cpp" bodystart="14" bodyend="32"/>
        <referencedby refid="shaders_8cpp_1a2c06e1e24bcef3fe01890aa7fbc4f868" compoundref="shaders_8cpp" startline="34" endline="82">loadShader</referencedby>
      </memberdef>
      <memberdef kind="function" id="shaders_8cpp_1a2c06e1e24bcef3fe01890aa7fbc4f868" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLhandleARB</type>
        <definition>GLhandleARB loadShader</definition>
        <argsstring>(const char *titreVP, const char *titreFP)</argsstring>
        <name>loadShader</name>
        <param>
          <type>const char *</type>
          <declname>titreVP</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>titreFP</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/pthalamy/Desktop/VSimRef/VisibleSim/simulatorCore/src/shaders.cpp" line="34" column="1" bodyfile="/Users/pthalamy/Desktop/VSimRef/VisibleSim/simulatorCore/src/shaders.cpp" bodystart="34" bodyend="82"/>
        <references refid="shaders_8cpp_1a29c554a127bc3aa1329134d7aad85770" compoundref="shaders_8cpp" startline="14" endline="32">lectureCodeShader</references>
        <references refid="trace_8h_1a6667b9548cdadbd55cabd90840a4edeb" compoundref="trace_8h" startline="18">ERRPUT</references>
        <references refid="trace_8h_1a61a3c9a18380aafb6e430e79bf596557" compoundref="trace_8h" startline="17">OUTPUT</references>
        <references refid="shaders_8cpp_1aa1d4ce989e358999ca04e57b6843ef4b" compoundref="shaders_8cpp" startline="249" endline="269">shaderCompilationStatus</references>
        <referencedby refid="shaders_8h_1a9f0fe0c105c553fe28c933db8169ef60" compoundref="shaders_8cpp" startline="84" endline="135">initShaders</referencedby>
      </memberdef>
      <memberdef kind="function" id="shaders_8cpp_1a9f0fe0c105c553fe28c933db8169ef60" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void initShaders</definition>
        <argsstring>()</argsstring>
        <name>initShaders</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/pthalamy/Desktop/VSimRef/VisibleSim/simulatorCore/src/shaders.cpp" line="84" column="1" bodyfile="/Users/pthalamy/Desktop/VSimRef/VisibleSim/simulatorCore/src/shaders.cpp" bodystart="84" bodyend="135"/>
        <references refid="trace_8h_1a61a3c9a18380aafb6e430e79bf596557" compoundref="trace_8h" startline="17">OUTPUT</references>
        <references refid="shaders_8cpp_1a542fc79ea346963d170ca211c653d154" compoundref="shaders_8cpp" startline="7">shadersProgram</references>
        <references refid="shaders_8cpp_1a2c06e1e24bcef3fe01890aa7fbc4f868" compoundref="shaders_8cpp" startline="34" endline="82">loadShader</references>
        <references refid="shaders_8cpp_1a78ba9312e74da7c35b9c19ef9c559f79" compoundref="shaders_8cpp" startline="8">locTex</references>
        <references refid="trace_8h_1a6667b9548cdadbd55cabd90840a4edeb" compoundref="trace_8h" startline="18">ERRPUT</references>
        <references refid="shaders_8cpp_1a2fbf765f5879eb4e5871142e7bd43610" compoundref="shaders_8cpp" startline="8">locShadowMap</references>
        <references refid="shaders_8cpp_1a5e691d1028d74449fcacb9b86d04ee52" compoundref="shaders_8cpp" startline="8">locTextureEnable</references>
        <references refid="shaders_8cpp_1ab2b85dfa9f39c4f325881646b9f8cb99" compoundref="shaders_8cpp" startline="5">id_fb</references>
        <references refid="shaders_8cpp_1a8cdff46bb835a14576272b3928bc3164" compoundref="shaders_8cpp" startline="5">depth_tex</references>
        <references refid="shaders_8cpp_1a89f2b22fba48d52b413f7b314aae8669" compoundref="shaders_8cpp" startline="5">color_rb</references>
        <referencedby refid="class_glut_context_1af7c696b73b0ea2e3a46412c9528e0ee8" compoundref="opengl_viewer_8cpp" startline="42" endline="87">GlutContext::init</referencedby>
      </memberdef>
      <memberdef kind="function" id="shaders_8cpp_1a49ff67a56fb37eacb4551dd6933497b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void shadowedRenderingStep1</definition>
        <argsstring>(Camera *camera)</argsstring>
        <name>shadowedRenderingStep1</name>
        <param>
          <type><ref refid="class_camera" kindref="compound">Camera</ref> *</type>
          <declname>camera</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/pthalamy/Desktop/VSimRef/VisibleSim/simulatorCore/src/shaders.cpp" line="137" column="1" bodyfile="/Users/pthalamy/Desktop/VSimRef/VisibleSim/simulatorCore/src/shaders.cpp" bodystart="137" bodyend="154"/>
        <references refid="shaders_8cpp_1ab2b85dfa9f39c4f325881646b9f8cb99" compoundref="shaders_8cpp" startline="5">id_fb</references>
        <references refid="class_camera_1a2acac692956489f3b291b41c0238d82d" compoundref="camera_8h" startline="54">Camera::ls</references>
        <references refid="class_light_source_1a0545b1a75881effbc71d1c97904da346" compoundref="camera_8h" startline="38">LightSource::matP</references>
        <references refid="class_light_source_1a27be987a6695466b46318c31a9a7aa4e" compoundref="camera_8h" startline="38">LightSource::matMV</references>
        <referencedby refid="class_glut_context_1ac663fcc1336e9a9f3c7a89471e333772" compoundref="opengl_viewer_8cpp" startline="108" endline="123">GlutContext::reshapeFunc</referencedby>
      </memberdef>
      <memberdef kind="function" id="shaders_8cpp_1aa23ae66ab14f690bb86cdfa4bb191956" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void shadowedRenderingStep2</definition>
        <argsstring>(int w, int h)</argsstring>
        <name>shadowedRenderingStep2</name>
        <param>
          <type>int</type>
          <declname>w</declname>
        </param>
        <param>
          <type>int</type>
          <declname>h</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/pthalamy/Desktop/VSimRef/VisibleSim/simulatorCore/src/shaders.cpp" line="156" column="1" bodyfile="/Users/pthalamy/Desktop/VSimRef/VisibleSim/simulatorCore/src/shaders.cpp" bodystart="156" bodyend="170"/>
        <referencedby refid="class_glut_context_1ac663fcc1336e9a9f3c7a89471e333772" compoundref="opengl_viewer_8cpp" startline="108" endline="123">GlutContext::reshapeFunc</referencedby>
      </memberdef>
      <memberdef kind="function" id="shaders_8cpp_1af9bd99e5de0905f53b874be82f95c890" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void shadowedRenderingStep3</definition>
        <argsstring>(Camera *camera)</argsstring>
        <name>shadowedRenderingStep3</name>
        <param>
          <type><ref refid="class_camera" kindref="compound">Camera</ref> *</type>
          <declname>camera</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/pthalamy/Desktop/VSimRef/VisibleSim/simulatorCore/src/shaders.cpp" line="172" column="1" bodyfile="/Users/pthalamy/Desktop/VSimRef/VisibleSim/simulatorCore/src/shaders.cpp" bodystart="172" bodyend="234"/>
        <references refid="class_camera_1aaf55ae7f5f95e6c45332fb33b8db9fe5" compoundref="camera_8cpp" startline="95" endline="97">Camera::glProjection</references>
        <references refid="class_camera_1ac4c7f5e91786f418464392df8c7a140e" compoundref="camera_8cpp" startline="78" endline="80">Camera::glLookAt</references>
        <references refid="class_matrice_1a2a3e43dbf203b548d2da12164c567538" compoundref="matrice44_8cpp" startline="106" endline="127">Matrice::inverse</references>
        <references refid="class_camera_1a2acac692956489f3b291b41c0238d82d" compoundref="camera_8h" startline="54">Camera::ls</references>
        <references refid="class_light_source_1a0545b1a75881effbc71d1c97904da346" compoundref="camera_8h" startline="38">LightSource::matP</references>
        <references refid="class_light_source_1a27be987a6695466b46318c31a9a7aa4e" compoundref="camera_8h" startline="38">LightSource::matMV</references>
        <references refid="class_matrice_1a94b8d27c9c99cce3183182d6a4b2495e" compoundref="matrice44_8h" startline="24">Matrice::m</references>
        <references refid="class_light_source_1ad274f58633ca90c5ede8ec0682928be0" compoundref="camera_8h" startline="35">LightSource::pos</references>
        <references refid="class_light_source_1af0c002c459c90c1dbdf2e30bc9998c8c" compoundref="camera_8h" startline="35">LightSource::dir</references>
        <references refid="class_light_source_1aee8435898de039ce5c8fc56dfa4f08dc" compoundref="camera_8h" startline="37">LightSource::falloffAngle</references>
        <references refid="color_8h_1a431bad54841fc93f8b7c65864da5c282">WHITE</references>
        <references refid="class_color_1a0aa2f69d2314f4008e35d03d5f66fcf8" compoundref="color_8h" startline="15">Color::rgba</references>
        <references refid="shaders_8cpp_1a3917e34d1ef69d1aeea712f076695d35" compoundref="shaders_8cpp" startline="6">useShaders</references>
        <references refid="shaders_8cpp_1a542fc79ea346963d170ca211c653d154" compoundref="shaders_8cpp" startline="7">shadersProgram</references>
        <references refid="shaders_8cpp_1a78ba9312e74da7c35b9c19ef9c559f79" compoundref="shaders_8cpp" startline="8">locTex</references>
        <references refid="shaders_8cpp_1a2fbf765f5879eb4e5871142e7bd43610" compoundref="shaders_8cpp" startline="8">locShadowMap</references>
        <references refid="shaders_8cpp_1a8cdff46bb835a14576272b3928bc3164" compoundref="shaders_8cpp" startline="5">depth_tex</references>
        <referencedby refid="class_glut_context_1ac663fcc1336e9a9f3c7a89471e333772" compoundref="opengl_viewer_8cpp" startline="108" endline="123">GlutContext::reshapeFunc</referencedby>
      </memberdef>
      <memberdef kind="function" id="shaders_8cpp_1a62d537ef26b63ed424b004964eeaf587" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void shadowedRenderingStep4</definition>
        <argsstring>()</argsstring>
        <name>shadowedRenderingStep4</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/pthalamy/Desktop/VSimRef/VisibleSim/simulatorCore/src/shaders.cpp" line="236" column="1" bodyfile="/Users/pthalamy/Desktop/VSimRef/VisibleSim/simulatorCore/src/shaders.cpp" bodystart="236" bodyend="247"/>
        <references refid="shaders_8cpp_1a3917e34d1ef69d1aeea712f076695d35" compoundref="shaders_8cpp" startline="6">useShaders</references>
        <referencedby refid="class_glut_context_1ac663fcc1336e9a9f3c7a89471e333772" compoundref="opengl_viewer_8cpp" startline="108" endline="123">GlutContext::reshapeFunc</referencedby>
      </memberdef>
      <memberdef kind="function" id="shaders_8cpp_1aa1d4ce989e358999ca04e57b6843ef4b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLint</type>
        <definition>GLint shaderCompilationStatus</definition>
        <argsstring>(GLhandleARB shader)</argsstring>
        <name>shaderCompilationStatus</name>
        <param>
          <type>GLhandleARB</type>
          <declname>shader</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/pthalamy/Desktop/VSimRef/VisibleSim/simulatorCore/src/shaders.cpp" line="249" column="1" bodyfile="/Users/pthalamy/Desktop/VSimRef/VisibleSim/simulatorCore/src/shaders.cpp" bodystart="249" bodyend="269"/>
        <references refid="trace_8h_1a61a3c9a18380aafb6e430e79bf596557" compoundref="trace_8h" startline="17">OUTPUT</references>
        <referencedby refid="shaders_8cpp_1a2c06e1e24bcef3fe01890aa7fbc4f868" compoundref="shaders_8cpp" startline="34" endline="82">loadShader</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="shaders_8h" kindref="compound">shaders.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="trace_8h" kindref="compound">trace.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="color_8h" kindref="compound">color.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5" refid="shaders_8cpp_1ab2b85dfa9f39c4f325881646b9f8cb99" refkind="member"><highlight class="normal">GLuint<sp/><ref refid="shaders_8cpp_1a8cdff46bb835a14576272b3928bc3164" kindref="member">depth_tex</ref>,<ref refid="shaders_8cpp_1ab2b85dfa9f39c4f325881646b9f8cb99" kindref="member">id_fb</ref>,<ref refid="shaders_8cpp_1a89f2b22fba48d52b413f7b314aae8669" kindref="member">color_rb</ref>;</highlight></codeline>
<codeline lineno="6" refid="shaders_8cpp_1a3917e34d1ef69d1aeea712f076695d35" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="shaders_8cpp_1a3917e34d1ef69d1aeea712f076695d35" kindref="member">useShaders</ref>=</highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7" refid="shaders_8cpp_1a542fc79ea346963d170ca211c653d154" refkind="member"><highlight class="normal">GLhandleARB<sp/><ref refid="shaders_8cpp_1a542fc79ea346963d170ca211c653d154" kindref="member">shadersProgram</ref>;</highlight></codeline>
<codeline lineno="8" refid="shaders_8cpp_1a5e691d1028d74449fcacb9b86d04ee52" refkind="member"><highlight class="normal">GLint<sp/><ref refid="shaders_8cpp_1a78ba9312e74da7c35b9c19ef9c559f79" kindref="member">locTex</ref>,<ref refid="shaders_8cpp_1a2fbf765f5879eb4e5871142e7bd43610" kindref="member">locShadowMap</ref>,<ref refid="shaders_8cpp_1a5e691d1028d74449fcacb9b86d04ee52" kindref="member">locTextureEnable</ref>;</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10" refid="shaders_8h_1ad58a09386c647aeb2f68f329c8b11ef7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="shaders_8cpp_1ad58a09386c647aeb2f68f329c8b11ef7" kindref="member">enableTexture</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enable)<sp/>{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/>glUniform1iARB(<ref refid="shaders_8cpp_1a5e691d1028d74449fcacb9b86d04ee52" kindref="member">locTextureEnable</ref>,enable);</highlight></codeline>
<codeline lineno="12"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14" refid="shaders_8cpp_1a29c554a127bc3aa1329134d7aad85770" refkind="member"><highlight class="normal">GLcharARB<sp/>*<ref refid="shaders_8cpp_1a29c554a127bc3aa1329134d7aad85770" kindref="member">lectureCodeShader</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>titre)</highlight></codeline>
<codeline lineno="15"><highlight class="normal">{<sp/>GLint<sp/>tailleFichier;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/>ifstream<sp/>fin(titre);</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!fin.is_open())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/>fin.seekg(0,<sp/>ios_base::end);</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/>tailleFichier<sp/>=<sp/>GLint(fin.tellg());</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/>fin.close();</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Memory<sp/>allocation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/>GLcharARB<sp/>*code<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>GLcharARB[tailleFichier+1];</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Load<sp/>shader<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/>fin.open(titre);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/>fin.read((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)code,<sp/>tailleFichier);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/>code[tailleFichier]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/>fin.close();</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>code;</highlight></codeline>
<codeline lineno="32"><highlight class="normal">}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="shaders_8cpp_1a2c06e1e24bcef3fe01890aa7fbc4f868" refkind="member"><highlight class="normal">GLhandleARB<sp/><ref refid="shaders_8cpp_1a2c06e1e24bcef3fe01890aa7fbc4f868" kindref="member">loadShader</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*titreVP,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*titreFP)<sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>GLhandleARB<sp/>VShader,FShader;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>GLcharARB*<sp/>code;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>GLhandleARB<sp/>prog;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="comment">//<sp/>create<sp/>an<sp/>Object<sp/>Shader<sp/>for<sp/>the<sp/>Vertex<sp/>Program</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>VShader<sp/>=<sp/>glCreateShaderObjectARB(GL_VERTEX_SHADER_ARB);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment">//<sp/>create<sp/>an<sp/>Object<sp/>Shader<sp/>for<sp/>the<sp/>Fragment<sp/>Program</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>FShader<sp/>=<sp/>glCreateShaderObjectARB(GL_FRAGMENT_SHADER_ARB);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="comment">//<sp/>loading<sp/>the<sp/>Vertex<sp/>Program<sp/>source</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>code<sp/>=<sp/><ref refid="shaders_8cpp_1a29c554a127bc3aa1329134d7aad85770" kindref="member">lectureCodeShader</ref>(titreVP);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!code)<sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="trace_8h_1a6667b9548cdadbd55cabd90840a4edeb" kindref="member">ERRPUT</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;error:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>titreVP<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>not<sp/>found.&quot;</highlight><highlight class="normal">&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(-1);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>glShaderSourceARB(VShader,<sp/>1,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLcharARB**)<sp/>&amp;code,<sp/>NULL);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Compile<sp/>the<sp/>Vertex<sp/>program</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="trace_8h_1a61a3c9a18380aafb6e430e79bf596557" kindref="member">OUTPUT</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Compilation<sp/>of<sp/>the<sp/>Vertex<sp/>Program&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>glCompileShaderARB(VShader);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="shaders_8cpp_1aa1d4ce989e358999ca04e57b6843ef4b" kindref="member">shaderCompilationStatus</ref>(VShader);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>code;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="comment">//<sp/>loading<sp/>the<sp/>Fragment<sp/>Program<sp/>source</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>code<sp/>=<sp/><ref refid="shaders_8cpp_1a29c554a127bc3aa1329134d7aad85770" kindref="member">lectureCodeShader</ref>(titreFP);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!code)<sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="trace_8h_1a6667b9548cdadbd55cabd90840a4edeb" kindref="member">ERRPUT</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;error:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>titreFP<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>not<sp/>found.&quot;</highlight><highlight class="normal">&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(-1);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>glShaderSourceARB(FShader,<sp/>1,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLcharARB**)<sp/>&amp;code,<sp/>NULL);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Compile<sp/>the<sp/>Fragment<sp/>program</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="trace_8h_1a61a3c9a18380aafb6e430e79bf596557" kindref="member">OUTPUT</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Compilation<sp/>of<sp/>the<sp/>Fragment<sp/>Program&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>glCompileShaderARB(FShader);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="shaders_8cpp_1aa1d4ce989e358999ca04e57b6843ef4b" kindref="member">shaderCompilationStatus</ref>(FShader);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>code;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Create<sp/>the<sp/>object<sp/>program</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>prog<sp/>=<sp/>glCreateProgramObjectARB();</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="comment">//<sp/>links</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>glAttachObjectARB(prog,<sp/>VShader);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>glAttachObjectARB(prog,<sp/>FShader);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="comment">//<sp/>linking</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>glLinkProgramARB(prog);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>prog;</highlight></codeline>
<codeline lineno="82"><highlight class="normal">}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84" refid="shaders_8h_1a9f0fe0c105c553fe28c933db8169ef60" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="shaders_8cpp_1a9f0fe0c105c553fe28c933db8169ef60" kindref="member">initShaders</ref>()<sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><ref refid="trace_8h_1a61a3c9a18380aafb6e430e79bf596557" kindref="member">OUTPUT</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;initShaders&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/>glewInit();</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/>glClearColor<sp/>(0.6f,<sp/>0.6f,<sp/>0.6f,<sp/>1.0f);<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Black<sp/>Background</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/>glClearDepth<sp/>(1.0f);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Depth<sp/>Buffer<sp/>Setup</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/>glDepthFunc<sp/>(GL_LEQUAL);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>Type<sp/>Of<sp/>Depth<sp/>Testing<sp/>(Less<sp/>Or<sp/>Equal)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/>glEnable<sp/>(GL_DEPTH_TEST);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Enable<sp/>Depth<sp/>Testing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/>glShadeModel<sp/>(GL_SMOOTH);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Select<sp/>Smooth<sp/>Shading</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/>glHint<sp/>(GL_PERSPECTIVE_CORRECTION_HINT,<sp/>GL_NICEST);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>Perspective<sp/>Calculations<sp/>To<sp/>Most<sp/>Accurate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><ref refid="shaders_8cpp_1a542fc79ea346963d170ca211c653d154" kindref="member">shadersProgram</ref><sp/>=<sp/><ref refid="shaders_8cpp_1a2c06e1e24bcef3fe01890aa7fbc4f868" kindref="member">loadShader</ref>(</highlight><highlight class="stringliteral">&quot;../../simulatorCore/shaders/pointtex.vert&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;../../simulatorCore/shaders/pointtex.frag&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/>glEnable(GL_CULL_FACE);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/>glCullFace(GL_BACK);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><ref refid="shaders_8cpp_1a78ba9312e74da7c35b9c19ef9c559f79" kindref="member">locTex</ref><sp/>=<sp/>glGetUniformLocationARB(<ref refid="shaders_8cpp_1a542fc79ea346963d170ca211c653d154" kindref="member">shadersProgram</ref>,<sp/></highlight><highlight class="stringliteral">&quot;tex&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="shaders_8cpp_1a78ba9312e74da7c35b9c19ef9c559f79" kindref="member">locTex</ref>==-1)<sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="trace_8h_1a6667b9548cdadbd55cabd90840a4edeb" kindref="member">ERRPUT</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;erreur<sp/>affectation<sp/>:<sp/>tex\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><ref refid="shaders_8cpp_1a2fbf765f5879eb4e5871142e7bd43610" kindref="member">locShadowMap</ref><sp/>=<sp/>glGetUniformLocationARB(<ref refid="shaders_8cpp_1a542fc79ea346963d170ca211c653d154" kindref="member">shadersProgram</ref>,<sp/></highlight><highlight class="stringliteral">&quot;shadowMap&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="shaders_8cpp_1a2fbf765f5879eb4e5871142e7bd43610" kindref="member">locShadowMap</ref><sp/>==-1)<sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="trace_8h_1a6667b9548cdadbd55cabd90840a4edeb" kindref="member">ERRPUT</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;erreur<sp/>affectation<sp/>:<sp/>shadowMap\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><ref refid="shaders_8cpp_1a5e691d1028d74449fcacb9b86d04ee52" kindref="member">locTextureEnable</ref><sp/>=<sp/>glGetUniformLocationARB(<ref refid="shaders_8cpp_1a542fc79ea346963d170ca211c653d154" kindref="member">shadersProgram</ref>,<sp/></highlight><highlight class="stringliteral">&quot;textureEnable&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="shaders_8cpp_1a5e691d1028d74449fcacb9b86d04ee52" kindref="member">locTextureEnable</ref><sp/><sp/>==-1)<sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="trace_8h_1a6667b9548cdadbd55cabd90840a4edeb" kindref="member">ERRPUT</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;erreur<sp/>affectation<sp/>:<sp/>textureEnable\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>texture<sp/>pour<sp/>le<sp/>shadow<sp/>mapping</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/>glGenFramebuffersEXT(1,<sp/>&amp;<ref refid="shaders_8cpp_1ab2b85dfa9f39c4f325881646b9f8cb99" kindref="member">id_fb</ref>);<sp/><sp/></highlight><highlight class="comment">//<sp/>identifiant<sp/>pour<sp/>la<sp/>texture</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/>glGenTextures(1,<sp/>&amp;<ref refid="shaders_8cpp_1a8cdff46bb835a14576272b3928bc3164" kindref="member">depth_tex</ref>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>a<sp/>new<sp/>texture<sp/>used<sp/>as<sp/>a<sp/>color<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/>glGenRenderbuffersEXT(1,<sp/>&amp;<ref refid="shaders_8cpp_1a89f2b22fba48d52b413f7b314aae8669" kindref="member">color_rb</ref>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>And<sp/>finaly<sp/>a<sp/>new<sp/>depthbuffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/>glBindFramebufferEXT(GL_FRAMEBUFFER_EXT,<ref refid="shaders_8cpp_1ab2b85dfa9f39c4f325881646b9f8cb99" kindref="member">id_fb</ref>);<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>switch<sp/>to<sp/>the<sp/>new<sp/>framebuffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>initialize<sp/>color<sp/>texture</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/>glBindTexture(GL_TEXTURE_2D,<sp/><ref refid="shaders_8cpp_1a8cdff46bb835a14576272b3928bc3164" kindref="member">depth_tex</ref>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Bind<sp/>the<sp/>colorbuffer<sp/>texture</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/>glTexParameterf(GL_TEXTURE_2D,<sp/>GL_TEXTURE_MIN_FILTER,<sp/>GL_LINEAR);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>make<sp/>it<sp/>linear<sp/>filterd</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/>glTexParameteri(GL_TEXTURE_2D,<sp/>GL_TEXTURE_MAG_FILTER,<sp/>GL_LINEAR);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/>glTexParameteri(GL_TEXTURE_2D,<sp/>GL_TEXTURE_WRAP_S,<sp/>GL_CLAMP);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/>glTexParameteri(GL_TEXTURE_2D,<sp/>GL_TEXTURE_WRAP_T,<sp/>GL_CLAMP);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/>glTexImage2D(<sp/>GL_TEXTURE_2D,<sp/>0,<sp/>GL_DEPTH_COMPONENT24,<sp/>2048,<sp/>2048,<sp/>0,<sp/>GL_DEPTH_COMPONENT,<sp/>GL_UNSIGNED_INT,<sp/>NULL<sp/>);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/>glFramebufferTexture2DEXT(GL_FRAMEBUFFER_EXT,GL_DEPTH_ATTACHMENT_EXT,GL_TEXTURE_2D,<sp/><ref refid="shaders_8cpp_1a8cdff46bb835a14576272b3928bc3164" kindref="member">depth_tex</ref>,<sp/>0);<sp/></highlight><highlight class="comment">//<sp/>attach<sp/>it<sp/>to<sp/>the<sp/>framebuffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>initialize<sp/>depth<sp/>renderbuffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/>glBindRenderbufferEXT(GL_RENDERBUFFER_EXT,<sp/><ref refid="shaders_8cpp_1a89f2b22fba48d52b413f7b314aae8669" kindref="member">color_rb</ref>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bind<sp/>the<sp/>depth<sp/>renderbuffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/>glRenderbufferStorageEXT(GL_RENDERBUFFER_EXT,GL_RGBA,2048,<sp/>2048);<sp/></highlight><highlight class="comment">//<sp/>get<sp/>the<sp/>data<sp/>space<sp/>for<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/>glFramebufferRenderbufferEXT(GL_FRAMEBUFFER_EXT,GL_COLOR_ATTACHMENT0_EXT,GL_RENDERBUFFER_EXT,<sp/><ref refid="shaders_8cpp_1a89f2b22fba48d52b413f7b314aae8669" kindref="member">color_rb</ref>);<sp/></highlight><highlight class="comment">//<sp/>bind<sp/>it<sp/>to<sp/>the<sp/>renderbuffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/>glBindFramebufferEXT(GL_FRAMEBUFFER_EXT,<sp/>0);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><ref refid="trace_8h_1a61a3c9a18380aafb6e430e79bf596557" kindref="member">OUTPUT</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Shaders<sp/>initialized.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="135"><highlight class="normal">}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137" refid="shaders_8h_1a49ff67a56fb37eacb4551dd6933497b2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="shaders_8cpp_1a49ff67a56fb37eacb4551dd6933497b2" kindref="member">shadowedRenderingStep1</ref>(<ref refid="class_camera" kindref="compound">Camera</ref><sp/>*camera)<sp/>{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>first<sp/>pass<sp/>:<sp/>create<sp/>the<sp/>shadow<sp/>map</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>glViewport<sp/>(0,<sp/>0,<sp/>2048,<sp/>2048);<sp/></highlight><highlight class="comment">//<sp/>viewport<sp/>at<sp/>the<sp/>texture<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>glClearDepth<sp/>(1.0f);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>glBindTexture(GL_TEXTURE_2D,<sp/>0);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>disable<sp/>texture</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>glBindFramebufferEXT(GL_FRAMEBUFFER_EXT,<sp/><ref refid="shaders_8cpp_1ab2b85dfa9f39c4f325881646b9f8cb99" kindref="member">id_fb</ref>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>rendering<sp/>in<sp/>the<sp/>fb<sp/>texture</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>glClear(GL_COLOR_BUFFER_BIT<sp/>|<sp/>GL_DEPTH_BUFFER_BIT);<sp/></highlight><highlight class="comment">//<sp/>clear<sp/>the<sp/>texture</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>glMatrixMode(GL_PROJECTION);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>glLoadMatrixf(camera-&gt;<ref refid="class_camera_1a2acac692956489f3b291b41c0238d82d" kindref="member">ls</ref>.<ref refid="class_light_source_1a0545b1a75881effbc71d1c97904da346" kindref="member">matP</ref>);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>glMatrixMode(GL_MODELVIEW);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>glLoadMatrixf(camera-&gt;<ref refid="class_camera_1a2acac692956489f3b291b41c0238d82d" kindref="member">ls</ref>.<ref refid="class_light_source_1a27be987a6695466b46318c31a9a7aa4e" kindref="member">matMV</ref>);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>glColorMask(GL_FALSE,<sp/>GL_FALSE,<sp/>GL_FALSE,<sp/>GL_FALSE);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Eliminate<sp/>artifacts<sp/>caused<sp/>by<sp/>shadow<sp/>mapping</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>glPolygonOffset(8.0f,<sp/>4.0f);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>glEnable(GL_POLYGON_OFFSET_FILL);</highlight></codeline>
<codeline lineno="154"><highlight class="normal">}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156" refid="shaders_8h_1aa23ae66ab14f690bb86cdfa4bb191956" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="shaders_8cpp_1aa23ae66ab14f690bb86cdfa4bb191956" kindref="member">shadowedRenderingStep2</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>w,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>h)<sp/>{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>glFlush<sp/>();<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Flush<sp/>The<sp/>GL<sp/>Rendering<sp/>Pipeline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>second<sp/>pass<sp/>:<sp/>rendering<sp/>of<sp/>the<sp/>final<sp/>image</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>glViewport(0,0,w,h);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>glColorMask(GL_TRUE,<sp/>GL_TRUE,<sp/>GL_TRUE,<sp/>GL_TRUE);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>glDisable(GL_POLYGON_OFFSET_FILL);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>glBindTexture(GL_TEXTURE_2D,<sp/>0);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>glBindFramebufferEXT(GL_FRAMEBUFFER_EXT,<sp/>0);<sp/></highlight><highlight class="comment">//<sp/>d�sactive<sp/>le<sp/>rendu<sp/>en<sp/>texture</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>glClearDepth<sp/>(1.0f);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>glClear(GL_COLOR_BUFFER_BIT<sp/>|<sp/>GL_DEPTH_BUFFER_BIT);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal">}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172" refid="shaders_8h_1af9bd99e5de0905f53b874be82f95c890" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="shaders_8cpp_1af9bd99e5de0905f53b874be82f95c890" kindref="member">shadowedRenderingStep3</ref>(<ref refid="class_camera" kindref="compound">Camera</ref><sp/>*camera)<sp/>{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>second<sp/>pass<sp/>render<sp/>the<sp/>shadow<sp/>map</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>glMatrixMode(GL_PROJECTION);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>glLoadIdentity();</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>camera-&gt;<ref refid="class_camera_1aaf55ae7f5f95e6c45332fb33b8db9fe5" kindref="member">glProjection</ref>();</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>mBias[]<sp/>=<sp/>{0.5,<sp/>0.0,<sp/>0.0,<sp/>0.0,</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.0,<sp/>0.5,<sp/>0.0,<sp/>0.0,</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.0,<sp/>0.0,<sp/>0.5,<sp/>0.0,</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.5,<sp/>0.5,<sp/>0.5,<sp/>1.0};</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>glMatrixMode(GL_MODELVIEW);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>glLoadIdentity();</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>camera-&gt;<ref refid="class_camera_1ac4c7f5e91786f418464392df8c7a140e" kindref="member">glLookAt</ref>();</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>camViewMatrix[16];</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>glGetFloatv(GL_MODELVIEW_MATRIX,<sp/>camViewMatrix);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_matrice" kindref="compound">Matrice</ref><sp/>mat(camViewMatrix),mat_1;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>mat.<ref refid="class_matrice_1a2a3e43dbf203b548d2da12164c567538" kindref="member">inverse</ref>(mat_1);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>glMatrixMode(GL_TEXTURE);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>glLoadMatrixf(mBias);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>bias<sp/>matrix<sp/>to<sp/>convert<sp/>to<sp/>a<sp/>0<sp/>to<sp/>1<sp/>ratio</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>glMultMatrixf(camera-&gt;<ref refid="class_camera_1a2acac692956489f3b291b41c0238d82d" kindref="member">ls</ref>.<ref refid="class_light_source_1a0545b1a75881effbc71d1c97904da346" kindref="member">matP</ref>);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>glMultMatrixf(camera-&gt;<ref refid="class_camera_1a2acac692956489f3b291b41c0238d82d" kindref="member">ls</ref>.<ref refid="class_light_source_1a27be987a6695466b46318c31a9a7aa4e" kindref="member">matMV</ref>);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>glMultMatrixd(mat_1.<ref refid="class_matrice_1a94b8d27c9c99cce3183182d6a4b2495e" kindref="member">m</ref>);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>glMatrixMode(GL_MODELVIEW);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>glLoadIdentity();</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>camera-&gt;<ref refid="class_camera_1ac4c7f5e91786f418464392df8c7a140e" kindref="member">glLookAt</ref>();</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>glColor3f(1,1,1);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>the<sp/>color<sp/>to<sp/>white</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>placement<sp/>de<sp/>la<sp/>source<sp/>de<sp/>lumière</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>glLightfv(GL_LIGHT0,<sp/>GL_POSITION,<sp/>camera-&gt;<ref refid="class_camera_1a2acac692956489f3b291b41c0238d82d" kindref="member">ls</ref>.<ref refid="class_light_source_1ad274f58633ca90c5ede8ec0682928be0" kindref="member">pos</ref>);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>glLightfv(GL_LIGHT0,<sp/>GL_SPOT_DIRECTION,<sp/>camera-&gt;<ref refid="class_camera_1a2acac692956489f3b291b41c0238d82d" kindref="member">ls</ref>.<ref refid="class_light_source_1af0c002c459c90c1dbdf2e30bc9998c8c" kindref="member">dir</ref><sp/>);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>glLightf(GL_LIGHT0,<sp/>GL_SPOT_CUTOFF,<sp/>camera-&gt;<ref refid="class_camera_1a2acac692956489f3b291b41c0238d82d" kindref="member">ls</ref>.<ref refid="class_light_source_1aee8435898de039ce5c8fc56dfa4f08dc" kindref="member">falloffAngle</ref><sp/>);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>glLightfv(GL_LIGHT0,<sp/>GL_DIFFUSE,<sp/><ref refid="color_8h_1a431bad54841fc93f8b7c65864da5c282" kindref="member">WHITE</ref>.<ref refid="class_color_1a0aa2f69d2314f4008e35d03d5f66fcf8" kindref="member">rgba</ref>);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>glLightfv(GL_LIGHT0,<sp/>GL_AMBIENT,<sp/><ref refid="color_8h_1a431bad54841fc93f8b7c65864da5c282" kindref="member">WHITE</ref>.<ref refid="class_color_1a0aa2f69d2314f4008e35d03d5f66fcf8" kindref="member">rgba</ref>);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>glLightfv(GL_LIGHT0,<sp/>GL_SPECULAR,<sp/><ref refid="color_8h_1a431bad54841fc93f8b7c65864da5c282" kindref="member">WHITE</ref>.<ref refid="class_color_1a0aa2f69d2314f4008e35d03d5f66fcf8" kindref="member">rgba</ref>);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight><highlight class="comment">//<sp/>activation<sp/>du<sp/>programme<sp/>de<sp/>shader</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="shaders_8cpp_1a3917e34d1ef69d1aeea712f076695d35" kindref="member">useShaders</ref><sp/>&amp;&amp;<sp/><ref refid="shaders_8cpp_1a542fc79ea346963d170ca211c653d154" kindref="member">shadersProgram</ref>)</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>glUseProgramObjectARB(<ref refid="shaders_8cpp_1a542fc79ea346963d170ca211c653d154" kindref="member">shadersProgram</ref>);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>glEnable(GL_LIGHTING);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>glUniform1iARB(<ref refid="shaders_8cpp_1a78ba9312e74da7c35b9c19ef9c559f79" kindref="member">locTex</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>glUniform1iARB(<ref refid="shaders_8cpp_1a2fbf765f5879eb4e5871142e7bd43610" kindref="member">locShadowMap</ref><sp/>,<sp/>1);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>glActiveTextureARB(GL_TEXTURE1_ARB);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>glEnable(GL_TEXTURE_2D);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>glBindTexture(GL_TEXTURE_2D,<ref refid="shaders_8cpp_1a8cdff46bb835a14576272b3928bc3164" kindref="member">depth_tex</ref>);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Here<sp/>is<sp/>where<sp/>we<sp/>set<sp/>the<sp/>mode<sp/>and<sp/>function<sp/>for<sp/>shadow<sp/>mapping<sp/>with<sp/>shadow2DProj().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>glTexParameteri(GL_TEXTURE_2D,<sp/>GL_TEXTURE_COMPARE_MODE_ARB,<sp/>GL_COMPARE_R_TO_TEXTURE_ARB);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>glTexParameteri(GL_TEXTURE_2D,<sp/>GL_TEXTURE_COMPARE_FUNC_ARB,<sp/>GL_LEQUAL);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>glActiveTextureARB(GL_TEXTURE0_ARB);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>glEnable(GL_TEXTURE_2D);</highlight></codeline>
<codeline lineno="234"><highlight class="normal">}</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236" refid="shaders_8h_1a62d537ef26b63ed424b004964eeaf587" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="shaders_8cpp_1a62d537ef26b63ed424b004964eeaf587" kindref="member">shadowedRenderingStep4</ref>()<sp/>{</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>glActiveTextureARB(GL_TEXTURE1);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>glDisable(GL_TEXTURE_2D);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>glActiveTextureARB(GL_TEXTURE0);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>glDisable(GL_TEXTURE_2D);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="shaders_8cpp_1a3917e34d1ef69d1aeea712f076695d35" kindref="member">useShaders</ref>)<sp/>glUseProgramObjectARB(0);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/>glMatrixMode(GL_TEXTURE);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>glLoadIdentity();</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>glFlush<sp/>();<sp/></highlight><highlight class="comment">//<sp/>Flush<sp/>The<sp/>GL<sp/>Rendering<sp/>Pipeline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal">}</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249" refid="shaders_8h_1aa1d4ce989e358999ca04e57b6843ef4b" refkind="member"><highlight class="normal">GLint<sp/><ref refid="shaders_8cpp_1aa1d4ce989e358999ca04e57b6843ef4b" kindref="member">shaderCompilationStatus</ref>(GLhandleARB<sp/>shader)<sp/>{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>verification<sp/>du<sp/>succes<sp/>de<sp/>la<sp/>compilation<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>GLint<sp/>compile_status<sp/>=<sp/>GL_TRUE;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>GLsizei<sp/>logsize<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*log=NULL;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>glGetObjectParameterivARB(shader,<sp/>GL_COMPILE_STATUS,<sp/>&amp;compile_status);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(compile_status<sp/>!=<sp/>GL_TRUE)<sp/>{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>erreur<sp/>a<sp/>la<sp/>compilation<sp/>recuperation<sp/>du<sp/>log<sp/>d&apos;erreur<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>on<sp/>recupere<sp/>la<sp/>taille<sp/>du<sp/>message<sp/>d&apos;erreur<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glGetObjectParameterivARB(shader,<sp/>GL_INFO_LOG_LENGTH,<sp/>&amp;logsize);</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>on<sp/>alloue<sp/>un<sp/>espace<sp/>memoire<sp/>dans<sp/>lequel<sp/>OpenGL<sp/>ecrira<sp/>le<sp/>message<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>[logsize<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>initialisation<sp/>du<sp/>contenu<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memset(log,<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">,<sp/>logsize<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glGetInfoLogARB(shader,<sp/>logsize,<sp/>&amp;logsize,<sp/>log);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="trace_8h_1a61a3c9a18380aafb6e430e79bf596557" kindref="member">OUTPUT</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Impossible<sp/>de<sp/>compiler<sp/>le<sp/>program<sp/>:\n&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>log<sp/><sp/>&lt;&lt;endl;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="trace_8h_1a61a3c9a18380aafb6e430e79bf596557" kindref="member">OUTPUT</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;compilation<sp/>OK&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>compile_status;</highlight></codeline>
<codeline lineno="269"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Users/pthalamy/Desktop/VSimRef/VisibleSim/simulatorCore/src/shaders.cpp"/>
  </compounddef>
</doxygen>
