<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="config_stat_8cpp" kind="file" language="C++">
    <compoundname>configStat.cpp</compoundname>
    <includes refid="config_stat_8h" local="yes">configStat.h</includes>
    <includes refid="scheduler_8h" local="yes">scheduler.h</includes>
    <includes local="no">map</includes>
    <includes refid="network_8h" local="yes">network.h</includes>
    <incdepgraph>
      <node id="14026">
        <label>list</label>
      </node>
      <node id="14064">
        <label>openglViewer.h</label>
        <link refid="opengl_viewer_8h"/>
        <childnode refid="14029" relation="include">
        </childnode>
        <childnode refid="14065" relation="include">
        </childnode>
        <childnode refid="14038" relation="include">
        </childnode>
        <childnode refid="14043" relation="include">
        </childnode>
        <childnode refid="14027" relation="include">
        </childnode>
        <childnode refid="14066" relation="include">
        </childnode>
      </node>
      <node id="14038">
        <label>matrice44.h</label>
        <link refid="matrice44_8h"/>
        <childnode refid="14034" relation="include">
        </childnode>
        <childnode refid="14032" relation="include">
        </childnode>
        <childnode refid="14033" relation="include">
        </childnode>
        <childnode refid="14039" relation="include">
        </childnode>
        <childnode refid="14040" relation="include">
        </childnode>
      </node>
      <node id="14029">
        <label>shaders.h</label>
        <link refid="shaders_8h"/>
        <childnode refid="14030" relation="include">
        </childnode>
        <childnode refid="14031" relation="include">
        </childnode>
        <childnode refid="14032" relation="include">
        </childnode>
        <childnode refid="14033" relation="include">
        </childnode>
        <childnode refid="14034" relation="include">
        </childnode>
        <childnode refid="14035" relation="include">
        </childnode>
        <childnode refid="14036" relation="include">
        </childnode>
        <childnode refid="14037" relation="include">
        </childnode>
        <childnode refid="14038" relation="include">
        </childnode>
        <childnode refid="14043" relation="include">
        </childnode>
      </node>
      <node id="14040">
        <label>vecteur.h</label>
        <link refid="vecteur_8h"/>
        <childnode refid="14032" relation="include">
        </childnode>
        <childnode refid="14033" relation="include">
        </childnode>
        <childnode refid="14041" relation="include">
        </childnode>
        <childnode refid="14042" relation="include">
        </childnode>
      </node>
      <node id="14066">
        <label>interface.h</label>
        <link refid="interface_8h"/>
        <childnode refid="14051" relation="include">
        </childnode>
        <childnode refid="14032" relation="include">
        </childnode>
        <childnode refid="14033" relation="include">
        </childnode>
        <childnode refid="14042" relation="include">
        </childnode>
        <childnode refid="14027" relation="include">
        </childnode>
        <childnode refid="14049" relation="include">
        </childnode>
        <childnode refid="14044" relation="include">
        </childnode>
      </node>
      <node id="14023">
        <label>boost/shared_ptr.hpp</label>
      </node>
      <node id="14058">
        <label>boost/interprocess/sync/interprocess_semaphore.hpp</label>
      </node>
      <node id="14052">
        <label>assert.h</label>
      </node>
      <node id="14020">
        <label>/Users/pthalamy/Desktop/VSimRef/VisibleSim/simulatorCore/src/configStat.cpp</label>
        <link refid="configStat.cpp"/>
        <childnode refid="14021" relation="include">
        </childnode>
        <childnode refid="14054" relation="include">
        </childnode>
        <childnode refid="14050" relation="include">
        </childnode>
        <childnode refid="14061" relation="include">
        </childnode>
      </node>
      <node id="14048">
        <label>stdint.h</label>
      </node>
      <node id="14031">
        <label>stdlib.h</label>
      </node>
      <node id="14022">
        <label>buildingBlock.h</label>
        <link refid="building_block_8h"/>
        <childnode refid="14023" relation="include">
        </childnode>
        <childnode refid="14024" relation="include">
        </childnode>
        <childnode refid="14025" relation="include">
        </childnode>
        <childnode refid="14026" relation="include">
        </childnode>
        <childnode refid="14027" relation="include">
        </childnode>
        <childnode refid="14045" relation="include">
        </childnode>
        <childnode refid="14047" relation="include">
        </childnode>
      </node>
      <node id="14041">
        <label>cmath</label>
      </node>
      <node id="14028">
        <label>string</label>
      </node>
      <node id="14034">
        <label>GL/glew.h</label>
      </node>
      <node id="14050">
        <label>map</label>
      </node>
      <node id="14056">
        <label>boost/thread.hpp</label>
      </node>
      <node id="14042">
        <label>memory.h</label>
      </node>
      <node id="14027">
        <label>glBlock.h</label>
        <link refid="gl_block_8h"/>
        <childnode refid="14028" relation="include">
        </childnode>
        <childnode refid="14029" relation="include">
        </childnode>
        <childnode refid="14040" relation="include">
        </childnode>
        <childnode refid="14044" relation="include">
        </childnode>
      </node>
      <node id="14033">
        <label>fstream</label>
      </node>
      <node id="14045">
        <label>blockCode.h</label>
        <link refid="block_code_8h"/>
        <childnode refid="14022" relation="include">
        </childnode>
        <childnode refid="14046" relation="include">
        </childnode>
      </node>
      <node id="14037">
        <label>GL/glu.h</label>
      </node>
      <node id="14060">
        <label>uniqueEventsId.h</label>
        <link refid="unique_events_id_8h"/>
      </node>
      <node id="14043">
        <label>camera.h</label>
        <link refid="camera_8h"/>
        <childnode refid="14039" relation="include">
        </childnode>
        <childnode refid="14040" relation="include">
        </childnode>
        <childnode refid="14038" relation="include">
        </childnode>
      </node>
      <node id="14035">
        <label>GL/freeglut.h</label>
      </node>
      <node id="14065">
        <label>pthread.h</label>
      </node>
      <node id="14063">
        <label>string.h</label>
      </node>
      <node id="14051">
        <label>vector</label>
      </node>
      <node id="14061">
        <label>network.h</label>
        <link refid="network_8h"/>
        <childnode refid="14062" relation="include">
        </childnode>
        <childnode refid="14063" relation="include">
        </childnode>
        <childnode refid="14023" relation="include">
        </childnode>
        <childnode refid="14022" relation="include">
        </childnode>
      </node>
      <node id="14055">
        <label>sstream</label>
      </node>
      <node id="14054">
        <label>scheduler.h</label>
        <link refid="scheduler_8h"/>
        <childnode refid="14032" relation="include">
        </childnode>
        <childnode refid="14055" relation="include">
        </childnode>
        <childnode refid="14050" relation="include">
        </childnode>
        <childnode refid="14046" relation="include">
        </childnode>
        <childnode refid="14052" relation="include">
        </childnode>
        <childnode refid="14056" relation="include">
        </childnode>
        <childnode refid="14057" relation="include">
        </childnode>
        <childnode refid="14025" relation="include">
        </childnode>
        <childnode refid="14058" relation="include">
        </childnode>
        <childnode refid="14059" relation="include">
        </childnode>
        <childnode refid="14064" relation="include">
        </childnode>
      </node>
      <node id="14039">
        <label>math.h</label>
      </node>
      <node id="14044">
        <label>color.h</label>
        <link refid="color_8h"/>
        <childnode refid="14032" relation="include">
        </childnode>
        <childnode refid="14033" relation="include">
        </childnode>
        <childnode refid="14041" relation="include">
        </childnode>
        <childnode refid="14042" relation="include">
        </childnode>
        <childnode refid="14029" relation="include">
        </childnode>
      </node>
      <node id="14021">
        <label>configStat.h</label>
        <link refid="config_stat_8h"/>
        <childnode refid="14022" relation="include">
        </childnode>
        <childnode refid="14026" relation="include">
        </childnode>
        <childnode refid="14049" relation="include">
        </childnode>
        <childnode refid="14028" relation="include">
        </childnode>
      </node>
      <node id="14032">
        <label>iostream</label>
      </node>
      <node id="14062">
        <label>deque</label>
      </node>
      <node id="14057">
        <label>boost/bind.hpp</label>
      </node>
      <node id="14025">
        <label>boost/interprocess/sync/interprocess_mutex.hpp</label>
      </node>
      <node id="14053">
        <label>trace.h</label>
        <link refid="trace_8h"/>
        <childnode refid="14033" relation="include">
        </childnode>
      </node>
      <node id="14059">
        <label>events.h</label>
        <link refid="events_8h"/>
        <childnode refid="14046" relation="include">
        </childnode>
        <childnode refid="14028" relation="include">
        </childnode>
        <childnode refid="14023" relation="include">
        </childnode>
        <childnode refid="14022" relation="include">
        </childnode>
        <childnode refid="14060" relation="include">
        </childnode>
        <childnode refid="14061" relation="include">
        </childnode>
        <childnode refid="14044" relation="include">
        </childnode>
      </node>
      <node id="14024">
        <label>boost/random.hpp</label>
      </node>
      <node id="14049">
        <label>world.h</label>
        <link refid="world_8h"/>
        <childnode refid="14032" relation="include">
        </childnode>
        <childnode refid="14050" relation="include">
        </childnode>
        <childnode refid="14051" relation="include">
        </childnode>
        <childnode refid="14025" relation="include">
        </childnode>
        <childnode refid="14052" relation="include">
        </childnode>
        <childnode refid="14022" relation="include">
        </childnode>
        <childnode refid="14027" relation="include">
        </childnode>
        <childnode refid="14053" relation="include">
        </childnode>
      </node>
      <node id="14036">
        <label>GL/gl.h</label>
      </node>
      <node id="14030">
        <label>stdio.h</label>
      </node>
      <node id="14047">
        <label>clock.h</label>
        <link refid="clock_8h"/>
        <childnode refid="14022" relation="include">
        </childnode>
        <childnode refid="14048" relation="include">
        </childnode>
        <childnode refid="14032" relation="include">
        </childnode>
        <childnode refid="14024" relation="include">
        </childnode>
        <childnode refid="14026" relation="include">
        </childnode>
      </node>
      <node id="14046">
        <label>inttypes.h</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="config_stat_8h" kindref="compound">configStat.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="scheduler_8h" kindref="compound">scheduler.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="network_8h" kindref="compound">network.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6" refid="class_config_stat_1aa213efbaf1274146c1695634775e04a9" refkind="member"><highlight class="normal"><ref refid="class_config_stat_1aa213efbaf1274146c1695634775e04a9" kindref="member">ConfigStat::ConfigStat</ref>(<ref refid="class_base_simulator_1_1_world" kindref="compound">BaseSimulator::World</ref><sp/>*w)<sp/>{</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/>diameter<sp/>=<sp/>0;<sp/></highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/>radius<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/>size<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/>world<sp/>=<sp/>w;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/>distanceMatrix<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/>eccentricity<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/>closenessCentrality<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>betweennessCentrality<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_config_stat_1a0443c65814f847e6a0f07c1aee91c3a5" kindref="member">compute</ref>();</highlight></codeline>
<codeline lineno="16"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ConfigStat::deleteComputation()<sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>eccentricity;<sp/>eccentricity<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>closenessCentrality;<sp/>closenessCentrality<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>betweennessCentrality;<sp/>betweennessCentrality<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>distanceMatrix;<sp/>distanceMatrix<sp/>=<sp/>NULL;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>center.clear();</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>centroid.clear();</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>betweennessCenter.clear();</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>diameter<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>radius<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="28"><highlight class="normal">}</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ConfigStat::initComputation()<sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>size<sp/>=<sp/>world-&gt;<ref refid="class_base_simulator_1_1_world_1a6b18d9a02e3f31720ff3d326ee1b0e04" kindref="member">getMap</ref>().size()+1;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>distanceMatrix<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_square_matrix" kindref="compound">SquareMatrix</ref>(size);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>eccentricity<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[size];</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>closenessCentrality<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[size];</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>betweennessCentrality<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[size];</highlight></codeline>
<codeline lineno="36"><highlight class="normal">}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="class_config_stat_1aaccabdab6c2f8103f3cbe0a299e29524" refkind="member"><highlight class="normal"><ref refid="class_config_stat_1aaccabdab6c2f8103f3cbe0a299e29524" kindref="member">ConfigStat::~ConfigStat</ref>()<sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>deleteComputation();</highlight></codeline>
<codeline lineno="40"><highlight class="normal">}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="class_config_stat_1a7f34105578018ea3e4ff5e4492f67b79" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_config_stat_1a7f34105578018ea3e4ff5e4492f67b79" kindref="member">ConfigStat::getDiameter</ref>()<sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>diameter;</highlight></codeline>
<codeline lineno="44"><highlight class="normal">}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="class_config_stat_1a96d2d4724b85fc25bf7840b86318020b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_config_stat_1a96d2d4724b85fc25bf7840b86318020b" kindref="member">ConfigStat::getRadius</ref>()<sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>radius;</highlight></codeline>
<codeline lineno="48"><highlight class="normal">}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50" refid="class_config_stat_1a51689e7d8d2720c33d3d307c1c14af1e" refkind="member"><highlight class="normal">list&lt;BaseSimulator::BuildingBlock*&gt;&amp;<sp/><ref refid="class_config_stat_1a51689e7d8d2720c33d3d307c1c14af1e" kindref="member">ConfigStat::getCenter</ref>()<sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>center;</highlight></codeline>
<codeline lineno="52"><highlight class="normal">}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54" refid="class_config_stat_1a6d966dcf2d7041e8f07cebd09f920719" refkind="member"><highlight class="normal">list&lt;BaseSimulator::BuildingBlock*&gt;&amp;<sp/><ref refid="class_config_stat_1a6d966dcf2d7041e8f07cebd09f920719" kindref="member">ConfigStat::getCentroid</ref>()<sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>centroid;</highlight></codeline>
<codeline lineno="56"><highlight class="normal">}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="class_config_stat_1a5411f4f793a41daa0f5ad354947db291" refkind="member"><highlight class="normal">list&lt;BaseSimulator::BuildingBlock*&gt;&amp;<sp/><ref refid="class_config_stat_1a5411f4f793a41daa0f5ad354947db291" kindref="member">ConfigStat::getBetweennessCenter</ref>()<sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>betweennessCenter;</highlight></codeline>
<codeline lineno="60"><highlight class="normal">}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63" refid="class_config_stat_1a0443c65814f847e6a0f07c1aee91c3a5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_config_stat_1a0443c65814f847e6a0f07c1aee91c3a5" kindref="member">ConfigStat::compute</ref>()<sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>deleteComputation();</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>initComputation();</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>computeDistanceMatrix();</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>computeCenter();</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>computeCentroid();</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>computeBetweennessCenter();</highlight></codeline>
<codeline lineno="72"><highlight class="normal">}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ConfigStat::computeDistanceMatrix()<sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size<sp/>=<sp/>distanceMatrix-&gt;<ref refid="class_square_matrix_1a723a6af991ce6ffc5fbf0ffcaec136b0" kindref="member">getSize</ref>();</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>adjacencyMatrix[size][size];</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>distTmp;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>size;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>size;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>adjacencyMatrix[i][j]<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>distanceMatrix-&gt;<ref refid="class_square_matrix_1a14b711eed56765facf0c3b78601cd904" kindref="member">set</ref>(i,<sp/>j,<sp/>INT_MAX);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>map&lt;int,<sp/>BuildingBlock*&gt;::iterator<sp/>bit;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(bit<sp/>=<sp/>world-&gt;<ref refid="class_base_simulator_1_1_world_1a6b18d9a02e3f31720ff3d326ee1b0e04" kindref="member">getMap</ref>().begin()<sp/>;<sp/>bit<sp/>!=<sp/>world-&gt;<ref refid="class_base_simulator_1_1_world_1a6b18d9a02e3f31720ff3d326ee1b0e04" kindref="member">getMap</ref>().end()<sp/>;<sp/>bit++)<sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>list<sp/>&lt;P2PNetworkInterface*&gt;::iterator<sp/>niit;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(niit<sp/>=<sp/>bit-&gt;second-&gt;getP2PNetworkInterfaceList().begin();<sp/>niit<sp/>!=<sp/>bit-&gt;second-&gt;getP2PNetworkInterfaceList().end();<sp/>niit++)<sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((*niit)-&gt;connectedInterface)<sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>adjacencyMatrix[bit-&gt;second-&gt;blockId][(*niit)-&gt;connectedInterface-&gt;hostBlock-&gt;blockId]<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>changed<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>s<sp/>=<sp/>1;<sp/>s<sp/>&lt;<sp/>size;<sp/>s++)<sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>distanceMatrix-&gt;<ref refid="class_square_matrix_1a14b711eed56765facf0c3b78601cd904" kindref="member">set</ref>(s,s,0);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/>size;<sp/>i++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>changed<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>u<sp/>=<sp/>1;<sp/>u<sp/>&lt;<sp/>size;<sp/>u++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>v<sp/>=<sp/>1;<sp/>v<sp/>&lt;<sp/>size;<sp/>v++)<sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(adjacencyMatrix[u][v])<sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>(distance[s][v]<sp/>!=<sp/>UINT_MAX)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(distanceMatrix-&gt;<ref refid="class_square_matrix_1ad6bedc00c64ec18749c7441c9e0f2669" kindref="member">get</ref>(s,u)<sp/>!=<sp/>INT_MAX)<sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//distTmp<sp/>=<sp/>distance[s][u]<sp/>+<sp/>1;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>distTmp<sp/>=<sp/>distanceMatrix-&gt;<ref refid="class_square_matrix_1ad6bedc00c64ec18749c7441c9e0f2669" kindref="member">get</ref>(s,u)<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>(distTmp<sp/>&lt;<sp/>distance[s][v])<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cout<sp/>&lt;&lt;<sp/>&quot;distTmp&quot;<sp/>&lt;&lt;<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(distTmp<sp/>&lt;<sp/>distanceMatrix-&gt;</highlight><highlight class="keyword">get</highlight><highlight class="normal">(s,v))<sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cout<sp/>&lt;&lt;<sp/>&quot;set:<sp/>&quot;<sp/>&lt;&lt;<sp/>s<sp/>&lt;&lt;<sp/>&quot;,&quot;<sp/>&lt;&lt;<sp/>v<sp/>&lt;&lt;<sp/>&quot;:<sp/>&quot;<sp/>&lt;&lt;<sp/>v<sp/>&lt;&lt;<sp/>endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>distanceMatrix-&gt;<ref refid="class_square_matrix_1a14b711eed56765facf0c3b78601cd904" kindref="member">set</ref>(s,v,distTmp);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>distanceMatrix-&gt;<ref refid="class_square_matrix_1a14b711eed56765facf0c3b78601cd904" kindref="member">set</ref>(v,s,distTmp);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>changed<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//distance[s][v]<sp/>=<sp/>distTmp;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!changed)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="normal">}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ConfigStat::computeCenter()<sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>radius<sp/>=<sp/>INT_MAX;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>diameter<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/>size;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eccentricity[i]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>1;<sp/>j<sp/>&lt;<sp/>size;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eccentricity[i]<sp/>=<sp/>max(eccentricity[i],distanceMatrix-&gt;<ref refid="class_square_matrix_1ad6bedc00c64ec18749c7441c9e0f2669" kindref="member">get</ref>(i,j));</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>radius<sp/>=<sp/>min(radius,<sp/>eccentricity[i]);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>diameter<sp/>=<sp/>max(diameter,<sp/>eccentricity[i]);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/>size;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(eccentricity[i]<sp/>==<sp/>radius)<sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>center.push_back(world-&gt;<ref refid="class_base_simulator_1_1_world_1a5242c801311b599d02cd5987ea165900" kindref="member">getBlockById</ref>(i));</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="144"><highlight class="normal">}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ConfigStat::computeCentroid()<sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>minSum<sp/>=<sp/>INT_MAX;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxSum<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/>size;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>closenessCentrality[i]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>1;<sp/>j<sp/>&lt;<sp/>size;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>closenessCentrality[i]<sp/>+=<sp/>distanceMatrix-&gt;<ref refid="class_square_matrix_1ad6bedc00c64ec18749c7441c9e0f2669" kindref="member">get</ref>(i,j);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>minSum<sp/>=<sp/>min(closenessCentrality[i],<sp/>minSum);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maxSum<sp/>=<sp/>max(closenessCentrality[i],<sp/>maxSum);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/>size;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(closenessCentrality[i]<sp/>==<sp/>minSum)<sp/>{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>centroid.push_back(world-&gt;<ref refid="class_base_simulator_1_1_world_1a5242c801311b599d02cd5987ea165900" kindref="member">getBlockById</ref>(i));</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)<sp/>maxSum;</highlight></codeline>
<codeline lineno="166"><highlight class="normal">}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ConfigStat::computeBetweennessCenter()<sp/>{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal">}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_config_stat_1aa7255d9edffaeee42052196e6ab65bbe" kindref="member">ConfigStat::print</ref>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>name,<sp/>list&lt;BaseSimulator::BuildingBlock*&gt;&amp;<sp/>l)<sp/>{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>name<sp/>&lt;&lt;</highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(list&lt;BaseSimulator::BuildingBlock*&gt;::iterator<sp/>it=l.begin();<sp/>it<sp/>!=<sp/>l.end();<sp/>it++)<sp/>{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>(*it)-&gt;blockId<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;(eccentricity:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>eccentricity[(*it)-&gt;blockId]&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>closeness<sp/>centrality:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><sp/>closenessCentrality[(*it)-&gt;blockId]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>endl;<sp/></highlight></codeline>
<codeline lineno="178"><highlight class="normal">}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180" refid="class_config_stat_1aa7255d9edffaeee42052196e6ab65bbe" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_config_stat_1aa7255d9edffaeee42052196e6ab65bbe" kindref="member">ConfigStat::print</ref>()<sp/>{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Diameter:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>diameter<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;radius:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>radius<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_config_stat_1aa7255d9edffaeee42052196e6ab65bbe" kindref="member">print</ref>(</highlight><highlight class="stringliteral">&quot;Center&quot;</highlight><highlight class="normal">,<sp/>center);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_config_stat_1aa7255d9edffaeee42052196e6ab65bbe" kindref="member">print</ref>(</highlight><highlight class="stringliteral">&quot;Centroid&quot;</highlight><highlight class="normal">,<sp/>centroid);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_config_stat_1aa7255d9edffaeee42052196e6ab65bbe" kindref="member">print</ref>(</highlight><highlight class="stringliteral">&quot;Betweenness&quot;</highlight><highlight class="normal">,<sp/>betweennessCenter);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="185"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Users/pthalamy/Desktop/VSimRef/VisibleSim/simulatorCore/src/configStat.cpp"/>
  </compounddef>
</doxygen>
