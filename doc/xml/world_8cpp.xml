<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="world_8cpp" kind="file" language="C++">
    <compoundname>world.cpp</compoundname>
    <includes local="no">stdlib.h</includes>
    <includes refid="world_8h" local="yes">world.h</includes>
    <includes refid="trace_8h" local="yes">trace.h</includes>
    <incdepgraph>
      <node id="19713">
        <label>list</label>
      </node>
      <node id="19723">
        <label>matrice44.h</label>
        <link refid="matrice44_8h"/>
        <childnode refid="19719" relation="include">
        </childnode>
        <childnode refid="19705" relation="include">
        </childnode>
        <childnode refid="19718" relation="include">
        </childnode>
        <childnode refid="19724" relation="include">
        </childnode>
        <childnode refid="19725" relation="include">
        </childnode>
      </node>
      <node id="19716">
        <label>shaders.h</label>
        <link refid="shaders_8h"/>
        <childnode refid="19717" relation="include">
        </childnode>
        <childnode refid="19703" relation="include">
        </childnode>
        <childnode refid="19705" relation="include">
        </childnode>
        <childnode refid="19718" relation="include">
        </childnode>
        <childnode refid="19719" relation="include">
        </childnode>
        <childnode refid="19720" relation="include">
        </childnode>
        <childnode refid="19721" relation="include">
        </childnode>
        <childnode refid="19722" relation="include">
        </childnode>
        <childnode refid="19723" relation="include">
        </childnode>
        <childnode refid="19728" relation="include">
        </childnode>
      </node>
      <node id="19725">
        <label>vecteur.h</label>
        <link refid="vecteur_8h"/>
        <childnode refid="19705" relation="include">
        </childnode>
        <childnode refid="19718" relation="include">
        </childnode>
        <childnode refid="19726" relation="include">
        </childnode>
        <childnode refid="19727" relation="include">
        </childnode>
      </node>
      <node id="19711">
        <label>boost/shared_ptr.hpp</label>
      </node>
      <node id="19709">
        <label>assert.h</label>
      </node>
      <node id="19733">
        <label>stdint.h</label>
      </node>
      <node id="19703">
        <label>stdlib.h</label>
      </node>
      <node id="19710">
        <label>buildingBlock.h</label>
        <link refid="building_block_8h"/>
        <childnode refid="19711" relation="include">
        </childnode>
        <childnode refid="19712" relation="include">
        </childnode>
        <childnode refid="19708" relation="include">
        </childnode>
        <childnode refid="19713" relation="include">
        </childnode>
        <childnode refid="19714" relation="include">
        </childnode>
        <childnode refid="19730" relation="include">
        </childnode>
        <childnode refid="19732" relation="include">
        </childnode>
      </node>
      <node id="19702">
        <label>/Users/pthalamy/Desktop/VSimRef/VisibleSim/simulatorCore/src/world.cpp</label>
        <link refid="world.cpp"/>
        <childnode refid="19703" relation="include">
        </childnode>
        <childnode refid="19704" relation="include">
        </childnode>
        <childnode refid="19734" relation="include">
        </childnode>
      </node>
      <node id="19726">
        <label>cmath</label>
      </node>
      <node id="19715">
        <label>string</label>
      </node>
      <node id="19719">
        <label>GL/glew.h</label>
      </node>
      <node id="19706">
        <label>map</label>
      </node>
      <node id="19727">
        <label>memory.h</label>
      </node>
      <node id="19714">
        <label>glBlock.h</label>
        <link refid="gl_block_8h"/>
        <childnode refid="19715" relation="include">
        </childnode>
        <childnode refid="19716" relation="include">
        </childnode>
        <childnode refid="19725" relation="include">
        </childnode>
        <childnode refid="19729" relation="include">
        </childnode>
      </node>
      <node id="19718">
        <label>fstream</label>
      </node>
      <node id="19730">
        <label>blockCode.h</label>
        <link refid="block_code_8h"/>
        <childnode refid="19710" relation="include">
        </childnode>
        <childnode refid="19731" relation="include">
        </childnode>
      </node>
      <node id="19722">
        <label>GL/glu.h</label>
      </node>
      <node id="19728">
        <label>camera.h</label>
        <link refid="camera_8h"/>
        <childnode refid="19724" relation="include">
        </childnode>
        <childnode refid="19725" relation="include">
        </childnode>
        <childnode refid="19723" relation="include">
        </childnode>
      </node>
      <node id="19720">
        <label>GL/freeglut.h</label>
      </node>
      <node id="19707">
        <label>vector</label>
      </node>
      <node id="19724">
        <label>math.h</label>
      </node>
      <node id="19729">
        <label>color.h</label>
        <link refid="color_8h"/>
        <childnode refid="19705" relation="include">
        </childnode>
        <childnode refid="19718" relation="include">
        </childnode>
        <childnode refid="19726" relation="include">
        </childnode>
        <childnode refid="19727" relation="include">
        </childnode>
        <childnode refid="19716" relation="include">
        </childnode>
      </node>
      <node id="19705">
        <label>iostream</label>
      </node>
      <node id="19708">
        <label>boost/interprocess/sync/interprocess_mutex.hpp</label>
      </node>
      <node id="19734">
        <label>trace.h</label>
        <link refid="trace_8h"/>
        <childnode refid="19718" relation="include">
        </childnode>
      </node>
      <node id="19712">
        <label>boost/random.hpp</label>
      </node>
      <node id="19704">
        <label>world.h</label>
        <link refid="world_8h"/>
        <childnode refid="19705" relation="include">
        </childnode>
        <childnode refid="19706" relation="include">
        </childnode>
        <childnode refid="19707" relation="include">
        </childnode>
        <childnode refid="19708" relation="include">
        </childnode>
        <childnode refid="19709" relation="include">
        </childnode>
        <childnode refid="19710" relation="include">
        </childnode>
        <childnode refid="19714" relation="include">
        </childnode>
        <childnode refid="19734" relation="include">
        </childnode>
      </node>
      <node id="19721">
        <label>GL/gl.h</label>
      </node>
      <node id="19717">
        <label>stdio.h</label>
      </node>
      <node id="19732">
        <label>clock.h</label>
        <link refid="clock_8h"/>
        <childnode refid="19710" relation="include">
        </childnode>
        <childnode refid="19733" relation="include">
        </childnode>
        <childnode refid="19705" relation="include">
        </childnode>
        <childnode refid="19712" relation="include">
        </childnode>
        <childnode refid="19713" relation="include">
        </childnode>
      </node>
      <node id="19731">
        <label>inttypes.h</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespace_base_simulator">BaseSimulator</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>world.cpp</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/><sp/>Created<sp/>on:<sp/>23<sp/>mars<sp/>2013</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>Author:<sp/>dom</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="world_8h" kindref="compound">world.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="trace_8h" kindref="compound">trace.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacestd" kindref="compound">std</ref>;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_base_simulator" kindref="compound">BaseSimulator</ref><sp/>{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal">World<sp/>*World::world=NULL;</highlight></codeline>
<codeline lineno="17"><highlight class="normal">map&lt;int,<sp/>BuildingBlock*&gt;World::buildingBlocksMap;</highlight></codeline>
<codeline lineno="18"><highlight class="normal">vector<sp/>&lt;GlBlock*&gt;World::tabGlBlocks;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20" refid="class_base_simulator_1_1_world_1a7e94af369a98e4de7f6a45cb5758b5b9" refkind="member"><highlight class="normal">World::World()<sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="trace_8h_1a61a3c9a18380aafb6e430e79bf596557" kindref="member">OUTPUT</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;World<sp/>constructor&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>selectedBlock<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(world<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>world<sp/>=<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="trace_8h_1a6667b9548cdadbd55cabd90840a4edeb" kindref="member">ERRPUT</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\033[1;31m&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Only<sp/>one<sp/>World<sp/>instance<sp/>can<sp/>be<sp/>created,<sp/>aborting<sp/>!&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\033[0m&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(EXIT_FAILURE);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="29"><highlight class="normal">}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="class_base_simulator_1_1_world_1a7f83c6dde04899866019fd407dc0e48a" refkind="member"><highlight class="normal">World::~World()<sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//MODIF<sp/>NICO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;int,<sp/>BuildingBlock*&gt;::iterator<sp/>it;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>it<sp/>=<sp/>buildingBlocksMap.begin()<sp/>;<sp/>it<sp/>!=<sp/>buildingBlocksMap.end()<sp/>;<sp/>++it)<sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>it-&gt;second;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//FIN<sp/>MODIF<sp/>NICO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;GlBlock*&gt;::const_iterator<sp/>cit=tabGlBlocks.begin();</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(cit!=tabGlBlocks.end())<sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>*cit;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cit++;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="trace_8h_1a61a3c9a18380aafb6e430e79bf596557" kindref="member">OUTPUT</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;World<sp/>destructor&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="45"><highlight class="normal">}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="class_base_simulator_1_1_world_1a5242c801311b599d02cd5987ea165900" refkind="member"><highlight class="normal"><ref refid="class_base_simulator_1_1_building_block" kindref="compound">BuildingBlock</ref>*<sp/>World::getBlockById(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bId)<sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>map&lt;int,<sp/>BuildingBlock*&gt;::iterator<sp/>it;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>it<sp/>=<sp/>buildingBlocksMap.find(bId);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it<sp/>==<sp/>buildingBlocksMap.end())<sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(NULL);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(it-&gt;second);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal">}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="class_base_simulator_1_1_world_1a9c40cfd24c7c6ac5ef7101743a3e2cd9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>World::lock()<sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>mutex_gl.<ref refid="class_base_simulator_1_1_building_block_1ae7cbda10b8cc1c6470041d7e687df82b" kindref="member">lock</ref>();</highlight></codeline>
<codeline lineno="59"><highlight class="normal">}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61" refid="class_base_simulator_1_1_world_1a9a9373a9b601c2a94ce66c5737a3647d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>World::unlock()<sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>mutex_gl.unlock();</highlight></codeline>
<codeline lineno="63"><highlight class="normal">}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65" refid="class_base_simulator_1_1_world_1ab4b29d2ad42ae105aac582e742f914c6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>World::stopSimulation()<sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>map&lt;int,<sp/>BuildingBlock*&gt;::iterator<sp/>it;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>it<sp/>=<sp/>buildingBlocksMap.begin()<sp/>;<sp/>it<sp/>!=<sp/>buildingBlocksMap.end()<sp/>;<sp/>it++)<sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it-&gt;second-&gt;stop();</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="70"><highlight class="normal">}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>swap(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>a,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>b)</highlight></codeline>
<codeline lineno="73"><highlight class="normal">{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>temp<sp/>=<sp/>*a;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/>*a<sp/>=<sp/>*b;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/>*b<sp/>=<sp/>temp;</highlight></codeline>
<codeline lineno="77"><highlight class="normal">}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79" refid="class_base_simulator_1_1_world_1a229de16483022383fb665e6dbf7223bd" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>World::generateIds(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>ids)<sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>a<sp/>=<sp/>0,<sp/>b<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//struct<sp/>timespec<sp/>t;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//clock_gettime(CLOCK_REALTIME,<sp/>&amp;t);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>not<sp/>implemented<sp/>in<sp/>macos</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//boost::rand48<sp/>generator<sp/>=<sp/>boost::rand48(t.tv_nsec);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>boost::rand48<sp/>generator<sp/>=<sp/>boost::rand48(time(NULL));</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ids[i]<sp/>=<sp/>i+1;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n==1)<sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>randomly<sp/>switch<sp/>2n<sp/>times</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n*2;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a<sp/>=<sp/>generator()<sp/>%<sp/>n;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b<sp/>=<sp/>generator()<sp/>%<sp/>n;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((a<sp/>==<sp/>b));</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>swap(&amp;ids[a],<sp/>&amp;ids[b]);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="105"><highlight class="normal">}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>BaseSimulator<sp/>namespace</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/pthalamy/Desktop/VSimRef/VisibleSim/simulatorCore/src/world.cpp"/>
  </compounddef>
</doxygen>
