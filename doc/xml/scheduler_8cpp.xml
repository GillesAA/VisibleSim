<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="scheduler_8cpp" kind="file" language="C++">
    <compoundname>scheduler.cpp</compoundname>
    <includes local="no">stdint.h</includes>
    <includes local="no">iostream</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="yes">assert.h</includes>
    <includes refid="scheduler_8h" local="yes">scheduler.h</includes>
    <includes refid="trace_8h" local="yes">trace.h</includes>
    <incdepgraph>
      <node id="18008">
        <label>list</label>
      </node>
      <node id="18030">
        <label>openglViewer.h</label>
        <link refid="opengl_viewer_8h"/>
        <childnode refid="18010" relation="include">
        </childnode>
        <childnode refid="18031" relation="include">
        </childnode>
        <childnode refid="18017" relation="include">
        </childnode>
        <childnode refid="18022" relation="include">
        </childnode>
        <childnode refid="18009" relation="include">
        </childnode>
        <childnode refid="18032" relation="include">
        </childnode>
      </node>
      <node id="18017">
        <label>matrice44.h</label>
        <link refid="matrice44_8h"/>
        <childnode refid="18013" relation="include">
        </childnode>
        <childnode refid="17992" relation="include">
        </childnode>
        <childnode refid="18012" relation="include">
        </childnode>
        <childnode refid="18018" relation="include">
        </childnode>
        <childnode refid="18019" relation="include">
        </childnode>
      </node>
      <node id="18010">
        <label>shaders.h</label>
        <link refid="shaders_8h"/>
        <childnode refid="18011" relation="include">
        </childnode>
        <childnode refid="17993" relation="include">
        </childnode>
        <childnode refid="17992" relation="include">
        </childnode>
        <childnode refid="18012" relation="include">
        </childnode>
        <childnode refid="18013" relation="include">
        </childnode>
        <childnode refid="18014" relation="include">
        </childnode>
        <childnode refid="18015" relation="include">
        </childnode>
        <childnode refid="18016" relation="include">
        </childnode>
        <childnode refid="18017" relation="include">
        </childnode>
        <childnode refid="18022" relation="include">
        </childnode>
      </node>
      <node id="18019">
        <label>vecteur.h</label>
        <link refid="vecteur_8h"/>
        <childnode refid="17992" relation="include">
        </childnode>
        <childnode refid="18012" relation="include">
        </childnode>
        <childnode refid="18020" relation="include">
        </childnode>
        <childnode refid="18021" relation="include">
        </childnode>
      </node>
      <node id="18032">
        <label>interface.h</label>
        <link refid="interface_8h"/>
        <childnode refid="18033" relation="include">
        </childnode>
        <childnode refid="17992" relation="include">
        </childnode>
        <childnode refid="18012" relation="include">
        </childnode>
        <childnode refid="18021" relation="include">
        </childnode>
        <childnode refid="18009" relation="include">
        </childnode>
        <childnode refid="18034" relation="include">
        </childnode>
        <childnode refid="18023" relation="include">
        </childnode>
      </node>
      <node id="18005">
        <label>boost/shared_ptr.hpp</label>
      </node>
      <node id="18002">
        <label>boost/interprocess/sync/interprocess_semaphore.hpp</label>
      </node>
      <node id="17994">
        <label>assert.h</label>
      </node>
      <node id="17991">
        <label>stdint.h</label>
      </node>
      <node id="17993">
        <label>stdlib.h</label>
      </node>
      <node id="18006">
        <label>buildingBlock.h</label>
        <link refid="building_block_8h"/>
        <childnode refid="18005" relation="include">
        </childnode>
        <childnode refid="18007" relation="include">
        </childnode>
        <childnode refid="18001" relation="include">
        </childnode>
        <childnode refid="18008" relation="include">
        </childnode>
        <childnode refid="18009" relation="include">
        </childnode>
        <childnode refid="18024" relation="include">
        </childnode>
        <childnode refid="18025" relation="include">
        </childnode>
      </node>
      <node id="18020">
        <label>cmath</label>
      </node>
      <node id="18004">
        <label>string</label>
      </node>
      <node id="18013">
        <label>GL/glew.h</label>
      </node>
      <node id="17997">
        <label>map</label>
      </node>
      <node id="17999">
        <label>boost/thread.hpp</label>
      </node>
      <node id="18021">
        <label>memory.h</label>
      </node>
      <node id="18009">
        <label>glBlock.h</label>
        <link refid="gl_block_8h"/>
        <childnode refid="18004" relation="include">
        </childnode>
        <childnode refid="18010" relation="include">
        </childnode>
        <childnode refid="18019" relation="include">
        </childnode>
        <childnode refid="18023" relation="include">
        </childnode>
      </node>
      <node id="18012">
        <label>fstream</label>
      </node>
      <node id="18024">
        <label>blockCode.h</label>
        <link refid="block_code_8h"/>
        <childnode refid="18006" relation="include">
        </childnode>
        <childnode refid="17998" relation="include">
        </childnode>
      </node>
      <node id="18016">
        <label>GL/glu.h</label>
      </node>
      <node id="18026">
        <label>uniqueEventsId.h</label>
        <link refid="unique_events_id_8h"/>
      </node>
      <node id="18022">
        <label>camera.h</label>
        <link refid="camera_8h"/>
        <childnode refid="18018" relation="include">
        </childnode>
        <childnode refid="18019" relation="include">
        </childnode>
        <childnode refid="18017" relation="include">
        </childnode>
      </node>
      <node id="18014">
        <label>GL/freeglut.h</label>
      </node>
      <node id="18031">
        <label>pthread.h</label>
      </node>
      <node id="18029">
        <label>string.h</label>
      </node>
      <node id="18033">
        <label>vector</label>
      </node>
      <node id="18027">
        <label>network.h</label>
        <link refid="network_8h"/>
        <childnode refid="18028" relation="include">
        </childnode>
        <childnode refid="18029" relation="include">
        </childnode>
        <childnode refid="18005" relation="include">
        </childnode>
        <childnode refid="18006" relation="include">
        </childnode>
      </node>
      <node id="17996">
        <label>sstream</label>
      </node>
      <node id="17995">
        <label>scheduler.h</label>
        <link refid="scheduler_8h"/>
        <childnode refid="17992" relation="include">
        </childnode>
        <childnode refid="17996" relation="include">
        </childnode>
        <childnode refid="17997" relation="include">
        </childnode>
        <childnode refid="17998" relation="include">
        </childnode>
        <childnode refid="17994" relation="include">
        </childnode>
        <childnode refid="17999" relation="include">
        </childnode>
        <childnode refid="18000" relation="include">
        </childnode>
        <childnode refid="18001" relation="include">
        </childnode>
        <childnode refid="18002" relation="include">
        </childnode>
        <childnode refid="18003" relation="include">
        </childnode>
        <childnode refid="18030" relation="include">
        </childnode>
      </node>
      <node id="18018">
        <label>math.h</label>
      </node>
      <node id="18023">
        <label>color.h</label>
        <link refid="color_8h"/>
        <childnode refid="17992" relation="include">
        </childnode>
        <childnode refid="18012" relation="include">
        </childnode>
        <childnode refid="18020" relation="include">
        </childnode>
        <childnode refid="18021" relation="include">
        </childnode>
        <childnode refid="18010" relation="include">
        </childnode>
      </node>
      <node id="17992">
        <label>iostream</label>
      </node>
      <node id="18028">
        <label>deque</label>
      </node>
      <node id="18000">
        <label>boost/bind.hpp</label>
      </node>
      <node id="17990">
        <label>/Users/pthalamy/Desktop/VSimRef/VisibleSim/simulatorCore/src/scheduler.cpp</label>
        <link refid="scheduler.cpp"/>
        <childnode refid="17991" relation="include">
        </childnode>
        <childnode refid="17992" relation="include">
        </childnode>
        <childnode refid="17993" relation="include">
        </childnode>
        <childnode refid="17994" relation="include">
        </childnode>
        <childnode refid="17995" relation="include">
        </childnode>
        <childnode refid="18035" relation="include">
        </childnode>
      </node>
      <node id="18001">
        <label>boost/interprocess/sync/interprocess_mutex.hpp</label>
      </node>
      <node id="18035">
        <label>trace.h</label>
        <link refid="trace_8h"/>
        <childnode refid="18012" relation="include">
        </childnode>
      </node>
      <node id="18003">
        <label>events.h</label>
        <link refid="events_8h"/>
        <childnode refid="17998" relation="include">
        </childnode>
        <childnode refid="18004" relation="include">
        </childnode>
        <childnode refid="18005" relation="include">
        </childnode>
        <childnode refid="18006" relation="include">
        </childnode>
        <childnode refid="18026" relation="include">
        </childnode>
        <childnode refid="18027" relation="include">
        </childnode>
        <childnode refid="18023" relation="include">
        </childnode>
      </node>
      <node id="18007">
        <label>boost/random.hpp</label>
      </node>
      <node id="18034">
        <label>world.h</label>
        <link refid="world_8h"/>
        <childnode refid="17992" relation="include">
        </childnode>
        <childnode refid="17997" relation="include">
        </childnode>
        <childnode refid="18033" relation="include">
        </childnode>
        <childnode refid="18001" relation="include">
        </childnode>
        <childnode refid="17994" relation="include">
        </childnode>
        <childnode refid="18006" relation="include">
        </childnode>
        <childnode refid="18009" relation="include">
        </childnode>
        <childnode refid="18035" relation="include">
        </childnode>
      </node>
      <node id="18015">
        <label>GL/gl.h</label>
      </node>
      <node id="18011">
        <label>stdio.h</label>
      </node>
      <node id="18025">
        <label>clock.h</label>
        <link refid="clock_8h"/>
        <childnode refid="18006" relation="include">
        </childnode>
        <childnode refid="17991" relation="include">
        </childnode>
        <childnode refid="17992" relation="include">
        </childnode>
        <childnode refid="18007" relation="include">
        </childnode>
        <childnode refid="18008" relation="include">
        </childnode>
      </node>
      <node id="17998">
        <label>inttypes.h</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespace_base_simulator">BaseSimulator</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>scheduler.cpp</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/><sp/>Created<sp/>on:<sp/>23<sp/>mars<sp/>2013</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>Author:<sp/>dom</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;assert.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="scheduler_8h" kindref="compound">scheduler.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="trace_8h" kindref="compound">trace.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;stdint.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacestd" kindref="compound">std</ref>;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_base_simulator" kindref="compound">BaseSimulator</ref><sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><ref refid="class_base_simulator_1_1_scheduler" kindref="compound">Scheduler</ref><sp/>*Scheduler::scheduler=NULL;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22" refid="class_base_simulator_1_1_scheduler_1a39592d973751ef2e8cec4a086f100e7e" refkind="member"><highlight class="normal">Scheduler::Scheduler()<sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="trace_8h_1a61a3c9a18380aafb6e430e79bf596557" kindref="member">OUTPUT</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Scheduler<sp/>constructor&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(uint64_t)<sp/>!=<sp/>8)<sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="trace_8h_1a6667b9548cdadbd55cabd90840a4edeb" kindref="member">ERRPUT</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\033[1;31m&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;ERROR<sp/>:<sp/>Scheduler<sp/>requires<sp/>8bytes<sp/>integer<sp/>that<sp/>are<sp/>not<sp/>available<sp/>on<sp/>this<sp/>computer&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\033[0m&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(EXIT_FAILURE);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(scheduler<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scheduler<sp/>=<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="trace_8h_1a6667b9548cdadbd55cabd90840a4edeb" kindref="member">ERRPUT</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\033[1;31m&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Only<sp/>one<sp/>Scheduler<sp/>instance<sp/>can<sp/>be<sp/>created,<sp/>aborting<sp/>!&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\033[0m&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(EXIT_FAILURE);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>currentDate<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>maximumDate<sp/>=<sp/>UINT_MAX;<sp/></highlight><highlight class="comment">//<sp/>no<sp/>time<sp/>limitation<sp/>by<sp/>default</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>eventsMapSize<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>largestEventsMapSize<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="41"><highlight class="normal">}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="class_base_simulator_1_1_scheduler_1ac11343e2de03e636df91f89e30fcd9b1" refkind="member"><highlight class="normal">Scheduler::~Scheduler()<sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>removeKeywords();</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="trace_8h_1a61a3c9a18380aafb6e430e79bf596557" kindref="member">OUTPUT</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Scheduler<sp/>destructor&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="46"><highlight class="normal">}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="class_base_simulator_1_1_scheduler_1abbc91e91f78b52204af22e66afedecb4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Scheduler::schedule(<ref refid="class_event" kindref="compound">Event</ref><sp/>*ev)<sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(ev<sp/>!=<sp/>NULL);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>stringstream<sp/>info;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="block_code_8h_1a56b05f33015aed5e05468e7319580b56" kindref="member">EventPtr</ref><sp/>pev(ev);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>info<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Schedule<sp/>a<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>pev-&gt;getEventName()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>ev-&gt;<ref refid="class_event_1a08ba599a781bea8b678251fdb7290890" kindref="member">id</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//MODIF<sp/>NICO<sp/>:<sp/>cette<sp/>ligne<sp/>me<sp/>spam<sp/>trop<sp/>l&apos;affichage^^</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//~<sp/>trace(info.str());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pev-&gt;date<sp/>&lt;<sp/>Scheduler::currentDate)<sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="trace_8h_1a61a3c9a18380aafb6e430e79bf596557" kindref="member">OUTPUT</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;ERROR<sp/>:<sp/>An<sp/>event<sp/>cannot<sp/>be<sp/>schedule<sp/>in<sp/>the<sp/>past<sp/>!\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="trace_8h_1a61a3c9a18380aafb6e430e79bf596557" kindref="member">OUTPUT</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;current<sp/>time<sp/>:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>Scheduler::currentDate<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="trace_8h_1a61a3c9a18380aafb6e430e79bf596557" kindref="member">OUTPUT</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;ev-&gt;eventDate<sp/>:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>pev-&gt;date<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="trace_8h_1a61a3c9a18380aafb6e430e79bf596557" kindref="member">OUTPUT</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;ev-&gt;getEventName()<sp/>:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>pev-&gt;getEventName()<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pev-&gt;date<sp/>&gt;<sp/>maximumDate)<sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="trace_8h_1a61a3c9a18380aafb6e430e79bf596557" kindref="member">OUTPUT</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;WARNING<sp/>:<sp/>An<sp/>event<sp/>should<sp/>not<sp/>be<sp/>schedule<sp/>beyond<sp/>the<sp/>end<sp/>of<sp/>simulation<sp/>date<sp/>!\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="trace_8h_1a61a3c9a18380aafb6e430e79bf596557" kindref="member">OUTPUT</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;pev-&gt;date<sp/>:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>pev-&gt;date<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="trace_8h_1a61a3c9a18380aafb6e430e79bf596557" kindref="member">OUTPUT</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;maximumDate<sp/>:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>maximumDate<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>lock();</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>eventsMap.insert(pair&lt;uint64_t,<sp/>EventPtr&gt;(pev-&gt;date,pev));</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>eventsMapSize++;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(largestEventsMapSize<sp/>&lt;<sp/>eventsMapSize)<sp/>largestEventsMapSize<sp/>=<sp/>eventsMapSize;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>unlock();</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="84"><highlight class="normal">}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86" refid="class_base_simulator_1_1_scheduler_1a7f415c6da6d2f533407b173ad08a1bae" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Scheduler::removeEventsToBlock(<ref refid="class_base_simulator_1_1_building_block" kindref="compound">BuildingBlock</ref><sp/>*bb)<sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>lock();</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>multimap&lt;uint64_t,EventPtr&gt;::iterator<sp/>im<sp/>=<sp/>eventsMap.begin();</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_base_simulator_1_1_building_block" kindref="compound">BuildingBlock</ref><sp/>*cb=NULL;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="trace_8h_1a61a3c9a18380aafb6e430e79bf596557" kindref="member">OUTPUT</ref><sp/>&lt;&lt;<sp/>bb<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(im!=eventsMap.end())<sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cb=(*im).second-&gt;getConcernedBlock();</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="trace_8h_1a61a3c9a18380aafb6e430e79bf596557" kindref="member">OUTPUT</ref><sp/>&lt;&lt;<sp/>cb<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cb==bb)<sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multimap&lt;uint64_t,EventPtr&gt;::iterator<sp/>im2<sp/>=<sp/>im;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(im<sp/>!=<sp/>eventsMap.begin())<sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>im--;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eventsMap.erase(im2);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eventsMap.erase(im2);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>im<sp/>=<sp/>eventsMap.begin();</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>im++;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>unlock();</highlight></codeline>
<codeline lineno="106"><highlight class="normal">}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108" refid="class_base_simulator_1_1_scheduler_1ae81ef60dad0226f78f234599c674628f" refkind="member"><highlight class="normal">uint64_t<sp/>Scheduler::now()<sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(currentDate);</highlight></codeline>
<codeline lineno="110"><highlight class="normal">}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112" refid="class_base_simulator_1_1_scheduler_1a9d417c5bf3558a7344362b5c7076a56b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Scheduler::scheduleLock(<ref refid="class_event" kindref="compound">Event</ref><sp/>*ev)<sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>schedule(ev);<sp/></highlight><highlight class="comment">//lock<sp/>done<sp/>in<sp/>schedule</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal">}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116" refid="class_base_simulator_1_1_scheduler_1af6601a5e1b70ff8ee02400b4657f6a22" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Scheduler::trace(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>message,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_color" kindref="compound">Color</ref><sp/>&amp;color)<sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>GLUT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>mutex_trace.lock();</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_glut_context_1a7824b09892fd1d2ede8a2bcfad0e8b87" kindref="member">GlutContext::addTrace</ref>(message,</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,color);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>mutex_trace.unlock();</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="trace_8h_1a61a3c9a18380aafb6e430e79bf596557" kindref="member">OUTPUT</ref>.precision(6);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="trace_8h_1a61a3c9a18380aafb6e430e79bf596557" kindref="member">OUTPUT</ref><sp/>&lt;&lt;<sp/>fixed<sp/>&lt;&lt;<sp/>(double)(currentDate)/1000000<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>#&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>message<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="124"><highlight class="normal">}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126" refid="class_base_simulator_1_1_scheduler_1a4d733428435018614ba07bfd12c9cbdb" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Scheduler::lock()<sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>mutex_schedule.lock();</highlight></codeline>
<codeline lineno="128"><highlight class="normal">}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130" refid="class_base_simulator_1_1_scheduler_1a398ea684955459c97fd9a15e541b8440" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Scheduler::unlock()<sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>mutex_schedule.unlock();</highlight></codeline>
<codeline lineno="132"><highlight class="normal">}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134" refid="class_base_simulator_1_1_scheduler_1a29d72be4ed6f925d6ea20a5584050d21" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Scheduler::stop(uint64_t<sp/>date)<sp/>{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>debugDate=date;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>schedulerMode<sp/>=<sp/><ref refid="scheduler_8h_1ae1e648a30c72e0d958e0d14e7437daab" kindref="member">SCHEDULER_MODE_DEBUG</ref>;</highlight></codeline>
<codeline lineno="137"><highlight class="normal">}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139" refid="class_base_simulator_1_1_scheduler_1a8046d5cb5c7f085ca848ddf368fd96b5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Scheduler::restart()<sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>schedulerMode<sp/>=<sp/><ref refid="scheduler_8h_1a3a4cfd397890dfeab298e023f1623422" kindref="member">SCHEDULER_MODE_REALTIME</ref>;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>currentDate=debugDate;</highlight></codeline>
<codeline lineno="142"><highlight class="normal">}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144" refid="class_base_simulator_1_1_scheduler_1ac3807abb2d5f62b5208da9b046c6101d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Scheduler::debug(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>&amp;command,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>&amp;result)<sp/>{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>ostringstream<sp/>sout;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>sout.str(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(command==</highlight><highlight class="stringliteral">&quot;help&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;run\nstep\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;get@id:attribute\nAttributes:\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;Keyword*&gt;::const_iterator<sp/>ci<sp/>=<sp/>tabKeywords.begin();</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(ci!=tabKeywords.end())<sp/>{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sout<sp/>&lt;&lt;<sp/>(*ci)-&gt;id;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((*ci)-&gt;comment!=</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>sout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;//<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>(*ci)-&gt;comment<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>sout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ci++;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>sout.str();</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(command==</highlight><highlight class="stringliteral">&quot;run&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>restart();</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(command==</highlight><highlight class="stringliteral">&quot;step&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>debugDate<sp/>=<sp/>now();</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>restart();</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>if<sp/>(command.substr(0,3)==&quot;get&quot;)<sp/>{</highlight></codeline>
<codeline lineno="171"><highlight class="comment">//<sp/>command<sp/>get@id:attribute</highlight></codeline>
<codeline lineno="172"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size_t<sp/>found<sp/>=<sp/>command.find(&quot;:&quot;);</highlight></codeline>
<codeline lineno="173"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(command.at(3)==&apos;@&apos;)<sp/>{</highlight></codeline>
<codeline lineno="174"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(found!=string::npos)<sp/>{</highlight></codeline>
<codeline lineno="175"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>idc=atoi(command.substr(4,found-4).c_str());</highlight></codeline>
<codeline lineno="176"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(idc&gt;0<sp/>&amp;&amp;<sp/>idc&lt;getWorld()-&gt;getNbBlocks())<sp/>{</highlight></codeline>
<codeline lineno="177"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentId=idc;</highlight></codeline>
<codeline lineno="178"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>else<sp/>{</highlight></codeline>
<codeline lineno="179"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sout<sp/>&lt;&lt;<sp/>&quot;Error:<sp/>bad<sp/>blockId,<sp/>use<sp/>@&quot;<sp/>&lt;&lt;<sp/>currentId<sp/>&lt;&lt;&quot;<sp/>instead.\n&quot;;</highlight></codeline>
<codeline lineno="180"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="181"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="182"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="183"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getWorld()-&gt;getBlockById(currentId)-&gt;getAttribute(command.substr(found+1),sout);</highlight></codeline>
<codeline lineno="184"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//sout<sp/>&lt;&lt;<sp/>&quot;@&quot;<sp/>&lt;&lt;<sp/>currentId<sp/>&lt;&lt;<sp/>&quot;:&quot;<sp/>&lt;&lt;<sp/>sout.str();</highlight></codeline>
<codeline lineno="185"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>sout.str();</highlight></codeline>
<codeline lineno="186"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>id<sp/>=<sp/>currentId;</highlight></codeline>
<codeline lineno="187"><highlight class="comment"><sp/><sp/><sp/><sp/>}*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="189"><highlight class="normal">}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>BaseSimulator<sp/>namespace</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/pthalamy/Desktop/VSimRef/VisibleSim/simulatorCore/src/scheduler.cpp"/>
  </compounddef>
</doxygen>
