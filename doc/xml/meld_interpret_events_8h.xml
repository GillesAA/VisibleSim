<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="meld_interpret_events_8h" kind="file" language="C++">
    <compoundname>meldInterpretEvents.h</compoundname>
    <includes refid="building_block_8h" local="yes">buildingBlock.h</includes>
    <includes refid="meld_interpret_v_m_8h" local="yes">meldInterpretVM.h</includes>
    <includes refid="events_8h" local="yes">events.h</includes>
    <includes refid="network_8h" local="yes">network.h</includes>
    <includedby refid="blinky_blocks_block_8cpp" local="yes">/Users/pthalamy/Desktop/VSimRef/VisibleSim/simulatorCore/src/blinkyBlocksBlock.cpp</includedby>
    <includedby refid="meld_interpret_events_8cpp" local="yes">/Users/pthalamy/Desktop/VSimRef/VisibleSim/simulatorCore/src/meldInterpretEvents.cpp</includedby>
    <includedby refid="meld_interpret_scheduler_8cpp" local="yes">/Users/pthalamy/Desktop/VSimRef/VisibleSim/simulatorCore/src/meldInterpretScheduler.cpp</includedby>
    <includedby refid="meld_interpret_v_m_8cpp" local="yes">/Users/pthalamy/Desktop/VSimRef/VisibleSim/simulatorCore/src/meldInterpretVM.cpp</includedby>
    <incdepgraph>
      <node id="14992">
        <label>list</label>
      </node>
      <node id="15022">
        <label>openglViewer.h</label>
        <link refid="opengl_viewer_8h"/>
        <childnode refid="14995" relation="include">
        </childnode>
        <childnode refid="15023" relation="include">
        </childnode>
        <childnode refid="15004" relation="include">
        </childnode>
        <childnode refid="15009" relation="include">
        </childnode>
        <childnode refid="14993" relation="include">
        </childnode>
        <childnode refid="15024" relation="include">
        </childnode>
      </node>
      <node id="15004">
        <label>matrice44.h</label>
        <link refid="matrice44_8h"/>
        <childnode refid="15000" relation="include">
        </childnode>
        <childnode refid="14998" relation="include">
        </childnode>
        <childnode refid="14999" relation="include">
        </childnode>
        <childnode refid="15005" relation="include">
        </childnode>
        <childnode refid="15006" relation="include">
        </childnode>
      </node>
      <node id="14995">
        <label>shaders.h</label>
        <link refid="shaders_8h"/>
        <childnode refid="14996" relation="include">
        </childnode>
        <childnode refid="14997" relation="include">
        </childnode>
        <childnode refid="14998" relation="include">
        </childnode>
        <childnode refid="14999" relation="include">
        </childnode>
        <childnode refid="15000" relation="include">
        </childnode>
        <childnode refid="15001" relation="include">
        </childnode>
        <childnode refid="15002" relation="include">
        </childnode>
        <childnode refid="15003" relation="include">
        </childnode>
        <childnode refid="15004" relation="include">
        </childnode>
        <childnode refid="15009" relation="include">
        </childnode>
      </node>
      <node id="15015">
        <label>meldInterpretVM.h</label>
        <link refid="meld_interpret_v_m_8h"/>
        <childnode refid="15005" relation="include">
        </childnode>
        <childnode refid="15014" relation="include">
        </childnode>
        <childnode refid="14996" relation="include">
        </childnode>
        <childnode refid="15016" relation="include">
        </childnode>
        <childnode refid="14989" relation="include">
        </childnode>
        <childnode refid="15017" relation="include">
        </childnode>
        <childnode refid="15010" relation="include">
        </childnode>
        <childnode refid="15018" relation="include">
        </childnode>
      </node>
      <node id="15006">
        <label>vecteur.h</label>
        <link refid="vecteur_8h"/>
        <childnode refid="14998" relation="include">
        </childnode>
        <childnode refid="14999" relation="include">
        </childnode>
        <childnode refid="15007" relation="include">
        </childnode>
        <childnode refid="15008" relation="include">
        </childnode>
      </node>
      <node id="15024">
        <label>interface.h</label>
        <link refid="interface_8h"/>
        <childnode refid="15025" relation="include">
        </childnode>
        <childnode refid="14998" relation="include">
        </childnode>
        <childnode refid="14999" relation="include">
        </childnode>
        <childnode refid="15008" relation="include">
        </childnode>
        <childnode refid="14993" relation="include">
        </childnode>
        <childnode refid="15026" relation="include">
        </childnode>
        <childnode refid="15010" relation="include">
        </childnode>
      </node>
      <node id="14989">
        <label>boost/shared_ptr.hpp</label>
      </node>
      <node id="15027">
        <label>assert.h</label>
      </node>
      <node id="15014">
        <label>stdint.h</label>
      </node>
      <node id="14997">
        <label>stdlib.h</label>
      </node>
      <node id="14988">
        <label>buildingBlock.h</label>
        <link refid="building_block_8h"/>
        <childnode refid="14989" relation="include">
        </childnode>
        <childnode refid="14990" relation="include">
        </childnode>
        <childnode refid="14991" relation="include">
        </childnode>
        <childnode refid="14992" relation="include">
        </childnode>
        <childnode refid="14993" relation="include">
        </childnode>
        <childnode refid="15011" relation="include">
        </childnode>
        <childnode refid="15013" relation="include">
        </childnode>
      </node>
      <node id="15007">
        <label>cmath</label>
      </node>
      <node id="15031">
        <label>stdexcept</label>
      </node>
      <node id="14994">
        <label>string</label>
      </node>
      <node id="15000">
        <label>GL/glew.h</label>
      </node>
      <node id="14987">
        <label>/Users/pthalamy/Desktop/VSimRef/VisibleSim/simulatorCore/src/meldInterpretEvents.h</label>
        <link refid="meldInterpretEvents.h"/>
        <childnode refid="14988" relation="include">
        </childnode>
        <childnode refid="15015" relation="include">
        </childnode>
        <childnode refid="15032" relation="include">
        </childnode>
        <childnode refid="15034" relation="include">
        </childnode>
      </node>
      <node id="15017">
        <label>map</label>
      </node>
      <node id="15008">
        <label>memory.h</label>
      </node>
      <node id="14993">
        <label>glBlock.h</label>
        <link refid="gl_block_8h"/>
        <childnode refid="14994" relation="include">
        </childnode>
        <childnode refid="14995" relation="include">
        </childnode>
        <childnode refid="15006" relation="include">
        </childnode>
        <childnode refid="15010" relation="include">
        </childnode>
      </node>
      <node id="14999">
        <label>fstream</label>
      </node>
      <node id="15011">
        <label>blockCode.h</label>
        <link refid="block_code_8h"/>
        <childnode refid="14988" relation="include">
        </childnode>
        <childnode refid="15012" relation="include">
        </childnode>
      </node>
      <node id="15003">
        <label>GL/glu.h</label>
      </node>
      <node id="15033">
        <label>uniqueEventsId.h</label>
        <link refid="unique_events_id_8h"/>
      </node>
      <node id="15009">
        <label>camera.h</label>
        <link refid="camera_8h"/>
        <childnode refid="15005" relation="include">
        </childnode>
        <childnode refid="15006" relation="include">
        </childnode>
        <childnode refid="15004" relation="include">
        </childnode>
      </node>
      <node id="15001">
        <label>GL/freeglut.h</label>
      </node>
      <node id="15030">
        <label>boost/asio.hpp</label>
      </node>
      <node id="15023">
        <label>pthread.h</label>
      </node>
      <node id="15029">
        <label>string.h</label>
      </node>
      <node id="15025">
        <label>vector</label>
      </node>
      <node id="15034">
        <label>network.h</label>
        <link refid="network_8h"/>
        <childnode refid="15035" relation="include">
        </childnode>
        <childnode refid="15029" relation="include">
        </childnode>
        <childnode refid="14989" relation="include">
        </childnode>
        <childnode refid="14988" relation="include">
        </childnode>
      </node>
      <node id="15005">
        <label>math.h</label>
      </node>
      <node id="15010">
        <label>color.h</label>
        <link refid="color_8h"/>
        <childnode refid="14998" relation="include">
        </childnode>
        <childnode refid="14999" relation="include">
        </childnode>
        <childnode refid="15007" relation="include">
        </childnode>
        <childnode refid="15008" relation="include">
        </childnode>
        <childnode refid="14995" relation="include">
        </childnode>
      </node>
      <node id="14998">
        <label>iostream</label>
      </node>
      <node id="15016">
        <label>sys/timeb.h</label>
      </node>
      <node id="15035">
        <label>deque</label>
      </node>
      <node id="14991">
        <label>boost/interprocess/sync/interprocess_mutex.hpp</label>
      </node>
      <node id="15019">
        <label>blinkyBlocksBlockCode.h</label>
        <link refid="blinky_blocks_block_code_8h"/>
        <childnode refid="15011" relation="include">
        </childnode>
        <childnode refid="15018" relation="include">
        </childnode>
      </node>
      <node id="15018">
        <label>blinkyBlocksBlock.h</label>
        <link refid="blinky_blocks_block_8h"/>
        <childnode refid="14988" relation="include">
        </childnode>
        <childnode refid="15010" relation="include">
        </childnode>
        <childnode refid="15019" relation="include">
        </childnode>
        <childnode refid="15020" relation="include">
        </childnode>
        <childnode refid="15030" relation="include">
        </childnode>
        <childnode refid="15031" relation="include">
        </childnode>
      </node>
      <node id="15028">
        <label>trace.h</label>
        <link refid="trace_8h"/>
        <childnode refid="14999" relation="include">
        </childnode>
      </node>
      <node id="15032">
        <label>events.h</label>
        <link refid="events_8h"/>
        <childnode refid="15012" relation="include">
        </childnode>
        <childnode refid="14994" relation="include">
        </childnode>
        <childnode refid="14989" relation="include">
        </childnode>
        <childnode refid="14988" relation="include">
        </childnode>
        <childnode refid="15033" relation="include">
        </childnode>
        <childnode refid="15034" relation="include">
        </childnode>
        <childnode refid="15010" relation="include">
        </childnode>
      </node>
      <node id="14990">
        <label>boost/random.hpp</label>
      </node>
      <node id="15026">
        <label>world.h</label>
        <link refid="world_8h"/>
        <childnode refid="14998" relation="include">
        </childnode>
        <childnode refid="15017" relation="include">
        </childnode>
        <childnode refid="15025" relation="include">
        </childnode>
        <childnode refid="14991" relation="include">
        </childnode>
        <childnode refid="15027" relation="include">
        </childnode>
        <childnode refid="14988" relation="include">
        </childnode>
        <childnode refid="14993" relation="include">
        </childnode>
        <childnode refid="15028" relation="include">
        </childnode>
      </node>
      <node id="15020">
        <label>blinkyBlocksGlBlock.h</label>
        <link refid="blinky_blocks_gl_block_8h"/>
        <childnode refid="14994" relation="include">
        </childnode>
        <childnode refid="15021" relation="include">
        </childnode>
        <childnode refid="14993" relation="include">
        </childnode>
      </node>
      <node id="15002">
        <label>GL/gl.h</label>
      </node>
      <node id="14996">
        <label>stdio.h</label>
      </node>
      <node id="15021">
        <label>objLoader.h</label>
        <link refid="obj_loader_8h"/>
        <childnode refid="15022" relation="include">
        </childnode>
        <childnode refid="14998" relation="include">
        </childnode>
        <childnode refid="14999" relation="include">
        </childnode>
        <childnode refid="14994" relation="include">
        </childnode>
        <childnode refid="15025" relation="include">
        </childnode>
        <childnode refid="15007" relation="include">
        </childnode>
        <childnode refid="14997" relation="include">
        </childnode>
        <childnode refid="15029" relation="include">
        </childnode>
      </node>
      <node id="15013">
        <label>clock.h</label>
        <link refid="clock_8h"/>
        <childnode refid="14988" relation="include">
        </childnode>
        <childnode refid="15014" relation="include">
        </childnode>
        <childnode refid="14998" relation="include">
        </childnode>
        <childnode refid="14990" relation="include">
        </childnode>
        <childnode refid="14992" relation="include">
        </childnode>
      </node>
      <node id="15012">
        <label>inttypes.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="15037">
        <label>/Users/pthalamy/Desktop/VSimRef/VisibleSim/simulatorCore/src/blinkyBlocksBlock.cpp</label>
        <link refid="blinky_blocks_block_8cpp"/>
      </node>
      <node id="15039">
        <label>/Users/pthalamy/Desktop/VSimRef/VisibleSim/simulatorCore/src/meldInterpretScheduler.cpp</label>
        <link refid="meld_interpret_scheduler_8cpp"/>
      </node>
      <node id="15036">
        <label>/Users/pthalamy/Desktop/VSimRef/VisibleSim/simulatorCore/src/meldInterpretEvents.h</label>
        <link refid="meldInterpretEvents.h"/>
        <childnode refid="15037" relation="include">
        </childnode>
        <childnode refid="15038" relation="include">
        </childnode>
        <childnode refid="15039" relation="include">
        </childnode>
        <childnode refid="15040" relation="include">
        </childnode>
      </node>
      <node id="15038">
        <label>/Users/pthalamy/Desktop/VSimRef/VisibleSim/simulatorCore/src/meldInterpretEvents.cpp</label>
        <link refid="meld_interpret_events_8cpp"/>
      </node>
      <node id="15040">
        <label>/Users/pthalamy/Desktop/VSimRef/VisibleSim/simulatorCore/src/meldInterpretVM.cpp</label>
        <link refid="meld_interpret_v_m_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="class_meld_interpret_1_1_v_m_set_id_event" prot="public">MeldInterpret::VMSetIdEvent</innerclass>
    <innerclass refid="class_meld_interpret_1_1_v_m_stop_event" prot="public">MeldInterpret::VMStopEvent</innerclass>
    <innerclass refid="class_meld_interpret_1_1_v_m_send_message_event" prot="public">MeldInterpret::VMSendMessageEvent</innerclass>
    <innerclass refid="class_meld_interpret_1_1_v_m_handle_debug_command_event" prot="public">MeldInterpret::VMHandleDebugCommandEvent</innerclass>
    <innerclass refid="class_meld_interpret_1_1_v_m_debug_pause_sim_event" prot="public">MeldInterpret::VMDebugPauseSimEvent</innerclass>
    <innerclass refid="class_meld_interpret_1_1_v_m_end_poll_event" prot="public">MeldInterpret::VMEndPollEvent</innerclass>
    <innerclass refid="class_meld_interpret_1_1_compute_predicate_event" prot="public">MeldInterpret::ComputePredicateEvent</innerclass>
    <innerclass refid="class_meld_interpret_1_1_add_tuple_event" prot="public">MeldInterpret::AddTupleEvent</innerclass>
    <innerclass refid="class_meld_interpret_1_1_remove_tuple_event" prot="public">MeldInterpret::RemoveTupleEvent</innerclass>
    <innernamespace refid="namespace_meld_interpret">MeldInterpret</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>MELDINTERPEVENTS_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MELDINTERPEVENTS_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="building_block_8h" kindref="compound">buildingBlock.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="meld_interpret_v_m_8h" kindref="compound">meldInterpretVM.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="events_8h" kindref="compound">events.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="network_8h" kindref="compound">network.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//We&apos;ll<sp/>see<sp/>later<sp/>for<sp/>a<sp/>debugger</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//#include<sp/>&quot;meldProcessDebugger.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_meld_interpret" kindref="compound">MeldInterpret</ref><sp/>{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//===========================================================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VMSetIdEvent<sp/><sp/>(class)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//===========================================================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20" refid="class_meld_interpret_1_1_v_m_set_id_event" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_meld_interpret_1_1_v_m_set_id_event" kindref="compound">VMSetIdEvent</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_block_event" kindref="compound">BlockEvent</ref><sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_meld_interpret_1_1_v_m_set_id_event_1ad76b74d696367f1e56fb2931e9d734cb" kindref="member">VMSetIdEvent</ref>(uint64_t,<sp/><ref refid="class_base_simulator_1_1_building_block" kindref="compound">BaseSimulator::BuildingBlock</ref><sp/>*conBlock);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_meld_interpret_1_1_v_m_set_id_event_1ad76b74d696367f1e56fb2931e9d734cb" kindref="member">VMSetIdEvent</ref>(<ref refid="class_meld_interpret_1_1_v_m_set_id_event" kindref="compound">VMSetIdEvent</ref><sp/>*ev);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_meld_interpret_1_1_v_m_set_id_event_1af36ccf78b4926632eeb60914cc3dbe4b" kindref="member">~VMSetIdEvent</ref>();</highlight></codeline>
<codeline lineno="26" refid="class_meld_interpret_1_1_v_m_set_id_event_1a44f963cce741d709ac208b7fd6ffe99f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_meld_interpret_1_1_v_m_set_id_event_1a44f963cce741d709ac208b7fd6ffe99f" kindref="member">consumeBlockEvent</ref>()<sp/>{};</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_meld_interpret_1_1_v_m_set_id_event_1aa4efdd8f132b54b429e262d9b3f2295b" kindref="member">consume</ref>();</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="class_meld_interpret_1_1_v_m_set_id_event_1a7f56db1b9a75395e683f7c19a03bbfa2" kindref="member">getEventName</ref>();</highlight></codeline>
<codeline lineno="29"><highlight class="normal">};</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">//===========================================================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VMStopEvent<sp/><sp/>(class)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">//===========================================================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="class_meld_interpret_1_1_v_m_stop_event" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_meld_interpret_1_1_v_m_stop_event" kindref="compound">VMStopEvent</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_block_event" kindref="compound">BlockEvent</ref><sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_meld_interpret_1_1_v_m_stop_event" kindref="compound">VMStopEvent</ref>(uint64_t,<sp/><ref refid="class_base_simulator_1_1_building_block" kindref="compound">BaseSimulator::BuildingBlock</ref><sp/>*conBlock);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_meld_interpret_1_1_v_m_stop_event" kindref="compound">VMStopEvent</ref>(<ref refid="class_meld_interpret_1_1_v_m_stop_event" kindref="compound">VMStopEvent</ref><sp/>*ev);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>~<ref refid="class_meld_interpret_1_1_v_m_stop_event" kindref="compound">VMStopEvent</ref>();</highlight></codeline>
<codeline lineno="43" refid="class_meld_interpret_1_1_v_m_stop_event_1a01abc3ec3afe0967ba0f8f4276e61b27" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_meld_interpret_1_1_v_m_stop_event_1a01abc3ec3afe0967ba0f8f4276e61b27" kindref="member">consumeBlockEvent</ref>()<sp/>{};</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_meld_interpret_1_1_v_m_set_id_event_1aa4efdd8f132b54b429e262d9b3f2295b" kindref="member">consume</ref>();</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="class_meld_interpret_1_1_v_m_set_id_event_1a7f56db1b9a75395e683f7c19a03bbfa2" kindref="member">getEventName</ref>();</highlight></codeline>
<codeline lineno="46"><highlight class="normal">};</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="comment">//===========================================================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VMSendMessageEvent<sp/><sp/>(class)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="comment">//===========================================================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55" refid="class_meld_interpret_1_1_v_m_send_message_event" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_meld_interpret_1_1_v_m_send_message_event" kindref="compound">VMSendMessageEvent</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_block_event" kindref="compound">BlockEvent</ref><sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="57" refid="class_meld_interpret_1_1_v_m_send_message_event_1a23015c41f45edadcee44c448e8cbd91e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="network_8h_1a00ba9ba2c62de520385018123878d265" kindref="member">MessagePtr</ref><sp/><ref refid="class_meld_interpret_1_1_v_m_send_message_event_1a23015c41f45edadcee44c448e8cbd91e" kindref="member">message</ref>;</highlight></codeline>
<codeline lineno="58" refid="class_meld_interpret_1_1_v_m_send_message_event_1ae0b8f9a4e3bda0928b0fd270682f34cc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_p2_p_network_interface" kindref="compound">P2PNetworkInterface</ref><sp/>*<ref refid="class_meld_interpret_1_1_v_m_send_message_event_1ae0b8f9a4e3bda0928b0fd270682f34cc" kindref="member">sourceInterface</ref>;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_meld_interpret_1_1_v_m_send_message_event" kindref="compound">VMSendMessageEvent</ref>(uint64_t,<sp/><ref refid="class_base_simulator_1_1_building_block" kindref="compound">BaseSimulator::BuildingBlock</ref><sp/>*conBlock,<sp/><ref refid="network_8h_1a00ba9ba2c62de520385018123878d265" kindref="member">MessagePtr</ref><sp/>mes,<sp/><ref refid="class_p2_p_network_interface" kindref="compound">P2PNetworkInterface</ref><sp/>*ni);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_meld_interpret_1_1_v_m_send_message_event" kindref="compound">VMSendMessageEvent</ref>(<ref refid="class_meld_interpret_1_1_v_m_send_message_event" kindref="compound">VMSendMessageEvent</ref><sp/>*ev);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>~<ref refid="class_meld_interpret_1_1_v_m_send_message_event" kindref="compound">VMSendMessageEvent</ref>();</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_meld_interpret_1_1_v_m_set_id_event_1a44f963cce741d709ac208b7fd6ffe99f" kindref="member">consumeBlockEvent</ref>();</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="class_meld_interpret_1_1_v_m_set_id_event_1a7f56db1b9a75395e683f7c19a03bbfa2" kindref="member">getEventName</ref>();</highlight></codeline>
<codeline lineno="65"><highlight class="normal">};</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="comment">//===========================================================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VMHandleDebugCommandEvent<sp/><sp/>(class)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="comment">//===========================================================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73" refid="class_meld_interpret_1_1_v_m_handle_debug_command_event" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_meld_interpret_1_1_v_m_handle_debug_command_event" kindref="compound">VMHandleDebugCommandEvent</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_block_event" kindref="compound">BlockEvent</ref><sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_meld_interpret_1_1_v_m_handle_debug_command_event" kindref="compound">VMHandleDebugCommandEvent</ref>(uint64_t,<sp/><ref refid="class_base_simulator_1_1_building_block" kindref="compound">BaseSimulator::BuildingBlock</ref><sp/>*conBlock);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_meld_interpret_1_1_v_m_handle_debug_command_event" kindref="compound">VMHandleDebugCommandEvent</ref>(<ref refid="class_meld_interpret_1_1_v_m_handle_debug_command_event" kindref="compound">VMHandleDebugCommandEvent</ref><sp/>*ev);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>~<ref refid="class_meld_interpret_1_1_v_m_handle_debug_command_event" kindref="compound">VMHandleDebugCommandEvent</ref>();</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_meld_interpret_1_1_v_m_set_id_event_1a44f963cce741d709ac208b7fd6ffe99f" kindref="member">consumeBlockEvent</ref>();</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="class_meld_interpret_1_1_v_m_set_id_event_1a7f56db1b9a75395e683f7c19a03bbfa2" kindref="member">getEventName</ref>();</highlight></codeline>
<codeline lineno="82"><highlight class="normal">};</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="comment">//===========================================================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VMDebugMessageEvent<sp/><sp/>(class)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="comment">//===========================================================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90" refid="class_meld_interpret_1_1_v_m_debug_pause_sim_event" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_meld_interpret_1_1_v_m_debug_pause_sim_event" kindref="compound">VMDebugPauseSimEvent</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_event" kindref="compound">Event</ref><sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_meld_interpret_1_1_v_m_debug_pause_sim_event" kindref="compound">VMDebugPauseSimEvent</ref>(uint64_t);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_meld_interpret_1_1_v_m_debug_pause_sim_event" kindref="compound">VMDebugPauseSimEvent</ref>(<ref refid="class_meld_interpret_1_1_v_m_debug_pause_sim_event" kindref="compound">VMDebugPauseSimEvent</ref><sp/>*ev);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>~<ref refid="class_meld_interpret_1_1_v_m_debug_pause_sim_event" kindref="compound">VMDebugPauseSimEvent</ref>();</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_meld_interpret_1_1_v_m_set_id_event_1aa4efdd8f132b54b429e262d9b3f2295b" kindref="member">consume</ref>();</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="class_meld_interpret_1_1_v_m_set_id_event_1a7f56db1b9a75395e683f7c19a03bbfa2" kindref="member">getEventName</ref>();</highlight></codeline>
<codeline lineno="99"><highlight class="normal">};</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="comment">//===========================================================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VMEndPollEvent<sp/><sp/>(class)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="comment">//===========================================================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107" refid="class_meld_interpret_1_1_v_m_end_poll_event" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_meld_interpret_1_1_v_m_end_poll_event" kindref="compound">VMEndPollEvent</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_block_event" kindref="compound">BlockEvent</ref><sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_meld_interpret_1_1_v_m_end_poll_event" kindref="compound">VMEndPollEvent</ref>(uint64_t,<sp/><ref refid="class_base_simulator_1_1_building_block" kindref="compound">BaseSimulator::BuildingBlock</ref><sp/>*conBlock);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_meld_interpret_1_1_v_m_end_poll_event" kindref="compound">VMEndPollEvent</ref>(<ref refid="class_meld_interpret_1_1_v_m_end_poll_event" kindref="compound">VMEndPollEvent</ref><sp/>*ev);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>~<ref refid="class_meld_interpret_1_1_v_m_end_poll_event" kindref="compound">VMEndPollEvent</ref>();</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_meld_interpret_1_1_v_m_set_id_event_1a44f963cce741d709ac208b7fd6ffe99f" kindref="member">consumeBlockEvent</ref>();</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="class_meld_interpret_1_1_v_m_set_id_event_1a7f56db1b9a75395e683f7c19a03bbfa2" kindref="member">getEventName</ref>();</highlight></codeline>
<codeline lineno="115"><highlight class="normal">};</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="comment">//===========================================================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ComputePredicateEvent<sp/><sp/>(class)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="comment">//===========================================================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124" refid="class_meld_interpret_1_1_compute_predicate_event" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_meld_interpret_1_1_compute_predicate_event" kindref="compound">ComputePredicateEvent</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_block_event" kindref="compound">BlockEvent</ref><sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//No<sp/>idea<sp/>for<sp/>members<sp/>for<sp/>the<sp/>moment</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_meld_interpret_1_1_compute_predicate_event" kindref="compound">ComputePredicateEvent</ref>(uint64_t,<sp/><ref refid="class_base_simulator_1_1_building_block" kindref="compound">BaseSimulator::BuildingBlock</ref><sp/>*conBlock);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_meld_interpret_1_1_compute_predicate_event" kindref="compound">ComputePredicateEvent</ref>(<ref refid="class_meld_interpret_1_1_compute_predicate_event" kindref="compound">ComputePredicateEvent</ref><sp/>*ev);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>~<ref refid="class_meld_interpret_1_1_compute_predicate_event" kindref="compound">ComputePredicateEvent</ref>();</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_meld_interpret_1_1_v_m_set_id_event_1a44f963cce741d709ac208b7fd6ffe99f" kindref="member">consumeBlockEvent</ref>();</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="class_meld_interpret_1_1_v_m_set_id_event_1a7f56db1b9a75395e683f7c19a03bbfa2" kindref="member">getEventName</ref>();</highlight></codeline>
<codeline lineno="133"><highlight class="normal">};</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="comment">//===========================================================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AddTupleEvent<sp/><sp/>(class)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="comment">//===========================================================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141" refid="class_meld_interpret_1_1_add_tuple_event" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_meld_interpret_1_1_add_tuple_event" kindref="compound">AddTupleEvent</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_block_event" kindref="compound">BlockEvent</ref><sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="143" refid="class_meld_interpret_1_1_add_tuple_event_1a17879404a6579b8d6213ac412636db35" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="meld_interpret_v_m_8h_1aaa784ac17a38ae36881653819fe742ab" kindref="member">tuple_t</ref><sp/><ref refid="class_meld_interpret_1_1_add_tuple_event_1a17879404a6579b8d6213ac412636db35" kindref="member">tuple</ref>;</highlight></codeline>
<codeline lineno="144" refid="class_meld_interpret_1_1_add_tuple_event_1a7da27da8aa77a177c2f0dc27455206a9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="meld_interpret_v_m_8h_1ab8ef12fab634c171394422d0ee8baf94" kindref="member">byte</ref><sp/><ref refid="class_meld_interpret_1_1_add_tuple_event_1a7da27da8aa77a177c2f0dc27455206a9" kindref="member">face</ref>;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_meld_interpret_1_1_add_tuple_event" kindref="compound">AddTupleEvent</ref>(uint64_t,<sp/><ref refid="class_base_simulator_1_1_building_block" kindref="compound">BaseSimulator::BuildingBlock</ref><sp/>*conBlock,<sp/><ref refid="meld_interpret_v_m_8h_1aaa784ac17a38ae36881653819fe742ab" kindref="member">tuple_t</ref><sp/>tpl,<sp/><ref refid="meld_interpret_v_m_8h_1ab8ef12fab634c171394422d0ee8baf94" kindref="member">byte</ref><sp/>f);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_meld_interpret_1_1_add_tuple_event" kindref="compound">AddTupleEvent</ref>(<ref refid="class_meld_interpret_1_1_add_tuple_event" kindref="compound">AddTupleEvent</ref><sp/>*ev);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>~<ref refid="class_meld_interpret_1_1_add_tuple_event" kindref="compound">AddTupleEvent</ref>();</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_meld_interpret_1_1_v_m_set_id_event_1a44f963cce741d709ac208b7fd6ffe99f" kindref="member">consumeBlockEvent</ref>();</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="class_meld_interpret_1_1_v_m_set_id_event_1a7f56db1b9a75395e683f7c19a03bbfa2" kindref="member">getEventName</ref>();</highlight></codeline>
<codeline lineno="151"><highlight class="normal">};</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="comment">//===========================================================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RemoveTupleEvent<sp/><sp/>(class)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="comment">//===========================================================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160" refid="class_meld_interpret_1_1_remove_tuple_event" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_meld_interpret_1_1_remove_tuple_event" kindref="compound">RemoveTupleEvent</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_block_event" kindref="compound">BlockEvent</ref><sp/>{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="162" refid="class_meld_interpret_1_1_remove_tuple_event_1ad4a25c7f24140b2aa80d3bd49286ad1b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="meld_interpret_v_m_8h_1aaa784ac17a38ae36881653819fe742ab" kindref="member">tuple_t</ref><sp/><ref refid="class_meld_interpret_1_1_remove_tuple_event_1ad4a25c7f24140b2aa80d3bd49286ad1b" kindref="member">tuple</ref>;</highlight></codeline>
<codeline lineno="163" refid="class_meld_interpret_1_1_remove_tuple_event_1a5905d78789ea3343439461ac2ddf7d75" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="meld_interpret_v_m_8h_1ab8ef12fab634c171394422d0ee8baf94" kindref="member">byte</ref><sp/><ref refid="class_meld_interpret_1_1_remove_tuple_event_1a5905d78789ea3343439461ac2ddf7d75" kindref="member">face</ref>;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_meld_interpret_1_1_remove_tuple_event" kindref="compound">RemoveTupleEvent</ref>(uint64_t,<sp/><ref refid="class_base_simulator_1_1_building_block" kindref="compound">BaseSimulator::BuildingBlock</ref><sp/>*conBlock,<sp/><ref refid="meld_interpret_v_m_8h_1aaa784ac17a38ae36881653819fe742ab" kindref="member">tuple_t</ref><sp/>tpl,<sp/><ref refid="meld_interpret_v_m_8h_1ab8ef12fab634c171394422d0ee8baf94" kindref="member">byte</ref><sp/>f);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_meld_interpret_1_1_remove_tuple_event" kindref="compound">RemoveTupleEvent</ref>(<ref refid="class_meld_interpret_1_1_remove_tuple_event" kindref="compound">RemoveTupleEvent</ref><sp/>*ev);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>~<ref refid="class_meld_interpret_1_1_remove_tuple_event" kindref="compound">RemoveTupleEvent</ref>();</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_meld_interpret_1_1_v_m_set_id_event_1a44f963cce741d709ac208b7fd6ffe99f" kindref="member">consumeBlockEvent</ref>();</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="class_meld_interpret_1_1_v_m_set_id_event_1a7f56db1b9a75395e683f7c19a03bbfa2" kindref="member">getEventName</ref>();</highlight></codeline>
<codeline lineno="170"><highlight class="normal">};</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>MeldInterpret<sp/>namespace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>MELDINTERPEVENTS_H_<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="/Users/pthalamy/Desktop/VSimRef/VisibleSim/simulatorCore/src/meldInterpretEvents.h"/>
  </compounddef>
</doxygen>
