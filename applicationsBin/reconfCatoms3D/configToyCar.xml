<?xml version="1.0" standalone="no" ?>
<world gridSize="210, 210, 210">
    <camera target="200,200,120" directionSpherical="0,50,650" angle="45" near="0.01" far="2500.0" />
    <spotlight target="200,200,120" directionSpherical="125,40,1500" angle="30" near="80.0" far="2500.0"/>
    <blockList color="128,128,128" blocksize="1,1,1">

		<block position="10,10,2" orientation="0"/>
	</blockList>
  <targetList>
    <target format="csg">
        <csg content="
            scale([0.4,0.4,0.4]) union() {
    translate([-28,24,0]) color([1,0,0])  difference() {
        difference() {
            union() {
                cube([8,64,10],true);
translate([28,-24,-18]) cube([100,150,3],true);
                translate([0,-36+1*8,5.75]) cylinder(1.5,2.25,2.25,true);
                translate([0,-36+2*8,5.75]) cylinder(1.5,2.25,2.25,true);
                translate([0,-36+3*8,5.75]) cylinder(1.5,2.25,2.25,true);
                translate([0,-36+4*8,5.75]) cylinder(1.5,2.25,2.25,true);
                translate([0,-36+5*8,5.75]) cylinder(1.5,2.25,2.25,true);
                translate([0,-36+6*8,5.75]) cylinder(1.5,2.25,2.25,true);
                translate([0,-36+7*8,5.75]) cylinder(1.5,2.25,2.25,true);
                translate([0,-36+8*8,5.75]) cylinder(1.5,2.25,2.25,true);
            }
            translate([0,0,-3.6]) cube([5,8*8-3,3.1],true);
        }
        translate([0,-40+2*8,0.75])  rotate([0,90,0])
        union() {
            cylinder(8.8,2.25,2.25,true);
            translate([0,0,-4.0]) cylinder(0.8,2.75,2.75,true	);
            translate([0,0,4.0]) cylinder(0.8,2.75,2.75,true	);
        }
        translate([0,-40+3*8,0.75]) rotate([0,90,0])
        union() {
            cylinder(8.8,2.25,2.25,true);
            translate([0,0,-4.0]) cylinder(0.8,2.75,2.75,true	);
            translate([0,0,4.0]) cylinder(0.8,2.75,2.75,true	);
        }
        translate([0,-40+4*8,0.75]) rotate([0,90,0])
        union() {
            cylinder(8.8,2.25,2.25,true);
            translate([0,0,-4.0]) cylinder(0.8,2.75,2.75,true	);
            translate([0,0,4.0]) cylinder(0.8,2.75,2.75,true	);
        }
        translate([0,-40+5*8,0.75]) rotate([0,90,0])
        union() {
            cylinder(8.8,2.25,2.25,true);
            translate([0,0,-4.0]) cylinder(0.8,2.75,2.75,true	);
            translate([0,0,4.0]) cylinder(0.8,2.75,2.75,true	);
        }
        translate([0,-40+6*8,0.75]) rotate([0,90,0])
        union() {
            cylinder(8.8,2.25,2.25,true);
            translate([0,0,-4.0]) cylinder(0.8,2.75,2.75,true	);
            translate([0,0,4.0]) cylinder(0.8,2.75,2.75,true	);
        }
        translate([0,-40+7*8,0.75]) rotate([0,90,0])
        union() {
            cylinder(8.8,2.25,2.25,true);
            translate([0,0,-4.0]) cylinder(0.8,2.75,2.75,true	);
            translate([0,0,4.0]) cylinder(0.8,2.75,2.75,true	);
        }
        translate([0,-40+8*8,0.75]) rotate([0,90,0])
        union() {
            cylinder(8.8,2.25,2.25,true);
            translate([0,0,-4.0]) cylinder(0.8,2.75,2.75,true	);
            translate([0,0,4.0]) cylinder(0.8,2.75,2.75,true	);
        }
    }
    translate([28,24,0]) color([1,0,0])  difference() {
        difference() {
            union() {
                cube([8,64,10],true);
                translate([0,-36+1*8,5.75]) cylinder(1.5,2.25,2.25,true);
                translate([0,-36+2*8,5.75]) cylinder(1.5,2.25,2.25,true);
                translate([0,-36+3*8,5.75]) cylinder(1.5,2.25,2.25,true);
                translate([0,-36+4*8,5.75]) cylinder(1.5,2.25,2.25,true);
                translate([0,-36+5*8,5.75]) cylinder(1.5,2.25,2.25,true);
                translate([0,-36+6*8,5.75]) cylinder(1.5,2.25,2.25,true);
                translate([0,-36+7*8,5.75]) cylinder(1.5,2.25,2.25,true);
                translate([0,-36+8*8,5.75]) cylinder(1.5,2.25,2.25,true);
            }
            translate([0,0,-3.6]) cube([5,8*8-3,3.1],true);
        }
        translate([0,-40+2*8,0.75])  rotate([0,90,0])
        union() {
            cylinder(8.8,2.25,2.25,true);
            translate([0,0,-4.0]) cylinder(0.8,2.75,2.75,true	);
            translate([0,0,4.0]) cylinder(0.8,2.75,2.75,true	);
        }
        translate([0,-40+3*8,0.75]) rotate([0,90,0])
        union() {
            cylinder(8.8,2.25,2.25,true);
            translate([0,0,-4.0]) cylinder(0.8,2.75,2.75,true	);
            translate([0,0,4.0]) cylinder(0.8,2.75,2.75,true	);
        }
        translate([0,-40+4*8,0.75]) rotate([0,90,0])
        union() {
            cylinder(8.8,2.25,2.25,true);
            translate([0,0,-4.0]) cylinder(0.8,2.75,2.75,true	);
            translate([0,0,4.0]) cylinder(0.8,2.75,2.75,true	);
        }
        translate([0,-40+5*8,0.75]) rotate([0,90,0])
        union() {
            cylinder(8.8,2.25,2.25,true);
            translate([0,0,-4.0]) cylinder(0.8,2.75,2.75,true	);
            translate([0,0,4.0]) cylinder(0.8,2.75,2.75,true	);
        }
        translate([0,-40+6*8,0.75]) rotate([0,90,0])
        union() {
            cylinder(8.8,2.25,2.25,true);
            translate([0,0,-4.0]) cylinder(0.8,2.75,2.75,true	);
            translate([0,0,4.0]) cylinder(0.8,2.75,2.75,true	);
        }
        translate([0,-40+7*8,0.75]) rotate([0,90,0])
        union() {
            cylinder(8.8,2.25,2.25,true);
            translate([0,0,-4.0]) cylinder(0.8,2.75,2.75,true	);
            translate([0,0,4.0]) cylinder(0.8,2.75,2.75,true	);
        }
        translate([0,-40+8*8,0.75]) rotate([0,90,0])
        union() {
            cylinder(8.8,2.25,2.25,true);
            translate([0,0,-4.0]) cylinder(0.8,2.75,2.75,true	);
            translate([0,0,4.0]) cylinder(0.8,2.75,2.75,true	);
        }
    }
    translate([-4,-32,0]) color([1,0,0])  difference() {
        difference() {
            union() {
                cube([8,64,10],true);
                translate([0,-36+1*8,5.75]) cylinder(1.5,2.25,2.25,true);
                translate([0,-36+2*8,5.75]) cylinder(1.5,2.25,2.25,true);
                translate([0,-36+3*8,5.75]) cylinder(1.5,2.25,2.25,true);
                translate([0,-36+4*8,5.75]) cylinder(1.5,2.25,2.25,true);
                translate([0,-36+5*8,5.75]) cylinder(1.5,2.25,2.25,true);
                translate([0,-36+6*8,5.75]) cylinder(1.5,2.25,2.25,true);
                translate([0,-36+7*8,5.75]) cylinder(1.5,2.25,2.25,true);
                translate([0,-36+8*8,5.75]) cylinder(1.5,2.25,2.25,true);
            }
            translate([0,0,-3.6]) cube([5,8*8-3,3.1],true);
        }
        translate([0,-40+2*8,0.75])  rotate([0,90,0])
        union() {
            cylinder(8.8,2.25,2.25,true);
            translate([0,0,-4.0]) cylinder(0.8,2.75,2.75,true	);
            translate([0,0,4.0]) cylinder(0.8,2.75,2.75,true	);
        }
        translate([0,-40+3*8,0.75]) rotate([0,90,0])
        union() {
            cylinder(8.8,2.25,2.25,true);
            translate([0,0,-4.0]) cylinder(0.8,2.75,2.75,true	);
            translate([0,0,4.0]) cylinder(0.8,2.75,2.75,true	);
        }
        translate([0,-40+4*8,0.75]) rotate([0,90,0])
        union() {
            cylinder(8.8,2.25,2.25,true);
            translate([0,0,-4.0]) cylinder(0.8,2.75,2.75,true	);
            translate([0,0,4.0]) cylinder(0.8,2.75,2.75,true	);
        }
        translate([0,-40+5*8,0.75]) rotate([0,90,0])
        union() {
            cylinder(8.8,2.25,2.25,true);
            translate([0,0,-4.0]) cylinder(0.8,2.75,2.75,true	);
            translate([0,0,4.0]) cylinder(0.8,2.75,2.75,true	);
        }
        translate([0,-40+6*8,0.75]) rotate([0,90,0])
        union() {
            cylinder(8.8,2.25,2.25,true);
            translate([0,0,-4.0]) cylinder(0.8,2.75,2.75,true	);
            translate([0,0,4.0]) cylinder(0.8,2.75,2.75,true	);
        }
        translate([0,-40+7*8,0.75]) rotate([0,90,0])
        union() {
            cylinder(8.8,2.25,2.25,true);
            translate([0,0,-4.0]) cylinder(0.8,2.75,2.75,true	);
            translate([0,0,4.0]) cylinder(0.8,2.75,2.75,true	);
        }
        translate([0,-40+8*8,0.75]) rotate([0,90,0])
        union() {
            cylinder(8.8,2.25,2.25,true);
            translate([0,0,-4.0]) cylinder(0.8,2.75,2.75,true	);
            translate([0,0,4.0]) cylinder(0.8,2.75,2.75,true	);
        }
    }
    translate([4,-32,0]) color([1,0,0])  difference() {
        difference() {
            union() {
                cube([8,64,10],true);
                translate([0,-36+1*8,5.75]) cylinder(1.5,2.25,2.25,true);
                translate([0,-36+2*8,5.75]) cylinder(1.5,2.25,2.25,true);
                translate([0,-36+3*8,5.75]) cylinder(1.5,2.25,2.25,true);
                translate([0,-36+4*8,5.75]) cylinder(1.5,2.25,2.25,true);
                translate([0,-36+5*8,5.75]) cylinder(1.5,2.25,2.25,true);
                translate([0,-36+6*8,5.75]) cylinder(1.5,2.25,2.25,true);
                translate([0,-36+7*8,5.75]) cylinder(1.5,2.25,2.25,true);
                translate([0,-36+8*8,5.75]) cylinder(1.5,2.25,2.25,true);
            }
            translate([0,0,-3.6]) cube([5,8*8-3,3.1],true);
        }
        translate([0,-40+2*8,0.75])  rotate([0,90,0])
        union() {
            cylinder(8.8,2.25,2.25,true);
            translate([0,0,-4.0]) cylinder(0.8,2.75,2.75,true	);
            translate([0,0,4.0]) cylinder(0.8,2.75,2.75,true	);
        }
        translate([0,-40+3*8,0.75]) rotate([0,90,0])
        union() {
            cylinder(8.8,2.25,2.25,true);
            translate([0,0,-4.0]) cylinder(0.8,2.75,2.75,true	);
            translate([0,0,4.0]) cylinder(0.8,2.75,2.75,true	);
        }
        translate([0,-40+4*8,0.75]) rotate([0,90,0])
        union() {
            cylinder(8.8,2.25,2.25,true);
            translate([0,0,-4.0]) cylinder(0.8,2.75,2.75,true	);
            translate([0,0,4.0]) cylinder(0.8,2.75,2.75,true	);
        }
        translate([0,-40+5*8,0.75]) rotate([0,90,0])
        union() {
            cylinder(8.8,2.25,2.25,true);
            translate([0,0,-4.0]) cylinder(0.8,2.75,2.75,true	);
            translate([0,0,4.0]) cylinder(0.8,2.75,2.75,true	);
        }
        translate([0,-40+6*8,0.75]) rotate([0,90,0])
        union() {
            cylinder(8.8,2.25,2.25,true);
            translate([0,0,-4.0]) cylinder(0.8,2.75,2.75,true	);
            translate([0,0,4.0]) cylinder(0.8,2.75,2.75,true	);
        }
        translate([0,-40+7*8,0.75]) rotate([0,90,0])
        union() {
            cylinder(8.8,2.25,2.25,true);
            translate([0,0,-4.0]) cylinder(0.8,2.75,2.75,true	);
            translate([0,0,4.0]) cylinder(0.8,2.75,2.75,true	);
        }
        translate([0,-40+8*8,0.75]) rotate([0,90,0])
        union() {
            cylinder(8.8,2.25,2.25,true);
            translate([0,0,-4.0]) cylinder(0.8,2.75,2.75,true	);
            translate([0,0,4.0]) cylinder(0.8,2.75,2.75,true	);
        }
    }
    translate([0,4,0]) rotate([0,0,90]) color([1,0,0]) difference() {
		union() {
            cube([8,8*6,10],true);
            translate([0,-28+1*8,5.75]) cylinder(1.5,2.25,2.25,true);
            translate([0,-28+2*8,5.75]) cylinder(1.5,2.25,2.25,true);
            translate([0,-28+3*8,5.75]) cylinder(1.5,2.25,2.25,true);
            translate([0,-28+4*8,5.75]) cylinder(1.5,2.25,2.25,true);
            translate([0,-28+5*8,5.75]) cylinder(1.5,2.25,2.25,true);
            translate([0,-28+6*8,5.75]) cylinder(1.5,2.25,2.25,true);
		}
		translate([0,0,-3.6]) cube([5,8*6-3,3.1],true);
	}
    translate([0,0,-6.667]) color([1,1,0]) union() { //421
        difference() {
            cube([8*8,8*2,3.33], true);
            translate([0,0,-0.5]) cube([8*8-3,8*2-3,3],true);
        }
        translate([-36+1*8,-12+1*8,2.4166]) cylinder(1.5,2.25,2.25,true);
        translate([-36+2*8,-12+1*8,2.4166]) cylinder(1.5,2.25,2.25,true);
        translate([-36+3*8,-12+1*8,2.4166]) cylinder(1.5,2.25,2.25,true);
        translate([-36+4*8,-12+1*8,2.4166]) cylinder(1.5,2.25,2.25,true);
        translate([-36+5*8,-12+1*8,2.4166]) cylinder(1.5,2.25,2.25,true);
        translate([-36+6*8,-12+1*8,2.4166]) cylinder(1.5,2.25,2.25,true);
        translate([-36+7*8,-12+1*8,2.4166]) cylinder(1.5,2.25,2.25,true);
        translate([-36+8*8,-12+1*8,2.4166]) cylinder(1.5,2.25,2.25,true);
        translate([-36+1*8,-12+2*8,2.4166]) cylinder(1.5,2.25,2.25,true);
        translate([-36+2*8,-12+2*8,2.4166]) cylinder(1.5,2.25,2.25,true);
        translate([-36+3*8,-12+2*8,2.4166]) cylinder(1.5,2.25,2.25,true);
        translate([-36+4*8,-12+2*8,2.4166]) cylinder(1.5,2.25,2.25,true);
        translate([-36+5*8,-12+2*8,2.4166]) cylinder(1.5,2.25,2.25,true);
        translate([-36+6*8,-12+2*8,2.4166]) cylinder(1.5,2.25,2.25,true);
        translate([-36+7*8,-12+2*8,2.4166]) cylinder(1.5,2.25,2.25,true);
        translate([-36+8*8,-12+2*8,2.4166]) cylinder(1.5,2.25,2.25,true);
    }
    translate([0,0,6.667]) color([1,1,0]) union() { //421
        difference() {
            cube([8*8,8*2,3.33], true);
            translate([0,0,-0.5]) cube([8*8-3,8*2-3,3],true);
        }
        translate([-36+1*8,-12+1*8,2.4166]) cylinder(1.5,2.25,2.25,true);
        translate([-36+2*8,-12+1*8,2.4166]) cylinder(1.5,2.25,2.25,true);
        translate([-36+3*8,-12+1*8,2.4166]) cylinder(1.5,2.25,2.25,true);
        translate([-36+4*8,-12+1*8,2.4166]) cylinder(1.5,2.25,2.25,true);
        translate([-36+5*8,-12+1*8,2.4166]) cylinder(1.5,2.25,2.25,true);
        translate([-36+6*8,-12+1*8,2.4166]) cylinder(1.5,2.25,2.25,true);
        translate([-36+7*8,-12+1*8,2.4166]) cylinder(1.5,2.25,2.25,true);
        translate([-36+8*8,-12+1*8,2.4166]) cylinder(1.5,2.25,2.25,true);
        translate([-36+1*8,-12+2*8,2.4166]) cylinder(1.5,2.25,2.25,true);
        translate([-36+2*8,-12+2*8,2.4166]) cylinder(1.5,2.25,2.25,true);
        translate([-36+3*8,-12+2*8,2.4166]) cylinder(1.5,2.25,2.25,true);
        translate([-36+4*8,-12+2*8,2.4166]) cylinder(1.5,2.25,2.25,true);
        translate([-36+5*8,-12+2*8,2.4166]) cylinder(1.5,2.25,2.25,true);
        translate([-36+6*8,-12+2*8,2.4166]) cylinder(1.5,2.25,2.25,true);
        translate([-36+7*8,-12+2*8,2.4166]) cylinder(1.5,2.25,2.25,true);
        translate([-36+8*8,-12+2*8,2.4166]) cylinder(1.5,2.25,2.25,true);
    }
    translate([0,48,0.75]) rotate([0,0,90]) color([0.5,0.5,0.5]) intersection() {
		union() {
				cube([5, 12*8, 2], center = true);
				rotate([0, 90, 0])
				cube([5, 12*8, 2], center = true);
		}
		rotate([90, 0, 0]) cylinder(124*8,2.25,2.25,true);
	}
    translate([-8,-32,0.75]) rotate([90,0,90]) color([0.8,0.8,0.8]) difference() {
		union() {
			cylinder(16,2.25,2.25,true);
			cylinder(1.5,2.75,2.75,true);
		}
		union() {
			cylinder(17,1.75,1.75,true);
			translate([0,0,6]) cube([1,5.5,6],true);
			translate([0,0,-6]) cube([1,5.5,6],true);
		}

	}
    translate([8,-32,0.75]) rotate([90,0,90]) color([0.8,0.8,0.8]) difference() {
		union() {
			cylinder(16,2.25,2.25,true);
			cylinder(1.5,2.75,2.75,true);
		}
		union() {
			cylinder(17,1.75,1.75,true);
			translate([0,0,6]) cube([1,5.5,6],true);
			translate([0,0,-6]) cube([1,5.5,6],true);
		}

	}
    translate([-24,16,0.75]) rotate([90,0,90]) color([0.8,0.8,0.8]) difference() {
		union() {
			cylinder(16,2.25,2.25,true);
			cylinder(1.5,2.75,2.75,true);
		}
		union() {
			cylinder(17,1.75,1.75,true);
			translate([0,0,6]) cube([1,5.5,6],true);
			translate([0,0,-6]) cube([1,5.5,6],true);
		}

	}
    translate([24,16,0.75]) rotate([90,0,90]) color([0.8,0.8,0.8]) difference() {
		union() {
			cylinder(16,2.25,2.25,true);
			cylinder(1.5,2.75,2.75,true);
		}
		union() {
			cylinder(17,1.75,1.75,true);
			translate([0,0,6]) cube([1,5.5,6],true);
			translate([0,0,-6]) cube([1,5.5,6],true);
		}

	}
    translate([32.2,48,0.75]) rotate([0,90,0]) union() {
		color([0.5,0.5,0.5])
		difference() {
			union() {
				translate([0,0,6]) cylinder(12,17,17, true);
					rotate([0,0,0*18]) translate([2,-16,3]) cube([4,5,6],true);
					rotate([0,0,0*18+9]) translate([2,-16,8.75		]) cube([4,5,6],true);
                    rotate([0,0,1*18]) translate([2,-16,3]) cube([4,5,6],true);
					rotate([0,0,1*18+9]) translate([2,-16,8.75		]) cube([4,5,6],true);
                    rotate([0,0,2*18]) translate([2,-16,3]) cube([4,5,6],true);;
					rotate([0,0,2*18+9]) translate([2,-16,8.75		]) cube([4,5,6],true);
                    rotate([0,0,3*18]) translate([2,-16,3]) cube([4,5,6],true);
					rotate([0,0,3*18+9]) translate([2,-16,8.75		]) cube([4,5,6],true);
                    rotate([0,0,4*18]) translate([2,-16,3]) cube([4,5,6],true);
					rotate([0,0,4*18+9]) translate([2,-16,8.75		]) cube([4,5,6],true);
                    rotate([0,0,5*18]) translate([2,-16,3]) cube([4,5,6],true);
					rotate([0,0,5*18+9]) translate([2,-16,8.75		]) cube([4,5,6],true);
                    rotate([0,0,6*18]) translate([2,-16,3]) cube([4,5,6],true);
					rotate([0,0,6*18+9]) translate([2,-16,8.75		]) cube([4,5,6],true);
                    rotate([0,0,7*18]) translate([2,-16,3]) cube([4,5,6],true);
					rotate([0,0,7*18+9]) translate([2,-16,8.75		]) cube([4,5,6],true);
                    rotate([0,0,8*18]) translate([2,-16,3]) cube([4,5,6],true);
					rotate([0,0,8*18+9]) translate([2,-16,8.75		]) cube([4,5,6],true);
                    rotate([0,0,9*18]) translate([2,-16,3]) cube([4,5,6],true);
					rotate([0,0,9*18+9]) translate([2,-16,8.75		]) cube([4,5,6],true);
                    rotate([0,0,10*18]) translate([2,-16,3]) cube([4,5,6],true);
					rotate([0,0,10*18+9]) translate([2,-16,8.75		]) cube([4,5,6],true);
                    rotate([0,0,11*18]) translate([2,-16,3]) cube([4,5,6],true);
					rotate([0,0,11*18+9]) translate([2,-16,8.75		]) cube([4,5,6],true);
                    rotate([0,0,12*18]) translate([2,-16,3]) cube([4,5,6],true);
					rotate([0,0,12*18+9]) translate([2,-16,8.75		]) cube([4,5,6],true);
                    rotate([0,0,13*18]) translate([2,-16,3]) cube([4,5,6],true);
					rotate([0,0,13*18+9]) translate([2,-16,8.75		]) cube([4,5,6],true);
                    rotate([0,0,14*18]) translate([2,-16,3]) cube([4,5,6],true);
					rotate([0,0,14*18+9]) translate([2,-16,8.75		]) cube([4,5,6],true);
                    rotate([0,0,15*18]) translate([2,-16,3]) cube([4,5,6],true);
					rotate([0,0,15*18+9]) translate([2,-16,8.75		]) cube([4,5,6],true);
                    rotate([0,0,16*18]) translate([2,-16,3]) cube([4,5,6],true);
					rotate([0,0,16*18+9]) translate([2,-16,8.75		]) cube([4,5,6],true);
                    rotate([0,0,17*18]) translate([2,-16,3]) cube([4,5,6],true);
					rotate([0,0,17*18+9]) translate([2,-16,8.75		]) cube([4,5,6],true);
                    rotate([0,0,18*18]) translate([2,-16,3]) cube([4,5,6],true);
					rotate([0,0,18*18+9]) translate([2,-16,8.75		]) cube([4,5,6],true);
                    rotate([0,0,19*18]) translate([2,-16,3]) cube([4,5,6],true);
					rotate([0,0,19*18+9]) translate([2,-16,8.75		]) cube([4,5,6],true);

			}
			translate([0,0,39.5]) sphere(32.5);
		}
		color([1,0,0]) translate([0,0,3.9]) cylinder(8.2,8.5,8.5, true);
	}
    translate([-32.2,48,0.75]) rotate([0,90,180]) union() {
		color([0.5,0.5,0.5])
		difference() {
			union() {
				translate([0,0,6]) cylinder(12,17,17, true);
					rotate([0,0,0*18]) translate([2,-16,3]) cube([4,5,6],true);
					rotate([0,0,0*18+9]) translate([2,-16,8.75		]) cube([4,5,6],true);
                    rotate([0,0,1*18]) translate([2,-16,3]) cube([4,5,6],true);
					rotate([0,0,1*18+9]) translate([2,-16,8.75		]) cube([4,5,6],true);
                    rotate([0,0,2*18]) translate([2,-16,3]) cube([4,5,6],true);;
					rotate([0,0,2*18+9]) translate([2,-16,8.75		]) cube([4,5,6],true);
                    rotate([0,0,3*18]) translate([2,-16,3]) cube([4,5,6],true);
					rotate([0,0,3*18+9]) translate([2,-16,8.75		]) cube([4,5,6],true);
                    rotate([0,0,4*18]) translate([2,-16,3]) cube([4,5,6],true);
					rotate([0,0,4*18+9]) translate([2,-16,8.75		]) cube([4,5,6],true);
                    rotate([0,0,5*18]) translate([2,-16,3]) cube([4,5,6],true);
					rotate([0,0,5*18+9]) translate([2,-16,8.75		]) cube([4,5,6],true);
                    rotate([0,0,6*18]) translate([2,-16,3]) cube([4,5,6],true);
					rotate([0,0,6*18+9]) translate([2,-16,8.75		]) cube([4,5,6],true);
                    rotate([0,0,7*18]) translate([2,-16,3]) cube([4,5,6],true);
					rotate([0,0,7*18+9]) translate([2,-16,8.75		]) cube([4,5,6],true);
                    rotate([0,0,8*18]) translate([2,-16,3]) cube([4,5,6],true);
					rotate([0,0,8*18+9]) translate([2,-16,8.75		]) cube([4,5,6],true);
                    rotate([0,0,9*18]) translate([2,-16,3]) cube([4,5,6],true);
					rotate([0,0,9*18+9]) translate([2,-16,8.75		]) cube([4,5,6],true);
                    rotate([0,0,10*18]) translate([2,-16,3]) cube([4,5,6],true);
					rotate([0,0,10*18+9]) translate([2,-16,8.75		]) cube([4,5,6],true);
                    rotate([0,0,11*18]) translate([2,-16,3]) cube([4,5,6],true);
					rotate([0,0,11*18+9]) translate([2,-16,8.75		]) cube([4,5,6],true);
                    rotate([0,0,12*18]) translate([2,-16,3]) cube([4,5,6],true);
					rotate([0,0,12*18+9]) translate([2,-16,8.75		]) cube([4,5,6],true);
                    rotate([0,0,13*18]) translate([2,-16,3]) cube([4,5,6],true);
					rotate([0,0,13*18+9]) translate([2,-16,8.75		]) cube([4,5,6],true);
                    rotate([0,0,14*18]) translate([2,-16,3]) cube([4,5,6],true);
					rotate([0,0,14*18+9]) translate([2,-16,8.75		]) cube([4,5,6],true);
                    rotate([0,0,15*18]) translate([2,-16,3]) cube([4,5,6],true);
					rotate([0,0,15*18+9]) translate([2,-16,8.75		]) cube([4,5,6],true);
                    rotate([0,0,16*18]) translate([2,-16,3]) cube([4,5,6],true);
					rotate([0,0,16*18+9]) translate([2,-16,8.75		]) cube([4,5,6],true);
                    rotate([0,0,17*18]) translate([2,-16,3]) cube([4,5,6],true);
					rotate([0,0,17*18+9]) translate([2,-16,8.75		]) cube([4,5,6],true);
                    rotate([0,0,18*18]) translate([2,-16,3]) cube([4,5,6],true);
					rotate([0,0,18*18+9]) translate([2,-16,8.75		]) cube([4,5,6],true);
                    rotate([0,0,19*18]) translate([2,-16,3]) cube([4,5,6],true);
					rotate([0,0,19*18+9]) translate([2,-16,8.75		]) cube([4,5,6],true);

			}
			translate([0,0,39.5]) sphere(32.5);
		}
		color([1,0,0]) translate([0,0,3.9]) cylinder(8.2,8.5,8.5, true);
	}
    translate([20,16,0]) rotate([114,0,0]) union() {
        color([0.8,0.8,0.8]) rotate([90,0,0]) difference() {
            union() {
                translate([0,0,-8]) cylinder(8.0,2.5,2.5,true);
                translate([0,0,-11.5]) cylinder(1.5,3.75,3.75,true);
                cube([8,6,6],true);
                translate([0,0,-1.5]) cylinder(9,3.75,3.75,true);
                rotate([0,90,0]) cylinder(8,3.75,3.75,true);
            }
            rotate([0,90,0]) union() {
                cylinder(8.8,2.25,2.25,true);
                translate([0,0,-4.0]) cylinder(0.8,2.75,2.75,true	);
                translate([0,0,4.0]) cylinder(0.8,2.75,2.75,true	);
            }
        }
        translate([0,17,0]) color([0.5,0.5,0.5]) intersection() {
            union() {
                    cube([5, 4*8, 2], center = true);
                    rotate([0, 90, 0])
                    cube([5, 4*8, 2], center = true);
            }
            rotate([90, 0, 0])	cylinder(4*8,2.25,2.25,true);
        }
        translate([0,40,0]) rotate([270,0,0]) color([0.8,0.8,0.8]) difference() {
            union() {
                translate([0,0,-8]) cylinder(8.0,2.5,2.5,true);
                translate([0,0,-11.5]) cylinder(1.5,3.75,3.75,true);
                cube([8,6,6],true);
                translate([0,0,-1.5]) cylinder(9,3.75,3.75,true);
                rotate([0,90,0]) cylinder(8,3.75,3.75,true);
            }
            rotate([0,90,0]) union() {
                cylinder(8.8,2.25,2.25,true);
                translate([0,0,-4.0]) cylinder(0.8,2.75,2.75,true	);
                translate([0,0,4.0]) cylinder(0.8,2.75,2.75,true	);
            }
        }
    }
    translate([-20,16,0]) rotate([114,0,0]) union() {
        color([0.8,0.8,0.8]) rotate([90,0,0]) difference() {
            union() {
                translate([0,0,-8]) cylinder(8.0,2.5,2.5,true);
                translate([0,0,-11.5]) cylinder(1.5,3.75,3.75,true);
                cube([8,6,6],true);
                translate([0,0,-1.5]) cylinder(9,3.75,3.75,true);
                rotate([0,90,0]) cylinder(8,3.75,3.75,true);
            }
            rotate([0,90,0]) union() {
                cylinder(8.8,2.25,2.25,true);
                translate([0,0,-4.0]) cylinder(0.8,2.75,2.75,true	);
                translate([0,0,4.0]) cylinder(0.8,2.75,2.75,true	);
            }
        }
        translate([0,17,0]) color([0.5,0.5,0.5]) intersection() {
            union() {
                    cube([5, 4*8, 2], center = true);
                    rotate([0, 90, 0])
                    cube([5, 4*8, 2], center = true);
            }
            rotate([90, 0, 0])	cylinder(4*8,2.25,2.25,true);
        }
        translate([0,40,0]) rotate([270,0,0]) color([0.8,0.8,0.8]) difference() {
            union() {
                translate([0,0,-8]) cylinder(8.0,2.5,2.5,true);
                translate([0,0,-11.5]) cylinder(1.5,3.75,3.75,true);
                cube([8,6,6],true);
                translate([0,0,-1.5]) cylinder(9,3.75,3.75,true);
                rotate([0,90,0]) cylinder(8,3.75,3.75,true);
            }
            rotate([0,90,0]) union() {
                cylinder(8.8,2.25,2.25,true);
                translate([0,0,-4.0]) cylinder(0.8,2.75,2.75,true	);
                translate([0,0,4.0]) cylinder(0.8,2.75,2.75,true	);
            }
        }
    }

    translate([0,-60,0]) union() {
        translate([0,0,-6.667]) rotate([0,0,90]) color([0.8,0.8,0.8]) union() {
            translate([0,-4*9+2*8,2.41666]) cylinder(1.5,2.25,2.25,true);
            translate([0,-4*9+3*8,2.41666]) cylinder(1.5,2.25,2.25,true);
            translate([0,-4*9+4*8,2.41666]) cylinder(1.5,2.25,2.25,true);
            translate([0,-4*9+5*8,2.41666]) cylinder(1.5,2.25,2.25,true);
            translate([0,-4*9+6*8,2.41666]) cylinder(1.5,2.25,2.25,true);
            translate([0,-4*9+7*8,2.41666]) cylinder(1.5,2.25,2.25,true);
            difference() {
                union() {
                    cube([8.0,8.0*7,3.333],true);
                    translate([0.0,-4.0*7,0.0]) cylinder(3.33,4,4,true);
                    translate([0.0,4.0*7,0.0]) cylinder(3.33,4,4,true);
                }
                union() {
                    translate([0.0,-4.0*7,0.0]) cylinder(3.4,2.25,2.25,true);
                    translate([0.0,4.0*7,0.0]) cylinder(3.4,2.25,2.25,true);
                }
            }
        }
        translate([0,0,6.667]) rotate([0,0,90]) color([0.8,0.8,0.8]) union() {
            translate([0,-4*9+2*8,2.41666]) cylinder(1.5,2.25,2.25,true);
            translate([0,-4*9+3*8,2.41666]) cylinder(1.5,2.25,2.25,true);
            translate([0,-4*9+4*8,2.41666]) cylinder(1.5,2.25,2.25,true);
            translate([0,-4*9+5*8,2.41666]) cylinder(1.5,2.25,2.25,true);
            translate([0,-4*9+6*8,2.41666]) cylinder(1.5,2.25,2.25,true);
            translate([0,-4*9+7*8,2.41666]) cylinder(1.5,2.25,2.25,true);
            difference() {
                union() {
                    cube([8.0,8.0*7,3.333],true);
                    translate([0.0,-4.0*7,0.0]) cylinder(3.33,4,4,true);
                    translate([0.0,4.0*7,0.0]) cylinder(3.33,4,4,true);
                }
                union() {
                    translate([0.0,-4.0*7,0.0]) cylinder(3.4,2.25,2.25,true);
                    translate([0.0,4.0*7,0.0]) cylinder(3.4,2.25,2.25,true);
                }
            }
        }
        color([0.5,0.5,0.5]) translate([0,12,6.667]) difference() { // 67
            cube([8*2,8*2,3.33], true);
            translate([0,0,-0.5]) cube([8*2-3,8*2-3,3],true);
        }


        translate([4*7,0,0])	rotate([0,0,30.4028])	union() {
            union() {
                cylinder(10,4,4,true);
                cylinder(17,2.25,2.25,true);
                translate([0,0,0.75]) rotate([0,90,0]) cylinder(8,4,4,true);
                translate([0,8,3.5]) cube([8,16,3],true);
                translate([0,16,3.5]) cylinder(3,4,4,true);
                translate([0,16,9]) rotate([90,0,0]) color([0.5,0.5,0.5])
                intersection() {
                    union() {
                            cube([5, 2*8, 2], center = true);
                            rotate([0, 90, 0])
                            cube([5, 2*8, 2], center = true);
                    }
                    rotate([90, 0, 0])	cylinder(2*8,2.25,2.25,true);
                }
            }
			translate([4.1,0,0.75]) rotate([0,90,0]) union() {
                color([0.5,0.5,0.5])
                difference() {
                    union() {
                        translate([0,0,6]) cylinder(12,17,17, true);
                            rotate([0,0,0*18]) translate([2,-16,3]) cube([4,5,6],true);
                            rotate([0,0,0*18+9]) translate([2,-16,8.75		]) cube([4,5,6],true);
                            rotate([0,0,1*18]) translate([2,-16,3]) cube([4,5,6],true);
                            rotate([0,0,1*18+9]) translate([2,-16,8.75		]) cube([4,5,6],true);
                            rotate([0,0,2*18]) translate([2,-16,3]) cube([4,5,6],true);;
                            rotate([0,0,2*18+9]) translate([2,-16,8.75		]) cube([4,5,6],true);
                            rotate([0,0,3*18]) translate([2,-16,3]) cube([4,5,6],true);
                            rotate([0,0,3*18+9]) translate([2,-16,8.75		]) cube([4,5,6],true);
                            rotate([0,0,4*18]) translate([2,-16,3]) cube([4,5,6],true);
                            rotate([0,0,4*18+9]) translate([2,-16,8.75		]) cube([4,5,6],true);
                            rotate([0,0,5*18]) translate([2,-16,3]) cube([4,5,6],true);
                            rotate([0,0,5*18+9]) translate([2,-16,8.75		]) cube([4,5,6],true);
                            rotate([0,0,6*18]) translate([2,-16,3]) cube([4,5,6],true);
                            rotate([0,0,6*18+9]) translate([2,-16,8.75		]) cube([4,5,6],true);
                            rotate([0,0,7*18]) translate([2,-16,3]) cube([4,5,6],true);
                            rotate([0,0,7*18+9]) translate([2,-16,8.75		]) cube([4,5,6],true);
                            rotate([0,0,8*18]) translate([2,-16,3]) cube([4,5,6],true);
                            rotate([0,0,8*18+9]) translate([2,-16,8.75		]) cube([4,5,6],true);
                            rotate([0,0,9*18]) translate([2,-16,3]) cube([4,5,6],true);
                            rotate([0,0,9*18+9]) translate([2,-16,8.75		]) cube([4,5,6],true);
                            rotate([0,0,10*18]) translate([2,-16,3]) cube([4,5,6],true);
                            rotate([0,0,10*18+9]) translate([2,-16,8.75		]) cube([4,5,6],true);
                            rotate([0,0,11*18]) translate([2,-16,3]) cube([4,5,6],true);
                            rotate([0,0,11*18+9]) translate([2,-16,8.75		]) cube([4,5,6],true);
                            rotate([0,0,12*18]) translate([2,-16,3]) cube([4,5,6],true);
                            rotate([0,0,12*18+9]) translate([2,-16,8.75		]) cube([4,5,6],true);
                            rotate([0,0,13*18]) translate([2,-16,3]) cube([4,5,6],true);
                            rotate([0,0,13*18+9]) translate([2,-16,8.75		]) cube([4,5,6],true);
                            rotate([0,0,14*18]) translate([2,-16,3]) cube([4,5,6],true);
                            rotate([0,0,14*18+9]) translate([2,-16,8.75		]) cube([4,5,6],true);
                            rotate([0,0,15*18]) translate([2,-16,3]) cube([4,5,6],true);
                            rotate([0,0,15*18+9]) translate([2,-16,8.75		]) cube([4,5,6],true);
                            rotate([0,0,16*18]) translate([2,-16,3]) cube([4,5,6],true);
                            rotate([0,0,16*18+9]) translate([2,-16,8.75		]) cube([4,5,6],true);
                            rotate([0,0,17*18]) translate([2,-16,3]) cube([4,5,6],true);
                            rotate([0,0,17*18+9]) translate([2,-16,8.75		]) cube([4,5,6],true);
                            rotate([0,0,18*18]) translate([2,-16,3]) cube([4,5,6],true);
                            rotate([0,0,18*18+9]) translate([2,-16,8.75		]) cube([4,5,6],true);
                            rotate([0,0,19*18]) translate([2,-16,3]) cube([4,5,6],true);
                            rotate([0,0,19*18+9]) translate([2,-16,8.75		]) cube([4,5,6],true);

                    }
                    translate([0,0,39.5]) sphere(32.5);
                }
                color([1,0,0]) translate([0,0,3.9]) cylinder(8.2,8.5,8.5, true);
            }
			translate([3.8,0,0.75]) rotate([0,0,90]) color([0.5,0.5,0.5]) intersection() {
                union() {
                        cube([5, 4*8, 2], center = true);
                        rotate([0, 90, 0])
                        cube([5, 4*8, 2], center = true);
                }
                rotate([90, 0, 0])	cylinder(4*8,2.25,2.25,true);
            }
			translate([-8.1,0,0.75]) rotate([90,0,90]) 	color([0.8,0.8,0.8]) union() {
                cylinder(8,2.5,2.5,true);
                translate([0,0,-3.25]) cylinder(1.5,3.75,3.75,true);
                translate([0,0,3.25]) cylinder(1.5,3.75,3.75,true);
            }
		}
        translate([-4*7,0,0])	rotate([0,0,180+30.4028])	union() {
            rotate([0,0,180]) union() {
                cylinder(10,4,4,true);
                cylinder(17,2.25,2.25,true);
                translate([0,0,0.75]) rotate([0,90,0]) cylinder(8,4,4,true);
                translate([0,8,3.5]) cube([8,16,3],true);
                translate([0,16,3.5]) cylinder(3,4,4,true);
                translate([0,16,9]) rotate([90,0,0]) color([0.5,0.5,0.5])
                intersection() {
                    union() {
                            cube([5, 2*8, 2], center = true);
                            rotate([0, 90, 0])
                            cube([5, 2*8, 2], center = true);
                    }
                    rotate([90, 0, 0])	cylinder(2*8,2.25,2.25,true);
                }
            }
			translate([4.1,0,0.75]) rotate([0,90,0]) union() {
                                color([0.5,0.5,0.5])
                difference() {
                    union() {
                        translate([0,0,6]) cylinder(12,17,17, true);
                            rotate([0,0,0*18]) translate([2,-16,3]) cube([4,5,6],true);
                            rotate([0,0,0*18+9]) translate([2,-16,8.75		]) cube([4,5,6],true);
                            rotate([0,0,1*18]) translate([2,-16,3]) cube([4,5,6],true);
                            rotate([0,0,1*18+9]) translate([2,-16,8.75		]) cube([4,5,6],true);
                            rotate([0,0,2*18]) translate([2,-16,3]) cube([4,5,6],true);;
                            rotate([0,0,2*18+9]) translate([2,-16,8.75		]) cube([4,5,6],true);
                            rotate([0,0,3*18]) translate([2,-16,3]) cube([4,5,6],true);
                            rotate([0,0,3*18+9]) translate([2,-16,8.75		]) cube([4,5,6],true);
                            rotate([0,0,4*18]) translate([2,-16,3]) cube([4,5,6],true);
                            rotate([0,0,4*18+9]) translate([2,-16,8.75		]) cube([4,5,6],true);
                            rotate([0,0,5*18]) translate([2,-16,3]) cube([4,5,6],true);
                            rotate([0,0,5*18+9]) translate([2,-16,8.75		]) cube([4,5,6],true);
                            rotate([0,0,6*18]) translate([2,-16,3]) cube([4,5,6],true);
                            rotate([0,0,6*18+9]) translate([2,-16,8.75		]) cube([4,5,6],true);
                            rotate([0,0,7*18]) translate([2,-16,3]) cube([4,5,6],true);
                            rotate([0,0,7*18+9]) translate([2,-16,8.75		]) cube([4,5,6],true);
                            rotate([0,0,8*18]) translate([2,-16,3]) cube([4,5,6],true);
                            rotate([0,0,8*18+9]) translate([2,-16,8.75		]) cube([4,5,6],true);
                            rotate([0,0,9*18]) translate([2,-16,3]) cube([4,5,6],true);
                            rotate([0,0,9*18+9]) translate([2,-16,8.75		]) cube([4,5,6],true);
                            rotate([0,0,10*18]) translate([2,-16,3]) cube([4,5,6],true);
                            rotate([0,0,10*18+9]) translate([2,-16,8.75		]) cube([4,5,6],true);
                            rotate([0,0,11*18]) translate([2,-16,3]) cube([4,5,6],true);
                            rotate([0,0,11*18+9]) translate([2,-16,8.75		]) cube([4,5,6],true);
                            rotate([0,0,12*18]) translate([2,-16,3]) cube([4,5,6],true);
                            rotate([0,0,12*18+9]) translate([2,-16,8.75		]) cube([4,5,6],true);
                            rotate([0,0,13*18]) translate([2,-16,3]) cube([4,5,6],true);
                            rotate([0,0,13*18+9]) translate([2,-16,8.75		]) cube([4,5,6],true);
                            rotate([0,0,14*18]) translate([2,-16,3]) cube([4,5,6],true);
                            rotate([0,0,14*18+9]) translate([2,-16,8.75		]) cube([4,5,6],true);
                            rotate([0,0,15*18]) translate([2,-16,3]) cube([4,5,6],true);
                            rotate([0,0,15*18+9]) translate([2,-16,8.75		]) cube([4,5,6],true);
                            rotate([0,0,16*18]) translate([2,-16,3]) cube([4,5,6],true);
                            rotate([0,0,16*18+9]) translate([2,-16,8.75		]) cube([4,5,6],true);
                            rotate([0,0,17*18]) translate([2,-16,3]) cube([4,5,6],true);
                            rotate([0,0,17*18+9]) translate([2,-16,8.75		]) cube([4,5,6],true);
                            rotate([0,0,18*18]) translate([2,-16,3]) cube([4,5,6],true);
                            rotate([0,0,18*18+9]) translate([2,-16,8.75		]) cube([4,5,6],true);
                            rotate([0,0,19*18]) translate([2,-16,3]) cube([4,5,6],true);
                            rotate([0,0,19*18+9]) translate([2,-16,8.75		]) cube([4,5,6],true);

                    }
                    translate([0,0,39.5]) sphere(32.5);
                }
                color([1,0,0]) translate([0,0,3.9]) cylinder(8.2,8.5,8.5, true);
            }
			translate([3.8,0,0.75]) rotate([0,0,90]) color([0.5,0.5,0.5]) intersection() {
                union() {
                        cube([5, 4*8, 2], center = true);
                        rotate([0, 90, 0])
                        cube([5, 4*8, 2], center = true);
                }
                rotate([90, 0, 0])	cylinder(4*8,2.25,2.25,true);
            }
			translate([-8.1,0,0.75]) rotate([90,0,90]) 	color([0.8,0.8,0.8]) union() {
                cylinder(8,2.5,2.5,true);
                translate([0,0,-3.25]) cylinder(1.5,3.75,3.75,true);
                translate([0,0,3.25]) cylinder(1.5,3.75,3.75,true);
            }
		}
        translate([-8.09722,13.7998,9.667]) rotate([0,0,90]) union() {
            color([0.8,0.8,0.8]) union() {
                    translate([0,-4*9+2*8,2.41666]) cylinder(1.5,2.25,2.25,true);
                    translate([0,-4*9+3*8,2.41666]) cylinder(1.5,2.25,2.25,true);
                    translate([0,-4*9+4*8,2.41666]) cylinder(1.5,2.25,2.25,true);
                    translate([0,-4*9+5*8,2.41666]) cylinder(1.5,2.25,2.25,true);
                    translate([0,-4*9+6*8,2.41666]) cylinder(1.5,2.25,2.25,true);
                    translate([0,-4*9+7*8,2.41666]) cylinder(1.5,2.25,2.25,true);
                difference() {
                    union() {
                        cube([8.0,8.0*7,3.333],true);
                        translate([0.0,-4.0*7,0.0]) cylinder(3.33,4,4,true);
                        translate([0.0,4.0*7,0.0]) cylinder(3.33,4,4,true);
                    }
                    union() {
                        translate([0.0,-4.0*7,0.0]) cylinder(3.4,2.25,2.25,true);
                        translate([0.0,4.0*7,0.0]) cylinder(3.4,2.25,2.25,true);
                    }
                }
            }
			translate([0,0,3]) 	color([0.8,0.8,0.8]) union() {
                cube([8,32,3],true);
                    translate([0,0*3.2-14.4,1.5]) scale([1,1,2]) rotate([45,0,0]) cube([8,1.414,1.414],true);
                    translate([0,1*3.2-14.4,1.5]) scale([1,1,2]) rotate([45,0,0]) cube([8,1.414,1.414],true);
                    translate([0,2*3.2-14.4,1.5]) scale([1,1,2]) rotate([45,0,0]) cube([8,1.414,1.414],true);
                    translate([0,3*3.2-14.4,1.5]) scale([1,1,2]) rotate([45,0,0]) cube([8,1.414,1.414],true);
                    translate([0,4*3.2-14.4,1.5]) scale([1,1,2]) rotate([45,0,0]) cube([8,1.414,1.414],true);
                    translate([0,5*3.2-14.4,1.5]) scale([1,1,2]) rotate([45,0,0]) cube([8,1.414,1.414],true);
                    translate([0,6*3.2-14.4,1.5]) scale([1,1,2]) rotate([45,0,0]) cube([8,1.414,1.414],true);
                    translate([0,7*3.2-14.4,1.5]) scale([1,1,2]) rotate([45,0,0]) cube([8,1.414,1.414],true);
                    translate([0,8*3.2-14.4,1.5]) scale([1,1,2]) rotate([45,0,0]) cube([8,1.414,1.414],true);
                    translate([0,9*3.2-14.4,1.5]) scale([1,1,2]) rotate([45,0,0]) cube([8,1.414,1.414],true);
            }
		}
        color([1,1,0]) translate([0.0,0.0,10]) union() {
            difference() {
                cube([8*2,8*1,3.33], true);
                translate([0,0,-0.5]) cube([8*2-3,8*1-3,3],true);
            }
            translate([-12+1*8,-8+8,2.4166]) cylinder(1.5,2.25,2.25,true);
            translate([-12+2*8,-8+8,2.4166]) cylinder(1.5,2.25,2.25,true);
        }
        color([1,1,0]) translate([0.0,0.0,13.33]) union() {
            difference() {
                cube([8*2,8*1,3.33], true);
                translate([0,0,-0.5]) cube([8*2-3,8*1-3,3],true);
            }
            translate([-12+1*8,-8+8,2.4166]) cylinder(1.5,2.25,2.25,true);
            translate([-12+2*8,-8+8,2.4166]) cylinder(1.5,2.25,2.25,true);
        }

        color([1,1,0]) translate([0.0,0.0,20]) rotate([0,0,90]) difference() {
            difference() {
                union() {
                    cube([8,8*2,10],true);
                    translate([0,-12+1*8,5.75]) cylinder(1.5,2.25,2.25,true);
                    translate([0,-12+2*8,5.75]) cylinder(1.5,2.25,2.25,true);
                }
                translate([0,0,-3.6]) cube([5,8*2-3,3.1],true);
            }
            translate([0,-16+2*8,0.75]) rotate([0,90,0]) union() {
                cylinder(8.8,2.25,2.25,true);
                translate([0,0,-4.0]) cylinder(0.8,2.75,2.75,true	);
                translate([0,0,4.0]) cylinder(0.8,2.75,2.75,true	);
            }

        }
        color([1,1,0]) translate([0.0,24.0,20]) rotate([0,0,90]) difference() {
            difference() {
                union() {
                    cube([8,8*2,10],true);
                    translate([0,-12+1*8,5.75]) cylinder(1.5,2.25,2.25,true);
                    translate([0,-12+2*8,5.75]) cylinder(1.5,2.25,2.25,true);
                }
                translate([0,0,-3.6]) cube([5,8*2-3,3.1],true);
            }
            translate([0,-16+2*8,0.75]) rotate([0,90,0]) union() {
                cylinder(8.8,2.25,2.25,true);
                translate([0,0,-4.0]) cylinder(0.8,2.75,2.75,true	);
                translate([0,0,4.0]) cylinder(0.8,2.75,2.75,true	);
            }

        }
        color([1,1,0]) translate([0.0,24.0,10]) rotate([0,0,90]) difference() {
                union() {
                    cube([8,8*2,10],true);
                    translate([0,-12+1*8,5.75]) cylinder(1.5,2.25,2.25,true);
                    translate([0,-12+2*8,5.75]) cylinder(1.5,2.25,2.25,true);
                }
                translate([0,0,-3.6]) cube([5,8*2-3,3.1],true);


        }
        translate([0,12,20.75]) union() {
            color([0.5,0.5,0.5]) intersection() {
                union() {
                        cube([5, 6*8, 2], center = true);
                        rotate([0, 90, 0])
                        cube([5, 6*8, 2], center = true);
                }
                rotate([90, 0, 0])	cylinder(6*8,2.25,2.25,true);
            }
            rotate([90,0,0])   color([0.8,0.8,0.8]) union() {
                cylinder(8,3,3,true);
                rotate([0,0,1*60]) cube([1.2,10,4],true);
                rotate([0,0,2*60]) cube([1.2,10,4],true);
                rotate([0,0,3*60]) cube([1.2,10,4],true);
            }
            translate([0,-20,0]) color([0.8,0.8,0.8]) rotate([90,0,0]) union() {
                cylinder(8,2.5,2.5,true);
                translate([0,0,-3.25]) cylinder(1.5,3.75,3.75,true);
                translate([0,0,3.25]) cylinder(1.5,3.75,3.75,true);
            }
        }
        translate([0.0,28.0,0.75]) rotate([49.25,0,0]) translate([0,24,-0.75]) union() {
            color([1,0,0]) translate([-12,0,0]) difference() {
                difference() {
                    union() {
                    cube([8,8*8,10],true);
                        translate([0,-36+1*8,5.75]) cylinder(1.5,2.25,2.25,true);
                        translate([0,-36+2*8,5.75]) cylinder(1.5,2.25,2.25,true);
                        translate([0,-36+3*8,5.75]) cylinder(1.5,2.25,2.25,true);
                        translate([0,-36+4*8,5.75]) cylinder(1.5,2.25,2.25,true);
                        translate([0,-36+5*8,5.75]) cylinder(1.5,2.25,2.25,true);
                        translate([0,-36+6*8,5.75]) cylinder(1.5,2.25,2.25,true);
                        translate([0,-36+7*8,5.75]) cylinder(1.5,2.25,2.25,true);
                        translate([0,-36+8*8,5.75]) cylinder(1.5,2.25,2.25,true);

                    }
                    translate([0,0,-3.6]) cube([5,8*8-3,3.1],true);
                }
                translate([0,-40+2*8,0.75]) rotate([0,90,0]) union() {
                    cylinder(8.8,2.25,2.25,true);
                    translate([0,0,-4.0]) cylinder(0.8,2.75,2.75,true	);
                    translate([0,0,4.0]) cylinder(0.8,2.75,2.75,true	);
                }
                translate([0,-40+3*8,0.75]) rotate([0,90,0]) union() {
                    cylinder(8.8,2.25,2.25,true);
                    translate([0,0,-4.0]) cylinder(0.8,2.75,2.75,true	);
                    translate([0,0,4.0]) cylinder(0.8,2.75,2.75,true	);
                }
                translate([0,-40+4*8,0.75]) rotate([0,90,0]) union() {
                    cylinder(8.8,2.25,2.25,true);
                    translate([0,0,-4.0]) cylinder(0.8,2.75,2.75,true	);
                    translate([0,0,4.0]) cylinder(0.8,2.75,2.75,true	);
                }
                translate([0,-40+5*8,0.75]) rotate([0,90,0]) union() {
                    cylinder(8.8,2.25,2.25,true);
                    translate([0,0,-4.0]) cylinder(0.8,2.75,2.75,true	);
                    translate([0,0,4.0]) cylinder(0.8,2.75,2.75,true	);
                }
                translate([0,-40+6*8,0.75]) rotate([0,90,0]) union() {
                    cylinder(8.8,2.25,2.25,true);
                    translate([0,0,-4.0]) cylinder(0.8,2.75,2.75,true	);
                    translate([0,0,4.0]) cylinder(0.8,2.75,2.75,true	);
                }
                translate([0,-40+7*8,0.75]) rotate([0,90,0]) union() {
                    cylinder(8.8,2.25,2.25,true);
                    translate([0,0,-4.0]) cylinder(0.8,2.75,2.75,true	);
                    translate([0,0,4.0]) cylinder(0.8,2.75,2.75,true	);
                }
                translate([0,-40+8*8,0.75]) rotate([0,90,0]) union() {
                    cylinder(8.8,2.25,2.25,true);
                    translate([0,0,-4.0]) cylinder(0.8,2.75,2.75,true	);
                    translate([0,0,4.0]) cylinder(0.8,2.75,2.75,true	);
                }

            }
            color([1,0,0]) translate([12,0,0]) difference() {
                difference() {
                    union() {
                    cube([8,8*8,10],true);
                        translate([0,-36+1*8,5.75]) cylinder(1.5,2.25,2.25,true);
                        translate([0,-36+2*8,5.75]) cylinder(1.5,2.25,2.25,true);
                        translate([0,-36+3*8,5.75]) cylinder(1.5,2.25,2.25,true);
                        translate([0,-36+4*8,5.75]) cylinder(1.5,2.25,2.25,true);
                        translate([0,-36+5*8,5.75]) cylinder(1.5,2.25,2.25,true);
                        translate([0,-36+6*8,5.75]) cylinder(1.5,2.25,2.25,true);
                        translate([0,-36+7*8,5.75]) cylinder(1.5,2.25,2.25,true);
                        translate([0,-36+8*8,5.75]) cylinder(1.5,2.25,2.25,true);

                    }
                    translate([0,0,-3.6]) cube([5,8*8-3,3.1],true);
                }
                translate([0,-40+2*8,0.75]) rotate([0,90,0]) union() {
                    cylinder(8.8,2.25,2.25,true);
                    translate([0,0,-4.0]) cylinder(0.8,2.75,2.75,true	);
                    translate([0,0,4.0]) cylinder(0.8,2.75,2.75,true	);
                }
                translate([0,-40+3*8,0.75]) rotate([0,90,0]) union() {
                    cylinder(8.8,2.25,2.25,true);
                    translate([0,0,-4.0]) cylinder(0.8,2.75,2.75,true	);
                    translate([0,0,4.0]) cylinder(0.8,2.75,2.75,true	);
                }
                translate([0,-40+4*8,0.75]) rotate([0,90,0]) union() {
                    cylinder(8.8,2.25,2.25,true);
                    translate([0,0,-4.0]) cylinder(0.8,2.75,2.75,true	);
                    translate([0,0,4.0]) cylinder(0.8,2.75,2.75,true	);
                }
                translate([0,-40+5*8,0.75]) rotate([0,90,0]) union() {
                    cylinder(8.8,2.25,2.25,true);
                    translate([0,0,-4.0]) cylinder(0.8,2.75,2.75,true	);
                    translate([0,0,4.0]) cylinder(0.8,2.75,2.75,true	);
                }
                translate([0,-40+6*8,0.75]) rotate([0,90,0]) union() {
                    cylinder(8.8,2.25,2.25,true);
                    translate([0,0,-4.0]) cylinder(0.8,2.75,2.75,true	);
                    translate([0,0,4.0]) cylinder(0.8,2.75,2.75,true	);
                }
                translate([0,-40+7*8,0.75]) rotate([0,90,0]) union() {
                    cylinder(8.8,2.25,2.25,true);
                    translate([0,0,-4.0]) cylinder(0.8,2.75,2.75,true	);
                    translate([0,0,4.0]) cylinder(0.8,2.75,2.75,true	);
                }
                translate([0,-40+8*8,0.75]) rotate([0,90,0]) union() {
                    cylinder(8.8,2.25,2.25,true);
                    translate([0,0,-4.0]) cylinder(0.8,2.75,2.75,true	);
                    translate([0,0,4.0]) cylinder(0.8,2.75,2.75,true	);
                }


            }
            color([1,0,0]) translate([0,28,0]) rotate([0,0,90]) difference() {
                difference() {
                    difference() {
                        union() {
                            cube([8,8*2,10],true);
                            translate([0,-12+1*8,5.75]) cylinder(1.5,2.25,2.25,true);
                            translate([0,-12+2*8,5.75]) cylinder(1.5,2.25,2.25,true);
                        }
                        translate([0,0,-3.6]) cube([5,8*2-3,3.1],true);
                    }
                    translate([0,-16+2*8,0.75]) rotate([0,90,0]) union() {
                        cylinder(8.8,2.25,2.25,true);
                        translate([0,0,-4.0]) cylinder(0.8,2.75,2.75,true	);
                        translate([0,0,4.0]) cylinder(0.8,2.75,2.75,true	);
                    }
                }
            }
            color([1,0,0]) translate([0,24,-6.667]) union() {
                difference() {
                    cube([8*4,8*2,3.33], true);
                    translate([0,0,-0.5]) cube([8*4-3,8*2-3,3],true);
                }
                translate([-20+1*8,-12+1*8,2.4166]) cylinder(1.5,2.25,2.25,true);
                translate([-20+2*8,-12+1*8,2.4166]) cylinder(1.5,2.25,2.25,true);
                translate([-20+3*8,-12+1*8,2.4166]) cylinder(1.5,2.25,2.25,true);
                translate([-20+4*8,-12+1*8,2.4166]) cylinder(1.5,2.25,2.25,true);
                translate([-20+1*8,-12+2*8,2.4166]) cylinder(1.5,2.25,2.25,true);
                translate([-20+2*8,-12+2*8,2.4166]) cylinder(1.5,2.25,2.25,true);
                translate([-20+3*8,-12+2*8,2.4166]) cylinder(1.5,2.25,2.25,true);
                translate([-20+4*8,-12+2*8,2.4166]) cylinder(1.5,2.25,2.25,true);
            }
            color([1,0,0]) translate([0,24,6.667]) union() {
                difference() {
                    cube([8*4,8*2,3.33], true);
                    translate([0,0,-0.5]) cube([8*4-3,8*2-3,3],true);
                }
                translate([-20+1*8,-12+1*8,2.4166]) cylinder(1.5,2.25,2.25,true);
                translate([-20+2*8,-12+1*8,2.4166]) cylinder(1.5,2.25,2.25,true);
                translate([-20+3*8,-12+1*8,2.4166]) cylinder(1.5,2.25,2.25,true);
                translate([-20+4*8,-12+1*8,2.4166]) cylinder(1.5,2.25,2.25,true);
                translate([-20+1*8,-12+2*8,2.4166]) cylinder(1.5,2.25,2.25,true);
                translate([-20+2*8,-12+2*8,2.4166]) cylinder(1.5,2.25,2.25,true);
                translate([-20+3*8,-12+2*8,2.4166]) cylinder(1.5,2.25,2.25,true);
                translate([-20+4*8,-12+2*8,2.4166]) cylinder(1.5,2.25,2.25,true);
            }

            translate([0,24,0]) color([0.5,0.5,0.5]) intersection() {
                union() {
                        cube([5, 4*8, 2], center = true);
                        rotate([0, 90, 0])
                        cube([5, 4*8, 2], center = true);
                }
                rotate([90, 0, 0])	cylinder(4*8,2.25,2.25,true);
            }
            translate([0,36,0]) rotate([90,0,0]) color([0.8,0.8,0.8]) union() {
                difference() {
                    cylinder(4,18,18,true);
                    cylinder(4.1,16,16,true);
                }
                cube([32,4,3.6],true);
                cylinder(6,4,4,true);
            }
            translate([-16,24,0]) rotate([90,0,90]) color([0.8,0.8,0.8]) difference() {
                union() {
                    cylinder(16,2.25,2.25,true);
                    cylinder(1.5,2.75,2.75,true);
                }
                union() {
                    cylinder(17,1.75,1.75,true);
                    translate([0,0,6]) cube([1,5.5,6],true);
                    translate([0,0,-6]) cube([1,5.5,6],true);
                }
            }
            translate([16,24,0]) rotate([90,0,90]) color([0.8,0.8,0.8]) difference() {
                union() {
                    cylinder(16,2.25,2.25,true);
                    cylinder(1.5,2.75,2.75,true);
                }
                union() {
                    cylinder(17,1.75,1.75,true);
                    translate([0,0,6]) cube([1,5.5,6],true);
                    translate([0,0,-6]) cube([1,5.5,6],true);
                }
            }
            translate([0,4,0]) rotate([90,0,0]) color([0.8,0.8,0.8]) union() {
                rotate([0,0,90]) difference() {
                    union() {
                        translate([0,0,-5]) cylinder(10.5,4,4,true);
                        translate([0,0,-12.5]) cylinder(5,2.5,2.5,true);
                        translate([0,0,-15.5]) cylinder(1,3.75,3.75,true);
                    }
                    union() {
                        translate([0,0,-4.0]) cylinder(8.2,3.5,3.5,true);
                        rotate([90,0,0]) scale([3.5,4.1,1]) cylinder(8.2,1,1,true);			}
                }
                rotate([130.75,0,0]) difference() {
                    union() {
                        translate([0,0,-5]) cylinder(10.5,4,4,true);
                        translate([0,0,-12.5]) cylinder(5,2.5,2.5,true);
                        translate([0,0,-15.5]) cylinder(1,3.75,3.75,true);
                    }
                    union() {
                        translate([0,0,-4.0]) cylinder(8.2,3.5,3.5,true);
                        rotate([90,0,0]) scale([3.5,4.1,1]) cylinder(8.2,1,1,true);			}
                }
                sphere(3.5);
            }
        }
    }
}
            "/>
    </target>
  </targetList>
</world>
