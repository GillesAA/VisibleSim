
/**
 * @file mvtConnectivityCode.hpp
 * Generated by VisibleSim BlockCode Generator
 * https://services-stgi.pu-pm.univ-fcomte.fr/visiblesim/generator.php#
 * @author yourName
 * @date 2000-12-02                                                                     
 **/	

#ifndef mvtConnectivityCode_H_
#define mvtConnectivityCode_H_

#include "robots/catoms3D/catoms3DSimulator.h"
#include "robots/catoms3D/catoms3DWorld.h"
#include "robots/catoms3D/catoms3DBlockCode.h"
#include "robots/catoms3D/catoms3DMotionEngine.h"

#include "mvtMessages.hpp"

using namespace Catoms3D;

class mvtConnectivity : public Catoms3DBlockCode {
private:
	

public :
  Catoms3DBlock *module = nullptr;
  Scheduler *scheduler;
  World *world;
  Lattice *lattice;
  int nbWaitedAnswers = 0;
  std::map<Cell3DPosition, std::vector<Cell3DPosition>> graphEdges;
  std::vector<std::pair<int, Cell3DPosition>> unionPos;
	mvtConnectivity(Catoms3DBlock *host);
	~mvtConnectivity() {};

/**
  * This function is called on startup of the blockCode, it can be used to perform initial
  *  configuration of the host or this instance of the program.
  * @note this can be thought of as the main function of the module
  */
    void startup() override;

/**
  * User-implemented debug function that gets called when a module is selected in the GUI
  */
    void onBlockSelected() override;

/**
  * @brief Handler for all events received by the host block
  * @param pev pointer to the received event
  */
    void processLocalEvent(std::shared_ptr<Event> pev) override;

/**
  * @brief Callback function executed whenever the module finishes a motion
  */
    void onMotionEnd() override;

/**
  * Called by openglviewer during interface drawing phase, can be used by a user
  *  to draw a custom Gl string onto the bottom-left corner of the GUI
  * @note call is made from OpenGlViewer::drawFunc
  * @return a string (can be multi-line with `
`) to display on the GUI
  */
    string onInterfaceDraw() override;

    int sendHMessage(HandleableMessage *msg,P2PNetworkInterface *dest,Time t0,Time dt);

    int sendHMessageToAllNeighbors(HandleableMessage *msg,Time t0,Time dt, int nexcept, ...);

/*****************************************************************************/
/** needed to associate code to module                                      **/
	static BlockCode *buildNewBlockCode(BuildingBlock *host) {
	    return(new mvtConnectivity((Catoms3DBlock*)host));
	}
/*****************************************************************************/
};

#endif /* mvtConnectivityCode_H_ */