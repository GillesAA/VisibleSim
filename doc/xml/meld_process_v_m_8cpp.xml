<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="meld_process_v_m_8cpp" kind="file" language="C++">
    <compoundname>meldProcessVM.cpp</compoundname>
    <includes refid="meld_process_v_m_8h" local="yes">meldProcessVM.h</includes>
    <includes refid="meld_process_scheduler_8h" local="yes">meldProcessScheduler.h</includes>
    <includes refid="meld_process_debugger_8h" local="yes">meldProcessDebugger.h</includes>
    <includes refid="meld_process_events_8h" local="yes">meldProcessEvents.h</includes>
    <includes local="no">boost/asio/io_service.hpp</includes>
    <includes local="no">sys/wait.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">boost/bind.hpp</includes>
    <includes refid="trace_8h" local="yes">trace.h</includes>
    <includes local="no">stdexcept</includes>
    <includes local="no">string.h</includes>
    <includes refid="events_8h" local="yes">events.h</includes>
    <includes refid="opengl_viewer_8h" local="yes">openglViewer.h</includes>
    <includes local="no">boost/shared_ptr.hpp</includes>
    <includes local="no">boost/enable_shared_from_this.hpp</includes>
    <incdepgraph>
      <node id="15737">
        <label>list</label>
      </node>
      <node id="15767">
        <label>openglViewer.h</label>
        <link refid="opengl_viewer_8h"/>
        <childnode refid="15740" relation="include">
        </childnode>
        <childnode refid="15768" relation="include">
        </childnode>
        <childnode refid="15748" relation="include">
        </childnode>
        <childnode refid="15753" relation="include">
        </childnode>
        <childnode refid="15738" relation="include">
        </childnode>
        <childnode refid="15769" relation="include">
        </childnode>
      </node>
      <node id="15748">
        <label>matrice44.h</label>
        <link refid="matrice44_8h"/>
        <childnode refid="15744" relation="include">
        </childnode>
        <childnode refid="15724" relation="include">
        </childnode>
        <childnode refid="15743" relation="include">
        </childnode>
        <childnode refid="15749" relation="include">
        </childnode>
        <childnode refid="15750" relation="include">
        </childnode>
      </node>
      <node id="15740">
        <label>shaders.h</label>
        <link refid="shaders_8h"/>
        <childnode refid="15741" relation="include">
        </childnode>
        <childnode refid="15742" relation="include">
        </childnode>
        <childnode refid="15724" relation="include">
        </childnode>
        <childnode refid="15743" relation="include">
        </childnode>
        <childnode refid="15744" relation="include">
        </childnode>
        <childnode refid="15745" relation="include">
        </childnode>
        <childnode refid="15746" relation="include">
        </childnode>
        <childnode refid="15747" relation="include">
        </childnode>
        <childnode refid="15748" relation="include">
        </childnode>
        <childnode refid="15753" relation="include">
        </childnode>
      </node>
      <node id="15750">
        <label>vecteur.h</label>
        <link refid="vecteur_8h"/>
        <childnode refid="15724" relation="include">
        </childnode>
        <childnode refid="15743" relation="include">
        </childnode>
        <childnode refid="15751" relation="include">
        </childnode>
        <childnode refid="15752" relation="include">
        </childnode>
      </node>
      <node id="15769">
        <label>interface.h</label>
        <link refid="interface_8h"/>
        <childnode refid="15770" relation="include">
        </childnode>
        <childnode refid="15724" relation="include">
        </childnode>
        <childnode refid="15743" relation="include">
        </childnode>
        <childnode refid="15752" relation="include">
        </childnode>
        <childnode refid="15738" relation="include">
        </childnode>
        <childnode refid="15771" relation="include">
        </childnode>
        <childnode refid="15754" relation="include">
        </childnode>
      </node>
      <node id="15725">
        <label>queue</label>
      </node>
      <node id="15728">
        <label>boost/shared_ptr.hpp</label>
      </node>
      <node id="15730">
        <label>boost/interprocess/sync/interprocess_semaphore.hpp</label>
      </node>
      <node id="15762">
        <label>assert.h</label>
      </node>
      <node id="15757">
        <label>stdint.h</label>
      </node>
      <node id="15742">
        <label>stdlib.h</label>
      </node>
      <node id="15735">
        <label>buildingBlock.h</label>
        <link refid="building_block_8h"/>
        <childnode refid="15728" relation="include">
        </childnode>
        <childnode refid="15736" relation="include">
        </childnode>
        <childnode refid="15729" relation="include">
        </childnode>
        <childnode refid="15737" relation="include">
        </childnode>
        <childnode refid="15738" relation="include">
        </childnode>
        <childnode refid="15755" relation="include">
        </childnode>
        <childnode refid="15756" relation="include">
        </childnode>
      </node>
      <node id="15778">
        <label>boost/asio/io_service.hpp</label>
      </node>
      <node id="15723">
        <label>meldProcessVM.h</label>
        <link refid="meld_process_v_m_8h"/>
        <childnode refid="15724" relation="include">
        </childnode>
        <childnode refid="15725" relation="include">
        </childnode>
        <childnode refid="15726" relation="include">
        </childnode>
        <childnode refid="15727" relation="include">
        </childnode>
        <childnode refid="15728" relation="include">
        </childnode>
        <childnode refid="15729" relation="include">
        </childnode>
        <childnode refid="15730" relation="include">
        </childnode>
        <childnode refid="15731" relation="include">
        </childnode>
        <childnode refid="15735" relation="include">
        </childnode>
      </node>
      <node id="15751">
        <label>cmath</label>
      </node>
      <node id="15780">
        <label>stdexcept</label>
      </node>
      <node id="15777">
        <label>meldProcessEvents.h</label>
        <link refid="meld_process_events_8h"/>
        <childnode refid="15735" relation="include">
        </childnode>
        <childnode refid="15765" relation="include">
        </childnode>
        <childnode refid="15732" relation="include">
        </childnode>
        <childnode refid="15773" relation="include">
        </childnode>
      </node>
      <node id="15739">
        <label>string</label>
      </node>
      <node id="15744">
        <label>GL/glew.h</label>
      </node>
      <node id="15731">
        <label>meldProcessVMCommands.h</label>
        <link refid="meld_process_v_m_commands_8h"/>
        <childnode refid="15732" relation="include">
        </childnode>
        <childnode refid="15754" relation="include">
        </childnode>
      </node>
      <node id="15761">
        <label>map</label>
      </node>
      <node id="15763">
        <label>boost/thread.hpp</label>
      </node>
      <node id="15752">
        <label>memory.h</label>
      </node>
      <node id="15738">
        <label>glBlock.h</label>
        <link refid="gl_block_8h"/>
        <childnode refid="15739" relation="include">
        </childnode>
        <childnode refid="15740" relation="include">
        </childnode>
        <childnode refid="15750" relation="include">
        </childnode>
        <childnode refid="15754" relation="include">
        </childnode>
      </node>
      <node id="15743">
        <label>fstream</label>
      </node>
      <node id="15755">
        <label>blockCode.h</label>
        <link refid="block_code_8h"/>
        <childnode refid="15735" relation="include">
        </childnode>
        <childnode refid="15726" relation="include">
        </childnode>
      </node>
      <node id="15747">
        <label>GL/glu.h</label>
      </node>
      <node id="15766">
        <label>uniqueEventsId.h</label>
        <link refid="unique_events_id_8h"/>
      </node>
      <node id="15753">
        <label>camera.h</label>
        <link refid="camera_8h"/>
        <childnode refid="15749" relation="include">
        </childnode>
        <childnode refid="15750" relation="include">
        </childnode>
        <childnode refid="15748" relation="include">
        </childnode>
      </node>
      <node id="15745">
        <label>GL/freeglut.h</label>
      </node>
      <node id="15775">
        <label>TinyXML/tinyxml.h</label>
      </node>
      <node id="15727">
        <label>boost/asio.hpp</label>
      </node>
      <node id="15768">
        <label>pthread.h</label>
      </node>
      <node id="15773">
        <label>meldProcessDebugger.h</label>
        <link refid="meld_process_debugger_8h"/>
        <childnode refid="15724" relation="include">
        </childnode>
        <childnode refid="15728" relation="include">
        </childnode>
        <childnode refid="15726" relation="include">
        </childnode>
        <childnode refid="15774" relation="include">
        </childnode>
        <childnode refid="15758" relation="include">
        </childnode>
        <childnode refid="15731" relation="include">
        </childnode>
      </node>
      <node id="15734">
        <label>string.h</label>
      </node>
      <node id="15770">
        <label>vector</label>
      </node>
      <node id="15732">
        <label>network.h</label>
        <link refid="network_8h"/>
        <childnode refid="15733" relation="include">
        </childnode>
        <childnode refid="15734" relation="include">
        </childnode>
        <childnode refid="15728" relation="include">
        </childnode>
        <childnode refid="15735" relation="include">
        </childnode>
      </node>
      <node id="15760">
        <label>sstream</label>
      </node>
      <node id="15776">
        <label>commandLine.h</label>
        <link refid="command_line_8h"/>
        <childnode refid="15739" relation="include">
        </childnode>
      </node>
      <node id="15774">
        <label>simulator.h</label>
        <link refid="simulator_8h"/>
        <childnode refid="15775" relation="include">
        </childnode>
        <childnode refid="15759" relation="include">
        </childnode>
        <childnode refid="15771" relation="include">
        </childnode>
        <childnode refid="15776" relation="include">
        </childnode>
      </node>
      <node id="15759">
        <label>scheduler.h</label>
        <link refid="scheduler_8h"/>
        <childnode refid="15724" relation="include">
        </childnode>
        <childnode refid="15760" relation="include">
        </childnode>
        <childnode refid="15761" relation="include">
        </childnode>
        <childnode refid="15726" relation="include">
        </childnode>
        <childnode refid="15762" relation="include">
        </childnode>
        <childnode refid="15763" relation="include">
        </childnode>
        <childnode refid="15764" relation="include">
        </childnode>
        <childnode refid="15729" relation="include">
        </childnode>
        <childnode refid="15730" relation="include">
        </childnode>
        <childnode refid="15765" relation="include">
        </childnode>
        <childnode refid="15767" relation="include">
        </childnode>
      </node>
      <node id="15781">
        <label>boost/enable_shared_from_this.hpp</label>
      </node>
      <node id="15749">
        <label>math.h</label>
      </node>
      <node id="15754">
        <label>color.h</label>
        <link refid="color_8h"/>
        <childnode refid="15724" relation="include">
        </childnode>
        <childnode refid="15743" relation="include">
        </childnode>
        <childnode refid="15751" relation="include">
        </childnode>
        <childnode refid="15752" relation="include">
        </childnode>
        <childnode refid="15740" relation="include">
        </childnode>
      </node>
      <node id="15779">
        <label>sys/wait.h</label>
      </node>
      <node id="15724">
        <label>iostream</label>
      </node>
      <node id="15733">
        <label>deque</label>
      </node>
      <node id="15764">
        <label>boost/bind.hpp</label>
      </node>
      <node id="15722">
        <label>/Users/pthalamy/Desktop/VSimRef/VisibleSim/simulatorCore/src/meldProcessVM.cpp</label>
        <link refid="meldProcessVM.cpp"/>
        <childnode refid="15723" relation="include">
        </childnode>
        <childnode refid="15758" relation="include">
        </childnode>
        <childnode refid="15773" relation="include">
        </childnode>
        <childnode refid="15777" relation="include">
        </childnode>
        <childnode refid="15778" relation="include">
        </childnode>
        <childnode refid="15779" relation="include">
        </childnode>
        <childnode refid="15741" relation="include">
        </childnode>
        <childnode refid="15764" relation="include">
        </childnode>
        <childnode refid="15772" relation="include">
        </childnode>
        <childnode refid="15780" relation="include">
        </childnode>
        <childnode refid="15734" relation="include">
        </childnode>
        <childnode refid="15765" relation="include">
        </childnode>
        <childnode refid="15767" relation="include">
        </childnode>
        <childnode refid="15728" relation="include">
        </childnode>
        <childnode refid="15781" relation="include">
        </childnode>
      </node>
      <node id="15729">
        <label>boost/interprocess/sync/interprocess_mutex.hpp</label>
      </node>
      <node id="15772">
        <label>trace.h</label>
        <link refid="trace_8h"/>
        <childnode refid="15743" relation="include">
        </childnode>
      </node>
      <node id="15765">
        <label>events.h</label>
        <link refid="events_8h"/>
        <childnode refid="15726" relation="include">
        </childnode>
        <childnode refid="15739" relation="include">
        </childnode>
        <childnode refid="15728" relation="include">
        </childnode>
        <childnode refid="15735" relation="include">
        </childnode>
        <childnode refid="15766" relation="include">
        </childnode>
        <childnode refid="15732" relation="include">
        </childnode>
        <childnode refid="15754" relation="include">
        </childnode>
      </node>
      <node id="15736">
        <label>boost/random.hpp</label>
      </node>
      <node id="15771">
        <label>world.h</label>
        <link refid="world_8h"/>
        <childnode refid="15724" relation="include">
        </childnode>
        <childnode refid="15761" relation="include">
        </childnode>
        <childnode refid="15770" relation="include">
        </childnode>
        <childnode refid="15729" relation="include">
        </childnode>
        <childnode refid="15762" relation="include">
        </childnode>
        <childnode refid="15735" relation="include">
        </childnode>
        <childnode refid="15738" relation="include">
        </childnode>
        <childnode refid="15772" relation="include">
        </childnode>
      </node>
      <node id="15746">
        <label>GL/gl.h</label>
      </node>
      <node id="15741">
        <label>stdio.h</label>
      </node>
      <node id="15756">
        <label>clock.h</label>
        <link refid="clock_8h"/>
        <childnode refid="15735" relation="include">
        </childnode>
        <childnode refid="15757" relation="include">
        </childnode>
        <childnode refid="15724" relation="include">
        </childnode>
        <childnode refid="15736" relation="include">
        </childnode>
        <childnode refid="15737" relation="include">
        </childnode>
      </node>
      <node id="15758">
        <label>meldProcessScheduler.h</label>
        <link refid="meld_process_scheduler_8h"/>
        <childnode refid="15759" relation="include">
        </childnode>
        <childnode refid="15732" relation="include">
        </childnode>
        <childnode refid="15763" relation="include">
        </childnode>
        <childnode refid="15764" relation="include">
        </childnode>
        <childnode refid="15730" relation="include">
        </childnode>
        <childnode refid="15729" relation="include">
        </childnode>
        <childnode refid="15772" relation="include">
        </childnode>
      </node>
      <node id="15726">
        <label>inttypes.h</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespace_meld_process">MeldProcess</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="meld_process_v_m_8h" kindref="compound">meldProcessVM.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="meld_process_scheduler_8h" kindref="compound">meldProcessScheduler.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="meld_process_debugger_8h" kindref="compound">meldProcessDebugger.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="meld_process_events_8h" kindref="compound">meldProcessEvents.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//#include<sp/>&quot;blinkyBlocksBlock.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//#include<sp/>&quot;blinkyBlocksBlockCode.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//#include<sp/>&quot;blinkyBlocksEvents.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/asio/io_service.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/wait.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/bind.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="trace_8h" kindref="compound">trace.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdexcept&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="events_8h" kindref="compound">events.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="opengl_viewer_8h" kindref="compound">openglViewer.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/bind.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/shared_ptr.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/enable_shared_from_this.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceboost" kindref="compound">boost</ref>;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>asio::ip::tcp;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_meld_process" kindref="compound">MeldProcess</ref><sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal">boost::asio::io_service<sp/>*MeldProcessVM::ios<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="30"><highlight class="normal">boost::interprocess::interprocess_mutex<sp/>MeldProcessVM::mutex_ios;</highlight></codeline>
<codeline lineno="31"><highlight class="normal">tcp::acceptor<sp/>*MeldProcessVM::acceptor<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>MeldProcessVM::vmPath;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>MeldProcessVM::programPath;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>MeldProcessVM::debugging<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="35"><highlight class="normal">map&lt;int,<sp/>MeldProcessVM*&gt;<sp/>MeldProcessVM::vmMap;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="class_meld_process_1_1_meld_process_v_m_1a2fb398fac26ef86b9a7a266aef8fa962" refkind="member"><highlight class="normal">MeldProcessVM::MeldProcessVM(<ref refid="class_base_simulator_1_1_building_block" kindref="compound">BuildingBlock</ref>*<sp/>bb){</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>boost::system::error_code<sp/>error;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>stringstream<sp/>vmLogFile;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(ios<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>acceptor<sp/>!=<sp/>NULL);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>hostBlock<sp/>=<sp/>bb;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>currentLocalDate<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">//<sp/>mode<sp/>fastest</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>hasWork<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>mode<sp/>fastest</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>polling<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>mode<sp/>fastest</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>vmLogFile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;VM&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>hostBlock-&gt;<ref refid="class_base_simulator_1_1_building_block_1ab12b5c18f7bfa254584dfc2891b1f21e" kindref="member">blockId</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;.log&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="trace_8h_1a61a3c9a18380aafb6e430e79bf596557" kindref="member">OUTPUT</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;VM<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;<sp/>hostBlock-&gt;blockId<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>constructor&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Start<sp/>the<sp/>VM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>pid<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(inBuffer,0,<ref refid="meld_process_v_m_commands_8h_1a4ad934a923eaf55a068289b85506e34e" kindref="member">VM_COMMAND_MAX_LENGHT</ref>*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="meld_process_v_m_commands_8h_1a76836754a86e73125a6e641adcb77745" kindref="member">commandType</ref>));</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>mutex_ios.lock();</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>ios-&gt;notify_fork(boost::asio::io_service::fork_prepare);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>pid<sp/>=<sp/>fork();</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pid<sp/>&lt;<sp/>0)<sp/>{<ref refid="trace_8h_1a6667b9548cdadbd55cabd90840a4edeb" kindref="member">ERRPUT</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Error<sp/>when<sp/>starting<sp/>the<sp/>VM&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pid<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ios-&gt;notify_fork(boost::asio::io_service::fork_child);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mutex_ios.unlock();</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acceptor-&gt;close();</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>closeAllSockets();</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>LOGFILE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="trace_8h_1a0a56d03a6eba05895e878d162ab044c6" kindref="member">log_file</ref>.close();</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fd<sp/>=<sp/>open(vmLogFile.str().c_str(),<sp/>O_RDWR<sp/>|<sp/>O_CREAT<sp/>|<sp/>O_TRUNC,<sp/>S_IRUSR<sp/>|<sp/>S_IWUSR);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dup2(fd,<sp/>1);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dup2(fd,<sp/>2);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>close(fd);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debugging)<sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//./meld<sp/>-f<sp/><sp/>/home/ubuntu/Bureau/CMU/meld/examples/ends.m<sp/>-c<sp/>sl<sp/>-D<sp/>SIM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>cmd[]<sp/>=<sp/>{(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)vmPath.c_str(),<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)</highlight><highlight class="stringliteral">&quot;-a&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)</highlight><highlight class="stringliteral">&quot;bbsim&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)</highlight><highlight class="stringliteral">&quot;-f&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)programPath.c_str(),<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)</highlight><highlight class="stringliteral">&quot;-c&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<sp/></highlight><highlight class="stringliteral">&quot;sl&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<sp/></highlight><highlight class="stringliteral">&quot;-D&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<sp/></highlight><highlight class="stringliteral">&quot;SIM&quot;</highlight><highlight class="normal">,<sp/>NULL<sp/>};</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>execv(vmPath.c_str(),<sp/></highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(cmd));</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//./meld<sp/>-f<sp/><sp/>/home/ubuntu/Bureau/CMU/meld/examples/ends.m<sp/>-c<sp/>sl</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>cmd[]<sp/>=<sp/>{(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)vmPath.c_str(),<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)</highlight><highlight class="stringliteral">&quot;-a&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)</highlight><highlight class="stringliteral">&quot;bbsim&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)</highlight><highlight class="stringliteral">&quot;-f&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)programPath.c_str(),<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)</highlight><highlight class="stringliteral">&quot;-c&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<sp/></highlight><highlight class="stringliteral">&quot;sl&quot;</highlight><highlight class="normal">,<sp/>NULL<sp/>};</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>execv(vmPath.c_str(),<sp/></highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(cmd));</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ret<sp/>==<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Error:<sp/>VM<sp/>executable,<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>vmPath.c_str()<sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>does<sp/>not<sp/>exist<sp/>or<sp/>is<sp/>not<sp/>executable&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(EXIT_FAILURE);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>ios-&gt;notify_fork(boost::asio::io_service::fork_parent);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>mutex_ios.unlock();</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>socket<sp/>=<sp/>boost::shared_ptr&lt;tcp::socket&gt;(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>tcp::socket(*ios));</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hostBlock-&gt;blockId<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>connected<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>acceptor-&gt;async_accept(*(socket.get()),<sp/>boost::bind(&amp;MeldProcessVM::asyncAcceptHandler,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>error<sp/>,<sp/>&amp;connected));</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(!connected<sp/>&amp;&amp;<sp/><sp/>(pid<sp/>!=<sp/>waitpid(pid,<sp/>NULL,<sp/>WNOHANG)))<sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!MeldProcessVM::isInDebuggingMode())<sp/>{<sp/></highlight><highlight class="comment">//<sp/>In<sp/>debugging<sp/>mode<sp/>the<sp/>scheduler<sp/>thread<sp/>is<sp/>looking<sp/>for<sp/>connections</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_meld_process_1a7358d26c5dfafb550597efedf32ab64e" kindref="member">checkForReceivedVMCommands</ref>();<sp/></highlight><highlight class="comment">//<sp/>it<sp/>is<sp/>actually<sp/>check<sp/>for<sp/>connection</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>usleep(10000);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!connected)<sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ifstream<sp/>file<sp/>(vmLogFile.str().c_str());</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>line;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;VisibleSim<sp/>error:<sp/>unable<sp/>to<sp/>connect<sp/>to<sp/>the<sp/>VM&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cerr<sp/>&lt;&lt;<sp/>vmLogFile.str()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(file.is_open())<sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!file.eof())<sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getline(file,line);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cerr<sp/>&lt;&lt;<sp/>line;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cerr<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>file.close();</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acceptor-&gt;close();</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(EXIT_FAILURE);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acceptor-&gt;accept(*(socket.get()));</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>idSent<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>deterministicSet<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>nbSentCommands<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>asyncReadCommand();</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>vmMap.insert(std::pair&lt;int,MeldProcessVM*&gt;(bb-&gt;<ref refid="class_base_simulator_1_1_building_block_1ab12b5c18f7bfa254584dfc2891b1f21e" kindref="member">blockId</ref>,</highlight><highlight class="keyword">this</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="121"><highlight class="normal">}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123" refid="class_meld_process_1_1_meld_process_v_m_1a29a585845d4cb8309f1d9623c97241ae" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MeldProcessVM::asyncAcceptHandler(boost::system::error_code&amp;<sp/>error,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">*<sp/>connected)<sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(error)<sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/>*connected<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/>*connected<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="129"><highlight class="normal">}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131" refid="class_meld_process_1_1_meld_process_v_m_1aeb75a88dd2d250a79eb74289d1c1f463" refkind="member"><highlight class="normal">MeldProcessVM::~MeldProcessVM()<sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>closeSocket();</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>killProcess();</highlight></codeline>
<codeline lineno="134"><highlight class="normal">}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136" refid="class_meld_process_1_1_meld_process_v_m_1ac8dc0bb3c479114acfd5c2380cc0acc6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MeldProcessVM::terminate()<sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>waitpid(pid,<sp/>NULL,<sp/>0);</highlight></codeline>
<codeline lineno="138"><highlight class="normal">}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140" refid="class_meld_process_1_1_meld_process_v_m_1a7d0640efb7dd330811b4ed8121f934b6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MeldProcessVM::killProcess()<sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>kill(pid,<sp/>SIGTERM);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>waitpid(pid,<sp/>NULL,<sp/>0);</highlight></codeline>
<codeline lineno="143"><highlight class="normal">}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145" refid="class_meld_process_1_1_meld_process_v_m_1a4e2e654cd79faa5ecbf7e0c3396c7b0d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MeldProcessVM::closeSocket()<sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(socket<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>socket-&gt;cancel();</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>socket-&gt;close();</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>socket.reset();</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal">}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153" refid="class_meld_process_1_1_meld_process_v_m_1af3bc960beeb4f386b72fb00cdd280e29" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MeldProcessVM::asyncReadCommandHandler(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>boost::system::error_code&amp;<sp/>error,<sp/>std::size_t<sp/>bytes_transferred)<sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(error)<sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="trace_8h_1a6667b9548cdadbd55cabd90840a4edeb" kindref="member">ERRPUT</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;An<sp/>error<sp/>occurred<sp/>while<sp/>receiving<sp/>a<sp/>tcp<sp/>command<sp/>from<sp/>VM<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>hostBlock-&gt;blockId<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>(socket<sp/>closed<sp/>?)<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;endl;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memset(inBuffer+1,<sp/>0,<sp/>inBuffer[0]);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::asio::read(getSocket(),boost::asio::buffer((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)(inBuffer<sp/>+<sp/>1),<sp/>inBuffer[0])<sp/>);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(std::exception&amp;<sp/>e)<sp/>{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="trace_8h_1a6667b9548cdadbd55cabd90840a4edeb" kindref="member">ERRPUT</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Connection<sp/>to<sp/>the<sp/>VM<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;<sp/>hostBlock-&gt;blockId<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>lost&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>handleInBuffer();</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(socket-&gt;available())<sp/>{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::asio::read(getSocket(),<sp/>boost::asio::buffer(inBuffer,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="meld_process_v_m_commands_8h_1a76836754a86e73125a6e641adcb77745" kindref="member">commandType</ref>)));<sp/></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::asio::read(getSocket(),boost::asio::buffer((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)(inBuffer<sp/>+<sp/>1),<sp/>inBuffer[0]));</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(std::exception&amp;<sp/>e)<sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="trace_8h_1a6667b9548cdadbd55cabd90840a4edeb" kindref="member">ERRPUT</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Connection<sp/>to<sp/>the<sp/>VM<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;<sp/>hostBlock-&gt;blockId<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>lost&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>handleInBuffer();</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;asyncReadCommand();</highlight></codeline>
<codeline lineno="175"><highlight class="normal">}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177" refid="class_meld_process_1_1_meld_process_v_m_1a7b7ac04d43303d5df10105054b05d7d0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MeldProcessVM::handleInBuffer()<sp/>{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_meld_process_1_1_v_m_command" kindref="compound">VMCommand</ref><sp/>command(inBuffer);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>handleCommand(command);</highlight></codeline>
<codeline lineno="180"><highlight class="normal">}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182" refid="class_meld_process_1_1_meld_process_v_m_1a3f726ab86133704e1a3b853f7fb4983d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MeldProcessVM::asyncReadCommand()<sp/>{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(socket<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="trace_8h_1a6667b9548cdadbd55cabd90840a4edeb" kindref="member">ERRPUT</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Simulator<sp/>is<sp/>not<sp/>connected<sp/>to<sp/>the<sp/>VM<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;<sp/>hostBlock-&gt;blockId<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>inBuffer[0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>boost::asio::async_read(getSocket(),</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::asio::buffer(inBuffer,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="meld_process_v_m_commands_8h_1a76836754a86e73125a6e641adcb77745" kindref="member">commandType</ref>)),</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::bind(&amp;MeldProcessVM::asyncReadCommandHandler,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>boost::asio::placeholders::error,</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::asio::placeholders::bytes_transferred));</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(std::exception&amp;<sp/>e)<sp/>{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="trace_8h_1a6667b9548cdadbd55cabd90840a4edeb" kindref="member">ERRPUT</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Connection<sp/>to<sp/>the<sp/>VM<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;<sp/>hostBlock-&gt;blockId<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>lost&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="196"><highlight class="normal">}</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198" refid="class_meld_process_1_1_meld_process_v_m_1a29f1e29b68fb12cebb95828d37ebefcd" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespace_meld_process_1a89030efced0ddbe796a6be27424b3b10" kindref="member">MeldProcessVM::sendCommand</ref>(<ref refid="class_meld_process_1_1_v_m_command" kindref="compound">VMCommand</ref><sp/>&amp;command){</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(socket<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="trace_8h_1a6667b9548cdadbd55cabd90840a4edeb" kindref="member">ERRPUT</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Simulator<sp/>is<sp/>not<sp/>connected<sp/>to<sp/>the<sp/>VM<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;<sp/>hostBlock-&gt;blockId<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(command.<ref refid="class_meld_process_1_1_v_m_command_1af89ad28c9013f80d2e499e25621322b7" kindref="member">getType</ref>()<sp/>!=<sp/><ref refid="meld_process_v_m_commands_8h_1ae6834ee081e97c53fdefa37e9e6c75ed" kindref="member">VM_COMMAND_DEBUG</ref>)<sp/>{</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nbSentCommands++;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>handleDeterministicMode(command);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::asio::write(getSocket(),<sp/>boost::asio::buffer(command.<ref refid="class_meld_process_1_1_v_m_command_1abb0c6dd4ecf5a6c1dcbf14ed4e1ca046" kindref="member">getData</ref>(),<sp/>command.<ref refid="class_meld_process_1_1_v_m_command_1a4bd104911f0cf66e04275c6df7f028cb" kindref="member">getSize</ref>()));</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(std::exception&amp;<sp/>e)<sp/>{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="trace_8h_1a6667b9548cdadbd55cabd90840a4edeb" kindref="member">ERRPUT</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Connection<sp/>to<sp/>the<sp/>VM<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;<sp/>hostBlock-&gt;blockId<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>lost&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="214"><highlight class="normal">}</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217" refid="class_meld_process_1_1_meld_process_v_m_1a0650a1f1e1efadf4f8f7e39f3c0613c5" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MeldProcessVM::handle_write(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>boost::system::error_code&amp;<sp/>error)</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!error)</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;ok&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225" refid="class_meld_process_1_1_meld_process_v_m_1ae3c04a26315eaf9a09aed85161713b11" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MeldProcessVM::checkForReceivedCommands()<sp/>{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ios<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mutex_ios.lock();</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ios-&gt;poll();</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ios-&gt;reset();</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(boost::exception&amp;<sp/>e)<sp/>{</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mutex_ios.unlock();</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="235"><highlight class="normal">}</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237" refid="class_meld_process_1_1_meld_process_v_m_1a8dce0416dbac2ccbe4c2a9de53fe7323" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MeldProcessVM::waitForOneCommand()<sp/>{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ios<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mutex_ios.lock();</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ios-&gt;run_one();</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ios-&gt;reset();</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(boost::exception&amp;<sp/>e)<sp/>{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mutex_ios.unlock();</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>checkForReceivedCommands();</highlight></codeline>
<codeline lineno="248"><highlight class="normal">}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250" refid="class_meld_process_1_1_meld_process_v_m_1a88aff748a945124b2a9daafedc63c9e2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MeldProcessVM::setConfiguration(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>v,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>p,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>d)<sp/>{</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>vmPath<sp/>=<sp/>v;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>programPath<sp/>=<sp/>p;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>debugging<sp/>=<sp/>d;</highlight></codeline>
<codeline lineno="254"><highlight class="normal">}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256" refid="class_meld_process_1_1_meld_process_v_m_1af2cf7ba674e4170544dbde01fdfb442a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MeldProcessVM::createServer(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>p)<sp/>{</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(ios<sp/>==<sp/>NULL);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>ios<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>boost::asio::io_service();</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>acceptor<sp/>=<sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>tcp::acceptor(*ios,<sp/>tcp::endpoint(tcp::v4(),<sp/>p));</highlight></codeline>
<codeline lineno="260"><highlight class="normal">}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262" refid="class_meld_process_1_1_meld_process_v_m_1a9a21b4f76eee315216f5810486c2846a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MeldProcessVM::deleteServer()<sp/>{</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>ios-&gt;stop();</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>acceptor;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>ios;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>ios<sp/>=<sp/>NULL;<sp/>acceptor<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="267"><highlight class="normal">}</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269" refid="class_meld_process_1_1_meld_process_v_m_1a935b595ee2deab41cff25ffdade90e7c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MeldProcessVM::handleDeterministicMode(<ref refid="class_meld_process_1_1_v_m_command" kindref="compound">VMCommand</ref><sp/>&amp;command){</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>currentLocalDate<sp/>=<sp/>max(<ref refid="namespace_blinky_blocks_1ad7233374e9ceba1a46d8a3b748c00d13" kindref="member">getScheduler</ref>()-&gt;now(),<sp/>currentLocalDate);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!hasWork<sp/>&amp;&amp;<sp/>(command.<ref refid="class_meld_process_1_1_v_m_command_1af89ad28c9013f80d2e499e25621322b7" kindref="member">getType</ref>()<sp/>!=<sp/><ref refid="meld_process_v_m_commands_8h_1ab869f3ad31fdb663d5641d0cde004943" kindref="member">VM_COMMAND_STOP</ref>))<sp/>{</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hasWork<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="274"><highlight class="normal">}</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276" refid="class_meld_process_1_1_meld_process_v_m_1aebde150ce36ba7aa08df29e59191c09a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MeldProcessVM::handleCommand(<ref refid="class_meld_process_1_1_v_m_command" kindref="compound">VMCommand</ref><sp/>&amp;command)<sp/>{</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/>dateToSchedule;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/>currentLocalDate<sp/>=<sp/>max(<ref refid="namespace_blinky_blocks_1ad7233374e9ceba1a46d8a3b748c00d13" kindref="member">getScheduler</ref>()-&gt;now(),<sp/>command.<ref refid="class_meld_process_1_1_v_m_command_1a1ecac65b2b277decf691cc50e6e35744" kindref="member">getTimestamp</ref>());</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespace_blinky_blocks_1ad7233374e9ceba1a46d8a3b748c00d13" kindref="member">getScheduler</ref>()-&gt;<ref refid="class_base_simulator_1_1_scheduler_1a1de04641e411a04965558357c58a77b2" kindref="member">getMode</ref>()<sp/>==<sp/><ref refid="scheduler_8h_1abf9fcbad9241517e70536eb685c6c799" kindref="member">SCHEDULER_MODE_FASTEST</ref>)<sp/>{</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//assert(currentLocalDate<sp/>&lt;=<sp/>command.getTimestamp());<sp/>--<sp/>not<sp/>true<sp/>because<sp/>of<sp/>asynchrone<sp/>debug<sp/>commands</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dateToSchedule<sp/>=<sp/>currentLocalDate;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dateToSchedule<sp/>=<sp/><ref refid="namespace_blinky_blocks_1ad7233374e9ceba1a46d8a3b748c00d13" kindref="member">getScheduler</ref>()-&gt;<ref refid="class_base_simulator_1_1_scheduler_1ae81ef60dad0226f78f234599c674628f" kindref="member">now</ref>();</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(command.<ref refid="class_meld_process_1_1_v_m_command_1af89ad28c9013f80d2e499e25621322b7" kindref="member">getType</ref>())<sp/>{</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="meld_process_v_m_commands_8h_1ab844515a69c0ada29de1d734c10a4b4d" kindref="member">VM_COMMAND_SET_COLOR</ref>:<sp/><sp/></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>format:<sp/>&lt;size&gt;<sp/>&lt;command&gt;<sp/>&lt;timestamp&gt;<sp/>&lt;src&gt;<sp/>&lt;red&gt;<sp/>&lt;blue&gt;<sp/>&lt;green&gt;<sp/>&lt;intensity&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_meld_process_1_1_set_color_v_m_command" kindref="compound">SetColorVMCommand</ref><sp/>c(command.<ref refid="class_meld_process_1_1_v_m_command_1abb0c6dd4ecf5a6c1dcbf14ed4e1ca046" kindref="member">getData</ref>());</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_color" kindref="compound">Color</ref><sp/>color<sp/>=<sp/>c.getColor();</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_blinky_blocks_1ad7233374e9ceba1a46d8a3b748c00d13" kindref="member">getScheduler</ref>()-&gt;<ref refid="class_base_simulator_1_1_scheduler_1a9d417c5bf3558a7344362b5c7076a56b" kindref="member">scheduleLock</ref>(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_set_color_event" kindref="compound">SetColorEvent</ref>(dateToSchedule,<sp/>hostBlock,<sp/>color));</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="meld_process_v_m_commands_8h_1ad48c71f5570e0eadc2c8cb42eb3b9f22" kindref="member">VM_COMMAND_SEND_MESSAGE</ref>:</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_p2_p_network_interface" kindref="compound">P2PNetworkInterface</ref><sp/>*interface;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_meld_process_1_1_send_message_v_m_command" kindref="compound">SendMessageVMCommand</ref><sp/>c(command.<ref refid="class_meld_process_1_1_v_m_command_1abb0c6dd4ecf5a6c1dcbf14ed4e1ca046" kindref="member">getData</ref>());</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">interface<sp/></highlight><highlight class="normal">=<sp/>hostBlock-&gt;getP2PNetworkInterfaceByDestBlockId(c.getDestId());</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(interface<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stringstream<sp/>info;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>info.str(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>info<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Warning:<sp/>sends<sp/>a<sp/>message<sp/>to<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;the<sp/>non-connected<sp/>block<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>c.<ref refid="class_meld_process_1_1_send_message_v_m_command_1ae3eb9091e9419f25146f98e4d1529fca" kindref="member">getDestId</ref>();</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_blinky_blocks_1ad7233374e9ceba1a46d8a3b748c00d13" kindref="member">getScheduler</ref>()-&gt;<ref refid="class_base_simulator_1_1_scheduler_1af6601a5e1b70ff8ee02400b4657f6a22" kindref="member">trace</ref>(info.str(),hostBlock-&gt;blockId);</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="trace_8h_1a6667b9548cdadbd55cabd90840a4edeb" kindref="member">ERRPUT</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Interface<sp/>not<sp/>found&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_blinky_blocks_1ad7233374e9ceba1a46d8a3b748c00d13" kindref="member">getScheduler</ref>()-&gt;<ref refid="class_base_simulator_1_1_scheduler_1a9d417c5bf3558a7344362b5c7076a56b" kindref="member">scheduleLock</ref>(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_meld_process_1_1_v_m_send_message_event" kindref="compound">VMSendMessageEvent</ref>(dateToSchedule,<sp/>hostBlock,</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_meld_process_1_1_receive_message_v_m_command" kindref="compound">ReceiveMessageVMCommand</ref>(c),<sp/>interface));</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="meld_process_v_m_commands_8h_1ae6834ee081e97c53fdefa37e9e6c75ed" kindref="member">VM_COMMAND_DEBUG</ref>:</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Copy<sp/>the<sp/>message<sp/>because<sp/>it<sp/>will<sp/>be<sp/>queued</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_meld_process_1_1_debbugger_v_m_command" kindref="compound">DebbuggerVMCommand</ref><sp/>*c<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_meld_process_1_1_debbugger_v_m_command" kindref="compound">DebbuggerVMCommand</ref>(command.<ref refid="class_meld_process_1_1_v_m_command_1abb0c6dd4ecf5a6c1dcbf14ed4e1ca046" kindref="member">getData</ref>());</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c-&gt;<ref refid="class_meld_process_1_1_v_m_command_1ace9cb8c6431145cbcce0e6b63d9cdc0b" kindref="member">copyData</ref>();</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_meld_process_1a1c6f6398f87d908f6eb96478a2a3bad8" kindref="member">handleDebugCommand</ref>(c);</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="meld_process_v_m_commands_8h_1a1fdaa515ab26869d8c531dd7acc76e7b" kindref="member">VM_COMMAND_WORK_END</ref>:</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_meld_process_1_1_work_end_v_m_command" kindref="compound">WorkEndVMCommand</ref><sp/>c(command.<ref refid="class_meld_process_1_1_v_m_command_1abb0c6dd4ecf5a6c1dcbf14ed4e1ca046" kindref="member">getData</ref>());</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c.getNbProcessedMsg()<sp/>==<sp/>nbSentCommands)<sp/>{</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hasWork<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="meld_process_v_m_commands_8h_1a55fafff5ad460c1bc6866206a449ca1a" kindref="member">VM_COMMAND_TIME_INFO</ref>:</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="meld_process_v_m_commands_8h_1a08a2aedb3eeaf3f9b6d948c15a180c95" kindref="member">VM_COMMAND_POLL_START</ref>:</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Polling<sp/>lasts<sp/>1us</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_blinky_blocks_1ad7233374e9ceba1a46d8a3b748c00d13" kindref="member">getScheduler</ref>()-&gt;<ref refid="class_base_simulator_1_1_scheduler_1a9d417c5bf3558a7344362b5c7076a56b" kindref="member">scheduleLock</ref>(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_meld_process_1_1_v_m_end_poll_event" kindref="compound">VMEndPollEvent</ref>(dateToSchedule+1,<sp/>hostBlock));</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>polling<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;DEFAULT&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="trace_8h_1a6667b9548cdadbd55cabd90840a4edeb" kindref="member">ERRPUT</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;***<sp/>ERROR<sp/>***<sp/>:<sp/>unsupported<sp/>message<sp/>received<sp/>from<sp/>VM<sp/>(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>command.<ref refid="class_meld_process_1_1_v_m_command_1af89ad28c9013f80d2e499e25621322b7" kindref="member">getType</ref>()<sp/>&lt;&lt;</highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="342"><highlight class="normal">}</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344" refid="class_meld_process_1_1_meld_process_v_m_1a8a42a25601facd194b779e90d740b040" refkind="member"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MeldProcessVM::closeAllSockets()<sp/>{</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>map&lt;int,<sp/>MeldProcessVM*&gt;::iterator<sp/>it;</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(it<sp/>=<sp/>vmMap.begin();<sp/>it<sp/>!=<sp/>vmMap.end();<sp/>it++)<sp/>{</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it-&gt;second-&gt;socket-&gt;close();</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it-&gt;second-&gt;socket.reset();<sp/></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="353" refid="class_meld_process_1_1_meld_process_v_m_1a33d028ed4be0a964a0ce190a70c8105f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>MeldProcessVM::dateHasBeenReachedByAll(uint64_t<sp/>date)<sp/>{</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint64_t<sp/>minReallyReached<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/>min,<sp/>min2;</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>alive<sp/>=<sp/>0,<sp/>hasNoWork<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(date<sp/>&lt;<sp/>minReallyReached)<sp/>{</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>map&lt;int,<sp/>MeldProcessVM*&gt;::iterator<sp/>it;</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(it<sp/>=<sp/>vmMap.begin();<sp/>it<sp/>!=<sp/>vmMap.end();<sp/>it++)<sp/>{</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_meld_process_1_1_meld_process_v_m" kindref="compound">MeldProcessVM</ref><sp/>*vm<sp/>=<sp/>it-&gt;second;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_base_simulator_1_1_building_block" kindref="compound">BuildingBlock</ref><sp/>*bb<sp/>=<sp/>vm-&gt;<ref refid="class_meld_process_1_1_meld_process_v_m_1ae62f21cfc77ae06cbaa7e7902b798992" kindref="member">hostBlock</ref>;</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bb-&gt;<ref refid="class_base_simulator_1_1_building_block_1a89c9a84ee50c884112db1038588ffa89" kindref="member">getState</ref>()<sp/>&lt;<sp/>BuildingBlock::ALIVE)<sp/>{</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>alive++;</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!vm-&gt;<ref refid="class_meld_process_1_1_meld_process_v_m_1a81be732afc6666859c96322e537082dc" kindref="member">hasWork</ref><sp/>||<sp/>vm-&gt;<ref refid="class_meld_process_1_1_meld_process_v_m_1a9a3c9b901a053bd32b22cfaed945daa5" kindref="member">polling</ref>)<sp/>{</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hasNoWork++;</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(alive<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min2<sp/>=<sp/>vm-&gt;<ref refid="class_meld_process_1_1_meld_process_v_m_1acea511257345071746d64f4f97af1175" kindref="member">currentLocalDate</ref>;</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vm-&gt;<ref refid="class_meld_process_1_1_meld_process_v_m_1acea511257345071746d64f4f97af1175" kindref="member">currentLocalDate</ref><sp/>&lt;<sp/>min2)<sp/>{</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min2<sp/>=<sp/>vm-&gt;<ref refid="class_meld_process_1_1_meld_process_v_m_1acea511257345071746d64f4f97af1175" kindref="member">currentLocalDate</ref>;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((alive<sp/>-<sp/>1)<sp/>==<sp/>hasNoWork)<sp/>{</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min<sp/>=<sp/>vm-&gt;<ref refid="class_meld_process_1_1_meld_process_v_m_1acea511257345071746d64f4f97af1175" kindref="member">currentLocalDate</ref>;</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vm-&gt;<ref refid="class_meld_process_1_1_meld_process_v_m_1acea511257345071746d64f4f97af1175" kindref="member">currentLocalDate</ref><sp/>&lt;<sp/>min)<sp/>{</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min<sp/>=<sp/>vm-&gt;<ref refid="class_meld_process_1_1_meld_process_v_m_1acea511257345071746d64f4f97af1175" kindref="member">currentLocalDate</ref>;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(min<sp/>&lt;<sp/>min2)<sp/>{</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min2<sp/>=<sp/>min;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(alive==hasNoWork)<sp/>{</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>minReallyReached<sp/>=<sp/>min2;</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(date<sp/>&lt;<sp/>min);</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="395" refid="class_meld_process_1_1_meld_process_v_m_1a28e2134b300ffb536c7c0173caa5932d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>MeldProcessVM::equilibrium()<sp/>{</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>map&lt;int,<sp/>MeldProcessVM*&gt;::iterator<sp/>it;</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(it<sp/>=<sp/>vmMap.begin();<sp/>it<sp/>!=<sp/>vmMap.end();<sp/>it++)<sp/>{</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_meld_process_1_1_meld_process_v_m" kindref="compound">MeldProcessVM</ref><sp/>*vm<sp/>=<sp/>it-&gt;second;</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_base_simulator_1_1_building_block" kindref="compound">BuildingBlock</ref><sp/>*bb<sp/>=<sp/>vm-&gt;<ref refid="class_meld_process_1_1_meld_process_v_m_1ae62f21cfc77ae06cbaa7e7902b798992" kindref="member">hostBlock</ref>;</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bb-&gt;<ref refid="class_base_simulator_1_1_building_block_1a89c9a84ee50c884112db1038588ffa89" kindref="member">getState</ref>()<sp/>&lt;<sp/>BuildingBlock::ALIVE)<sp/>{</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vm-&gt;<ref refid="class_meld_process_1_1_meld_process_v_m_1a81be732afc6666859c96322e537082dc" kindref="member">hasWork</ref>)<sp/>{</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*void<sp/>BlinkyBlocksWorld::killAllVMs()<sp/>{</highlight></codeline>
<codeline lineno="411"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>map&lt;int,<sp/>MeldProcessVM*&gt;::iterator<sp/>it;</highlight></codeline>
<codeline lineno="412"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for(it<sp/>=<sp/>vmMap.begin();<sp/>it<sp/>!=<sp/>vmMap.end();<sp/>it++)<sp/>{</highlight></codeline>
<codeline lineno="413"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BlinkyBlocksBlock*<sp/>bb<sp/>=<sp/>(BlinkyBlocksBlock*)<sp/>it-&gt;second;</highlight></codeline>
<codeline lineno="414"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bb-&gt;killVM();</highlight></codeline>
<codeline lineno="415"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="416"><highlight class="comment"><sp/><sp/><sp/><sp/>}*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="418" refid="class_meld_process_1_1_meld_process_v_m_1a595d19ebd0f4a22ecf4281f306e04941" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>MeldProcessVM::broadcastDebugCommand(<ref refid="class_meld_process_1_1_debbugger_v_m_command" kindref="compound">DebbuggerVMCommand</ref><sp/>&amp;c)<sp/>{</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>map&lt;int,<sp/>MeldProcessVM*&gt;::iterator<sp/>it;</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>aliveBlocks<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(it<sp/>=<sp/>vmMap.begin();<sp/>it<sp/>!=<sp/>vmMap.end();<sp/>it++)<sp/>{</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_meld_process_1_1_meld_process_v_m" kindref="compound">MeldProcessVM</ref><sp/>*vm<sp/>=<sp/>it-&gt;second;</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_base_simulator_1_1_building_block" kindref="compound">BuildingBlock</ref><sp/>*bb<sp/>=<sp/>vm-&gt;<ref refid="class_meld_process_1_1_meld_process_v_m_1ae62f21cfc77ae06cbaa7e7902b798992" kindref="member">hostBlock</ref>;</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_base_simulator_1_1_block_code" kindref="compound">BlockCode</ref>*<sp/>bbc<sp/>=<sp/>bb-&gt;<ref refid="class_base_simulator_1_1_building_block_1aa42bdf9c46446055c12a4eeee9134e99" kindref="member">blockCode</ref>;</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Send<sp/>id<sp/>&amp;<sp/>set<sp/>deterministic<sp/>mode<sp/>if<sp/>necessary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bbc-&gt;<ref refid="class_base_simulator_1_1_block_code_1ac07b9798cc486160e3ec57356ac3960a" kindref="member">init</ref>();</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aliveBlocks<sp/>+=<sp/>vm-&gt;<ref refid="class_meld_process_1_1_meld_process_v_m_1a29f1e29b68fb12cebb95828d37ebefcd" kindref="member">sendCommand</ref>(c);<sp/><sp/></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>aliveBlocks;</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="433" refid="class_meld_process_1_1_meld_process_v_m_1ae9758d22aa56b9f8d0b87cf6709c8cf0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespace_meld_process_1a89030efced0ddbe796a6be27424b3b10" kindref="member">MeldProcessVM::sendCommand</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/><ref refid="class_meld_process_1_1_v_m_command" kindref="compound">VMCommand</ref><sp/>&amp;c)<sp/>{</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_base_simulator_1_1_building_block" kindref="compound">BuildingBlock</ref><sp/>*bb<sp/>=<sp/><ref refid="namespace_base_simulator_1a2a1f7a0fc6c69525e369dc9226e1a23c" kindref="member">BaseSimulator::getWorld</ref>()-&gt;<ref refid="class_base_simulator_1_1_world_1a5242c801311b599d02cd5987ea165900" kindref="member">getBlockById</ref>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bb<sp/>==<sp/>NULL)<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;}</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_meld_process_1_1_meld_process_v_m" kindref="compound">MeldProcessVM</ref><sp/>*vm<sp/>=<sp/>getMeldProcessVMById(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vm<sp/>==<sp/>NULL)<sp/>{cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;vm<sp/>==<sp/>NULL!&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;}</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_base_simulator_1_1_block_code" kindref="compound">BlockCode</ref>*<sp/>bbc<sp/>=<sp/>bb-&gt;<ref refid="class_base_simulator_1_1_building_block_1aa42bdf9c46446055c12a4eeee9134e99" kindref="member">blockCode</ref>;</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bbc-&gt;<ref refid="class_base_simulator_1_1_block_code_1ac07b9798cc486160e3ec57356ac3960a" kindref="member">init</ref>();</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;sending<sp/>command&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>vm-&gt;<ref refid="class_meld_process_1_1_meld_process_v_m_1a29f1e29b68fb12cebb95828d37ebefcd" kindref="member">sendCommand</ref>(c);</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="444" refid="class_meld_process_1_1_meld_process_v_m_1aef4b4366364c203459ef4c962b37639d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_meld_process_1_1_meld_process_v_m" kindref="compound">MeldProcessVM</ref>*<sp/>MeldProcessVM::getMeldProcessVMById(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>map&lt;int,<sp/>MeldProcessVM*&gt;::iterator<sp/>it;</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it<sp/>=<sp/>vmMap.find(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it<sp/>==<sp/>vmMap.end())<sp/>{</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(NULL);</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(it-&gt;second);</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="454"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Users/pthalamy/Desktop/VSimRef/VisibleSim/simulatorCore/src/meldProcessVM.cpp"/>
  </compounddef>
</doxygen>
